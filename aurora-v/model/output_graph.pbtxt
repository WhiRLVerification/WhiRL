node {
  name: "input/Ob"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 30
        }
      }
    }
  }
}
node {
  name: "model/flatten/Shape"
  op: "Shape"
  input: "input/Ob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/flatten/strided_slice"
  op: "StridedSlice"
  input: "model/flatten/Shape"
  input: "model/flatten/strided_slice/stack"
  input: "model/flatten/strided_slice/stack_1"
  input: "model/flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/flatten/Reshape/shape"
  op: "Pack"
  input: "model/flatten/strided_slice"
  input: "model/flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/flatten/Reshape"
  op: "Reshape"
  input: "input/Ob"
  input: "model/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/pi_fc0/w/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\255\031n>7\277\\=\177\231\334\275P\211\326;*X\r\276\271J\034>\215\263\304=#\272\326\276\241\336\005\277\276\212\217\276\343\267!>\177\\\241>`\343\200\276\267\035\222\276\243fX\276;\014\222\276\223\342v>\255l\221>\221;\271\273\232\215\332=o\352H>\r\373\334\275\312\256\262\276<\225\236\275\316\351\203\276\220o<>\214\253\205>\262\0105\276\327T\017?Cs\226\276\216\201\026>*\265\261\275\346\301\265\275\024#p>\310\224\230\276L\344\244>\225v\036=\243\364g\276R\324\r\275rE\256\276>Jd\276\357\342,>\261\206,>\020\007\001\275\303s\343>\242~*\276t!\233>\234\313\214\275biX\276Z\257\257\276\226a\275\275\341fo=f\245\332>\276+\002?Y<\350=\006\304\274\276\376\230K\276\365\332\004\272\225o\252><D\026\276\r\320\037\276)\010\006\274\242\244\332\276\237CY\275\222\330C\276\213\215\340\275*\227A>\2418\235=\220\237\367=\275\276_\276TF!\2760\004Y>\260\323z\276>\306\334\276 \310c>\3527\032>U\350\272>\017r\323\276\017\233\n>\375\276\210\276E\263P\275K\320&>c\312\370>\022\010\370<|\337E\276\312\205 >/\205*=r\367\252>U\323\023\275\233fc>\254\360\212\274\0252\010?X\266\257\276C\312\320\276\337\3226=\261\277\215=\262{V\276\256\253\260\274\336\240\236\276\",:\276\214\301\024?\221\010\240>\305D\225\275\034\373\r>\227v\267\276\006J\243\275\333p\341\276\013\227\354\275\221N\027\276\004t\200>\200\213=\276S\344\225>\331\026\306\275\243\322\240\276\363\333\331>N\t\025\275\030w\351>}\315u\276/\332\030>\255\013\220\275O\363\245=\277\262\023>3\242\265=U\025f>[\335\t>\267r\247\276\215R!\276\225\237\016\275\307GB\276\316\037\210=0\337\316>\206\271\354=\236\214-\275\301\246\035>\347$\334\275:X\253\275+7\254=\305O\344=|\275\032\275\010\3775>\032\320\266>\344\356\247>\307?\350\276H\323v\276_\323|=\034\322H=B#\035\276X\r\200=\000\330T\276\230\327\230\276pw\226>\354\227\001\275W?\216\276H\243\002?\034\023\205>d\027y>}\000p>;i\206>r\010\r\277\324\363R>\250!<>S\217}>\354\224\016=\037\206\204\276\370>\013\276<#\030>\334\333\244\276\214n\316\276\017H+\274v\206|>\276e\304>\345,\356\276\3153n\276\322\224\205\276Gw\247=R\023\215>\247w\271>\216\004/\276\344p\267>!\233\214\275\254\312\211\275\261\266\306=l\227\021?\306\200\031> \354f\276}\367\370=o\027\356\274\304\333\034>\333V\004>\177\035\326=Gb7>\372\000\240>\246G=>\034\326\250\275\362\252|=\274\014\247\276k\271\315>\377\207\222>\331_o\276b\345t\276\234\322$>\215\247\267;\343\372[\2766\327\320\275\010\331>\276k\315\274\275@^(?s\247\007\277T\374j\276m+\344>\322\352\255\276\177]u\276p\344J>\265_\357\274\2224\217=\034\340\362\275\177\264%>\270/\202>o1\234=\354%A>_z\246\275\1777\347=9}\t\275\252\362\013>\276G\257>o\2121\277#9%\277\214\371\261=\0131t=\375\363:\276a\335n=TK*\276^tq>kp}\276\246\316>=\036W\">\2609\365=\337\325z>w^\033>wau\275\301\270\233>s\3051\276rR\200>I\270\376\275S\351\223\275\213.\351=\224\307.\275\304Mq>|\026\235<\001\242\263>\\\347o\276U{\342\275|t,>m;\211>\357\252\200\276_\236=>\251\256\232\275px\222\275n^W>\275\221\366=\305L[<<\367\033=`_(>\206\233q\275\225\234&>\251\375\026>\361(3\276r\353\023?2i$>^\030\271\272W\013\254\275\031\305\221=7f2><\323\033\276\204\222\224;\377\315\214\276\201\0251>;\tc>\026\343\234>\373\335I\276\233\010\322>\224Pt>\2532t>\230\025\200\276\220;\202\275X\366\200\276\014Z\036?u\374\016?\325\253\331=\247\332\037\277\023\305\260>Q\277\337\274\205\2660=-\202\371\276\216,\376=$\353\201\275\032\344\315\276\356\226\365={T\375\275v3\336\275\202\203\376\275U\345\001\275\033\313[>\324x\023>\200\004d\275\337YR\2759<\002\275A8\"?\030\031B\275\\s\033\276zd\272>1\266`\276\355J\025>8-2>\214\310\177>X\372p=\260\335\225=\327\255\201>\221\203p>.`\216\276\252\270\315\275UcX\276\220\001;>\375\315\243<P\032v>\240\3062\276bE\001<O\233\022\277\254\227u\276K\300~\276\256\342\014>@\035)>\031>\230\275\277T\305=}V\352=/k\300>(\347\240\276d\341\023\276\022j\320\276j\366\331\276\035\235\273\276\2035x\276\022\020<>8J\244>\0223\021\275\233\303\322\276\242t\244<\344\310\253\275\231\333\202=\212\241\247\276p\202a\276\242\t&>\310\322\330\273\3204\251>\201\026[\2752\202\206\276\020\336\000?\\\274\010=\025\276\r?\2022\'>]\357\007\276r\317\213\276k\365\300>\226\'\206>\220\344\001\276\022,O=\326e\233\274kX\t\274\357^\242>~5\344\275I\214\252\276\222,\210\275k\362(\276E\036,>)\332\305>\245\032p\276\317\310\033\276\250\374\207>\244\331\267\276\352h\003<^\006N\276\237\213\026>l\027+=\355\303\273\276$]\222>\001Y~=T\035L>\331R\032\276z:i\276c\273I=\201j\252>\347\247\330<\002\250\035=|\317\313=W\270D\275\324i\034\276&%\217>\000\335\310>\225\022\250>B\305C\275\320\375\347>\246Hf>%\250\335<\276\r\017>}\022\252>\325\243[\276\321X\205>\275\036\333>\367\001\302\274\371\364 \275\371_\344=-\317\243\2763K\211\276A\214\023\277\263\313\203\276C/C\276\370\345\206=\263zy>\247\344i\276z\351\270\275Y\300\224\276\030p\373>\022\216\354=\340\201\032\274\240d\021\276\0143\352<m$\322=\301\023\301>\250EL\275\365pD\275h\266P>\317\220\270=\031\234\025\277FD\330=\"\302\303>\322Yt>KA\326\276\307&\030<\276\332\224>;\257 >\202C\366>j>\'>\256\030\302=\226\350\247\276\3466\302<\300\345\013>\277\'d\276\235\241\"\276\242\302\275\276\244\037\017>V\035\303\275k\203,?\004\321\006\276\363F>\276Zp\032>=\013\005\276\263\014\024>5\375\241\275\313Bj\276Z\325%\276\257z\007\277\303\220\224=\3121\020>\257\345\232> <\211>\240\237\007?\311\354\246=\245g\213\276\253\376\371\275p\276[>\352U\007>\207z\212\275\213\031*>O\010\212>\242\301,>s\231D>p\262\314<\260y\262\275\265F9\276#\262\200\276\032m\333=\232\034\266\274\023O\235>\244a\321\276\353\234\225\275\216\254n\275\340\274\323>\357\240\014=\n\035\371>o\366Y=\331e\230\276\226\330s>\n\271\257=\241\t^\276B\t\212>;\215\307>\237\240\206\276\270\367\264\275\242pV>\035\351\007\276\215\270s<\322\232\243>\317\252)\276<\310 <m\210\376\276h\263\311=Il\340=b\017s>\212 \362>\237w\316\275\310\n\264\275\332\016]\276\233\206\204>\216\334/>\363~\323\274i\344\350\275H\210\216=\225\363\332\274|\017\213\276CUG>X\343\304\276\210\366\010=v`\013\277&\026\201>\352\206\353=U<\354\275\211\255\220>\313\223\234>r\361\363>D\226P>\222C3=U?\320=\353\207\376\276\307\n\n=;-\007\276\313\013\330\276rW.\276}gN\276j\231\236\275|R\362\2759\247\017\276\250\346\227<\334~\232\276@\237\276>POp\276\313\257\214>g\0235\276b\343P\276\026o~\276\241\036\270<u\014\006?\'\264\203\276/\276\247\276\n\303\243\276\240\253\233\276\373D\372\276\277 \r?c\017\023=wK\332=\036G\r>W\236\270<\235R\003=\023\017M\2761\323\301\274\356Q\214\275\316\206\034\275\377\214Z\276\247o\037>\021\000\205>C\234%>\237\303\255\274\3410d>c\215\370=I\253\235>\204\322\212>\354\273\211>[AQ\276\262k~>\305\230\315\276\303[o<\213\002\005>\314\234\325\276\374*?\275\247\332K=\235\000^>P>\236>d.\232>\244/Q>\233\356\243>)@\261\275\337Q\245>\272[\031>\341\334\"\275\030g\205>\307>\027>H\277\325\275\n/\275<\3534^\277&z\201<\243df\276\313\362\261\275\304\374\250=\206|J\2758~G\273\272\013P>o\275\024\2757iv>\264\301r\275\262}\014>o\300\271\276\000\013u>9\223\204>_\372\321\275\356\035\354>d1\352>o\350=\275;^\243\276\320\246s>\227\362s>G\336\024<\373Z\332\271\023\030T\274\\H\300=m\000\325=f\200\230\274\332\214\020=\243\235\274>R\021\002\277\256\303\354=\212\022\222\276\344\003~\276\250\313\177\276\027hn\276\257\347\277\275\030\310\211=\024#\035>\202\265\362\276\3635\265>\2763u\274\326\'s<\207\360\005?\223Cf\275K\332-\276\177c\333=\243\243v\276\210\371-\275\223\313\003=\374\345\224=9r\357\275\034\326\235>\226\013\201=\3213\037\276z~\344\274\017\027\003\275I\207m\276\004\234\241>d\301\321\276\236}\204=\nn\316\276\001H\375<X\222\'\275\361H/\273b\264\274\275+\216+\276\335\217\036\274\274b\032?\235\332\323\276\365m\200>|6G\276\242\023\t\277{s\035\275\276\312\'>\224XL\276)\021|\276\255\370\235\275\330oY\274\365\352\345>f@>>}\354\303\275\245\370X\276y\363\254=\217]\343=\335*3\276\213\226l\276\254\375\250>\025\265v\276\275{\271\276\215\023\212>\240\352\002\276q\375\005?\362\243\007=\266\237\221=:\366\323\275(\010*>\360X\237<\340\237O>,\337\313\276\272s\\>)wC\274\232\021 \277q\203\204\276\344l\234=}vj>\255[5\276\214n\367>\336D\215>\226\341>>\n\274\004> \255\353>;\007\340\276\271\214L>W\261\332>\263\350\221\276?be>%\344\t>\262s\231\276/!\211:\272-\377=\361\241\371\275\007\305\027\276\025AO\276#\342;>\343\265Z>Y\254\302\276p\255\273\275\261W=>\"\366R\275\360\332j>g\270 >\240\244\225<9\257s>\354\014\200\276\261E\303>\014\271\023>*`w\275;kX>a\030\223\2762\032Z\276\340\203:=\376\340\240>g(\016\276\340\224\202>pT\034>[\222k>\243!\355\275pc\231\275v\314f\275d\n\241\276l\005k=k\004D>\365\302\236>&\344\304\276\342\262R\276\233\0364;0T\322=R<\317;Z\036B\276aQ\253=\374K\271>\3162\256\276:Y\307\276s^\007\276\360\303\376\276\367V\203\276J\335\361>\3508\230\276WY/>\306\020L>\251\3226\276\355\317\340\2749\347\331=tR\214\275\266\231\244\275\007@\266\272B\016q\276\333\010\362=\201\277\230\276;\371\213<\220\354\237>q\026\302>$I\361<\215R\356>\020\233\005>1l\324>\035}\322\275\"!\n?;\t\235\275\222\332\037>\352\272\021?\242~\260>\256\2203<\333<L>l\023\253\275}\350\333\275\243l\254\276;\010\">\242\236/>N\016\230>\030@\"=\232\354^>1\312\276=\337\213\027\276\017\317\024\275\356\217\000\277e\225\336\276)\273\227\276d\350{\276K\231\262\275\243\031\001\276e@I\276\032\365\275\275\321\264U\275\010-x>\033\365\335=\3213\307\276\343\264\341\2755\247\232\275\256\177\214>\301\240=>\366.\034\277\202.o=\261.\323=\\t\261>\254\225\357\276\327y;>\033\260\n\276Ek\260\275q\226\n\275\353\210\020\274\301K?\274\271sd\275\210\r\321\276F\325\266>\364\032\346\275\252(\350=\232\230\257>\016]\\>\230\254\004?\244`\243\276\363\301\010>\004;\n>H3W\276\373X\225>\010\335\025\276C\325\010?pC\034=[\344\370=\315\031\265>!\332Z>k\306\027\273\273\227I\276\331\016\347\274\010c\001\276\232\020\260=`\252\025\275%\374C\276\373\304\251>\026>\333\275\257MA>z\247J>^<\305>6\246\300\275[b\036>\275)\326\276Tq6>h\222V>\302\306\346>@\354\256=t\\v>\371m\005\276\036\351\006>Fg\347\276n\031\274>!=\360\276$\306\017>\\r\032\276\037\006\341\267\211\354|=h|\354\275\227\224\363=0\337\001\276\005\331\346=SY\336>\222\210\264>\255:8>\307\025\373\275\316\2747\2763\276\351\276\003\254\206>\242eK\274h\"\300\276Nw3\276o\000\223\275\250\251\323\274)aa\276\246+\201>\304\212\352>\234aR=\217\261\256\276ed\240>\246\037\222=b\245<=\'\226\245>r\276\027\275\361\3450>9\017\344\275\252\322\222\276\233;\025>(\320\252=~;\215\276\215\265\240\276\033\362\244\275k0\013\276\325\314\233>u\234W\275\331sM>\026y5>\252\352\262\275\366\266\026?;\314\310=\237\310\027\276\317\201\024\277\361\230\307<\266\220\325>v\004A\274\212\353\010>\004\214]=\034\023\032>\037\224?\276\234S\217\276\375\307\271\275\336\256_\276\013\3743\276\332\025m=\224\316\370=6s\024?X\255\026>Aw\343\276\017_\254>\362\004p\276=m\014\276\375\312\353\276Vm\314\274q\330\221>F]\017;\251%\005>\261K\204\276l\035g\274\354:f>`\"\025\276\332\245\021>\205c(\276\217\005\340<\342\336>=\'\020\313>[F\207\276\334\375\304<\303nX<\325\367\267\276\222\322\332>"
      }
    }
  }
}
node {
  name: "model/pi_fc0/w"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\237\374\021?\n\304[=\177\231\334\275\177S\206\276\214\374)\276q\352\362=U\026\346>lL\323\276\241\336\005\2777\247\203\276\232H\177\2768\210\257\274\211\231\224\276\331\256?\276\305\'P\276\226O\005\277\002b\001?(@\355>\353\354\215=\232\215\332=\223\376G>>h$=\234\035\342\275\216\204\224\275\243\227e\275Et\001? /\313>\226&6\276\316\230\033?cZ(\277\216\201\026>\266)\205\274M\032\317\275\355\332<>\310\224\230\276*\337\247>\367\355\260<\252\314\213\276\364>\240\274q/\304\276>Jd\276\244\354\374=\037\352\226>\232\356\224\273\3466\334>\263\315\201\276\205\274V>\371\251\347\275~B)\276\032\207\242\276c\2102\276\341fo=\262\343\305>\302\360\010?\007\376\356=4\014\316\276U\345C\276a\321\315\274\036\000\261>L\026T\276Z\347\372\275\370\230\226<[\321\334\276F\025\020\274\334\n(\276\327[\007\276*\227A>|\363\335<!\313\317=\2702\214\276\332\241,\276_\2172>\260\323z\276\343\226\364\276x\230\247>\252Ko>,&\250>\227\373\367\276\024q\271=\232\036d\276\355a\305=\032\2613>Sd\227>\022\010\370<\235\"U\276M\013\002>\364\353\203:\036\021\274>W\013\335<\364\257\027>\265f\315\275\016\020\372>\001%\270\276,\337\317\276\377\337%=\336\370\036>\022\237\'>I\027\200\274\336\240\236\276\262\227\370\276\024\307\017?\020\236\211>\240\300\237>\001X\035>\227v\267\276P>\355\274\014\273t\277\210^\375\276\\\0107\276\233H\277>\274\004G\276|[h<,\327\353=a\240\341\275]:\372>N\t\025\275\026<\351>\325u\025\276\010\367\321>\273\220\201\2754\203\215>%)\006?\367[\253=\321\311c>\266\205}>\037\021A\277\215R!\276\025u\205\275\026?F\276\303\264\211<0\337\316>\255M\355=\265\361\211\275\010m\350=\364\272\261\275*4\376\275+7\254=0\354\244=\353\376J=?\314G>%\317\262>`$\206>\2546\t\277\351\033\224\2768w\361=\023y\235=\373\nh\276X\r\200=y\'~\276\377l\215\276\235.\233>\";j\275\267^\206\276*:\373>\035\'\207>\021\2227>$\357\213>\254D\216>\322\036\016\277\002\277w>\227\221[>\304If>\354\224\016=\341#\242\276\332\205+\276\334\266\274=\351\275\251\276\014\252\341\276\017H+\274i\215N>q\325\361>w\204\306\276\003d\215\276\346s\247\276\202\323\256<+x\241>\274>\001?\335y#\276}\311K>!\233\214\275\363\265\244\275\313\177\202=[\034\007?\352\2764>\363])\276t|`=\242\000\343\275\002\222\366=>\n\333=\361\231\316=\350\3642>\221\314\316>>G\037?*\201\221\275\362\252|=\215\302,\277\353D\304>\301f\177>^pQ>\017\tm\276\234\322$>\313\310)=\017\0077\277\264\324\n\277/&r\276R\022\374<\010]-?\306\275K\277n\267\241\275\030\002,?\323\332\221\276\177]u\276\314\377K>8P;=sn\276>H\310\346\275d\317\274>\307\2572?\212\346\216=\021\301?>\r_\253=K?\305\2769}\t\275S\253\016>\221\351\257>}\345:\277#9%\277K\265\253=V\035\337<\246\206`\276T\025\246=\021LP\276^tq>\'\320\206\276\330\333\314=.P->\252|\362=qNL>\263\222\240=\003\217\337\275\273\375\276>=w\026\276\301\357=>I\270\376\275\2321\332\275\261\247\007>\214y\364\274\307\027_>\215o(=\375\226\254>\313Is\276\276\0006\276\031\233W>Q0\215>\250\327\202\276\255\345Y>\033\216\304\274\206I\276\275n^W>O\267e=I\272\271\274\261!\214\274\366\231+>\3656\314\275\225\234&>K\340\320=\256\347\237\275\005\306!?\335\302\370=\262\t~\275\355$\004\276\022\227\304=\3558\242>\203\363\372\275\022\314(\276\377\315\214\276\377\247&>*KD>1)\213>\320\2321\276\362\017\370>\021_3>\313\344@>Z\320\225\276\307\000\240\275q$\206\276\0323\035?T\034(?z\234\327>8O \277\023\305\260>\351\333\302\276\233\234\251<\315v\377\276\362\230\333>\260\207j\275\032\344\315\276\2111\007>>/\357\276)\226\311\276L\301\206\276pU\246=\321\303c>\004.\246\275\343Q\323=B\363\212=\177OI>A8\"?s\227:\275$\352&\276I\207\016?6\326V\276\305i\335>;+\"?\025^\262>\214s\\=\266_,>\320\307\001\276\221\203p>%\300\007\276^\305\315\275\203y|\276\220\001;>y\365\201<\273\nK>\207\331S\276\035\021\334<\r\216\033\277\254\227u\276!3\205\276jo\'>\016-4>V\276\223\275\324\324x=\225lP=\213\331\250>\320\216o\276d\365\370\275D`\353\276j\366\331\276\364\236\310\276\035El\276,pG>\263Y\235>t\022o\2739F\327\276\223\324<<\t\313\034\276*?\334=\207\365\244\276\360\333e\276Fb>>\305.\233=M\353\235>\201\026[\275y\177\261\276\274\271\355>\000\250\263\274\363\213\026?>\342\377=]\357\007\276\201\222\241\276\365T\356>\252\323\222>\'\236/\276\014\326\014\274\341\351\216\275\'p\367;\364\025\341>\241\350?\275\311T\004\277\222,\210\275\367-0\276\231{\003>H]\273>v\312Q\276\rv\242\275&\022^>\325\336\335\276Q\334\006\275<\310J\276wM\314=m\254\027=uB\204\276\242#N?\257\215z=T\035L>\301@2\277\352\025}\276\233\nQ=\363\006Y?\336N\327<\002\250\035=\241D\315=\355\033\351\276\320\312 \277\341ui=B\233\364>67\252>\301Q\341\276\177\325\273>\261v\007?\200\324^>\276\r\017>\373&\253>\353\036\262\276\351\275\023?\024x\342>\237!B>\243\354\351>\035M\'>\253\321\245\276~\354\271<\317\223\225\277\263\313\203\276n\373b<?`\201=\233\336V>\247\344i\276\314\366\310\275\267\363\256\276\204\323\353>\ni\005>\371\205+\275\240d\021\276y6!<\233\327\312=S\363\307>\266xT\275\315=\303\275\253\234\025>\210\362@=x\235\377\276\235\307\001>\266\277\260>\322Yt>\224\304\335\276\014\355.<q\010\231>\304\246\023>k\n\005?\227~!>X<\246=\360D\314\276\330\244\220=\240\371\016>?\201h\276\204\016\t\276\344\213r\276\255\201\363=V\035\303\275_\013\r?/\262,\276\266/p\276\232\017l>\371\200-\276\263\014\024>_\323\372\275\223\200N\276\000\214D\276\344\210\022\277\265Br<jg\304=o\226\213>^\t\261>\240\035$?\nA\344\275\245g\213\276u5\001\276\361\211\'>\025\305\035>\267\335-\275\006WI>t\\}>\302]y=\2533\030>\237\234m=x#P\276\347E>\276\2111C\276\25503?\250\241\303\274\023O\235>\352\366n\277\024\031\277\275\232p\273\2748\026\203?B/\322<\n\035\371>\373Gd=\252\2714\277\317#\217\276\024[\026\276\3271H\276b\201\247>\324E\231\2755\232 \277ua\305>b\204\256>\035\351\007\276\245A\227<-\244P>\372Uv>\036\362\270<\320\327\265\276,\252\026?\020\361\032>\331Qi> \212S?\177U8\277\310\n\264\275\255W\323\274\353M\203>:<\r>\363~\323\274`\010\002\276\235\322c<\004\230W\275\326\237\203\276\3154(>X\343\304\276g*\216;w\335\022\277\027\'\210>u\317\331=B\325A\2764\307k>\013_\206>r\223\014?\025{i>\377bz<U?\320=\013\367\377\276\272$\340<\355\271\375\275{=\341\276\340\035\002\276\'\342S\276Z\203\303\275\026@C\276\027x\265\275Iq\222<\226\253\234\276Vy\314>\177\333\273\275\021W\204>g\0235\276x\213\251\276Lq\216\276%X\321\274\254?\036?\355\032\230\276/\276\247\276V\371\272\276S\262l\276j\003\005\277\364\036\003?}\336!\275\357_b=\3147\367=\276<\331={\002+>K\351\322\2761\323\301\274\234d\220\275\340\366\246\275tbF\276\2272;>\3044\242>TT\370=\255\204\035\276\223\006:>\370\027\025>\321\223D>\033?\210>\266s\267>\325\346\037?\017!w>\305\230\315\276\330s\021\277R:\355=\0032\321\276\227QP?\315\340$=\235\000^>;\376\237>|\224\013\276\364\376\016\277J\216\027>\3242\374\274\330~\252>\350\'\373\276\246H\361\276\373\376~?\005\301:>H\277\325\275\n/\275<d\237~\277\014\246!?\017\314S\276\242\3614\2768\234\013?\017\324\022\276\276#\253\274\250\365E?\033\006R\2777iv>0\3225\275\211\230\022>\211]\313\276\000\013u>\023 s>\336\277%\276\300a\332>\250\373\365>\366\342\230\275;^\243\276\026@P>\362\006>>$\363\204<\373\213\177\274\261\214\364\275~\252\021=\251\321[=P)\336<\213\212\231=\326\302\256>R\021\002\277\374n\355=o\265\227\276>\014n\276\303B\217\276 \371H\276\375\231\313\275\201\204 =\376\031\242=(\236\322\276^\342\257>de\235\274\030\231!=\336+9?K\271\215\275K\332-\276\225f\034\275\022f\213\276<\276\276\275j\2319>\200\310\005=9r\357\275&\277\205>\003\'\327=V\242o\276U\217R\275\334\234\335\275G\232\221\276Oj\200>\003\250\313\276\003\214\207>\016D$\277\001H\375<\313\311.\275\261\r:\275\001\251\345\274\374I.\276ka\013\273\277\332\035?\235P\r\277E\341Z>\322\263\010\276\373\2050\277e(2\275R\313W>\345\036X?\262\312\200\276\255\370\235\275\0073\034\277\222\001\341>\021\321M=\371d\200?\245\223_\276y\363\254=\346c\353=\365z\025\277(;\231\277\251\321\306>\2751L\276$\300\313\276\263\267\376\276a~&\277\341\023\307?\206\013\001\275\266\237\221=:\366\323\275\240\205\336\275d\204M?\006Td>\214\370\'\277F\241&?\013|\221\276GV\'\277\337b\003?![M\277}vj>5\356\333\276B \001?-8u>\226\341>>\211\245\310=\016\226\314>G\340\003\277\370\035t>\036;\314>\263\350\221\276\235\036;>.\304\202=\334%\234\276w\326\216\274Q\376\307\271\225\007W\276\245\325V\276)\311;\276\222\032\177>\345d9>Y\254\302\276\"\002\273\275Mu->t\370\274\274\364\362J>\024:9>L\315<<?\217E>j\376\246\276hJ\354>\235s\363=\365b\204\275\\\317g>S\376\232\275zyh\276\340\203:=\373\031 >\007\375-\276\322\177Y>\265\341\236>LIB>\243!\355\275\337%\370\275Z\305T<\250\335\316\276g\273]<9]\257=\005p\201>\255m\336\276IO?\276\342.`>\353\326\030\276R<\317;:\\C\276O\276\001=\200\250\320>\264\263\257\276f!\246\276g\000!\276\032\267%\277h\207\215\276I<\006?\226\036\363\2769-*>\016\003\210>\237\252s?o)\004\2759\347\331=\277\312/\277W\243\234\275|\310\362\275\001%}?!>\364=\201\277\230\276\343\365\264<\331\372/\274\232p+\277\250\246\217>iW\371>\376\272\325=\302\025\355\276,\004\034\277\023\'\335?*\257W\276\222\332\037>\352\272\021?\322\316^=Z>h?\227\005l>\020\250\332\276\302\\|>\335O\r\277\351\357\t>\364[\210?s8\021\277\032@\"=\263\234\t\276!\"\r>\034M>\276\017\317\024\275\255~\013\277\3073\377\276\367H\342\276\327\034;\276\255\024\356\275\243\031\001\276#\007|\276\204\3372\276\325\303\233\2759\254h>cm\020\275@S\004\277\371\036@\276\223\331\254\275:-\302>\030!\023>\366.\034\277\002\205p=)x\254=\032j\311>\227>\374\276\237dC>p\315\023\276\350\r\025\276\316\304\345\275\276D\314=\316\"^\275{\331u\275\247\014\317\276\363T\022?~k\375\275\252(\350=m\237:>\016k=>M3\353>\265y \276\314\343\276=\004;\n>\002\327\202\276\363[\274>I\324c\276um\374>V\225R\275K\017\220=\2338\227>\004+\203>\305~b>\243v\357\276\331\016\347\274\020s\002\276\321?\"=\210r\224<\034\017C\276\342\177\277>xe#\276\227\2660=e23>\177\323\341>\327s\213\276\'_\031>\323\226\270\276\306\231\272?<\207S>\302\306\346>\211(\034\277\367!~>\320\'\254\275R\223\277?\317\203\353\276n\031\274>\263\374\356\276\363qk\276\236\003\251\277\263S\302>\325O\241=$\312\326;\254\245c\277\201,@\277\320\222\265?d~\204>\222\210\264>\255:8>\233\232\367\276\274 c?\362\r\345\276\016\356\032\276}c\357>B\265\017\277\324GA\276\357M{?8\307\201\277)aa\276Gh\330\275C\233\010?\017eH<\217\261\256\276W\017\205>@C\356;z\231\343\275\247\335\326>\026\215\210\275\361\3450>\004\333-\276\021\265\301\276{#\310=(f\240=\375\266\330\276\221\246\343\276\315\3636\276=\2740\276,\213\352>\023w\326\275\331sM>\226\3165>\207I\343\275]\346(??\274\253=\226\362 \276\244u\026\277-d:\275W$\255>\302\032\016>n\211\224=C&L=\345\252\021>\222\335\005=o6\225\276\375\307\271\275G9\276\276\t\222Q\276lb\361;(\013\224>\211\236\t?X\255\026>\343p\372\276\350\267\331>\203;\256\276\371\371<\276w\366\017\277\257\253\312\275!\227k>\252\317\360=t\023\275>\251\216\n\277l\035g\274ENe>\030\032I\276*\nN>4\261(\276\367\375\020=\310u\014\275J`{>\275\325\223\276\350\200\233=\263\035N\276\342y\272\276\221Q\365>"
      }
    }
  }
}
node {
  name: "model/pi_fc0/w/Assign"
  op: "Identity"
  input: "model/pi_fc0/w/Initializer/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "model/pi_fc0/w/read"
  op: "Identity"
  input: "model/pi_fc0/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "model/pi_fc0/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/pi_fc0/b"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "o\273\013\277\377CE\275\000\000\000\000!\340\366>O\354O\275\213\362C\276\361\232\343\276\251\372;\275\000\000\000\000\336\277\345\275\tx\236<\325-\020?\223E\346<\365\032\241\276\241(u\275F\016\271>\321\301\003>\213\021\233\276\310\0039<\000\000\000\000\314?\2539\206\217I\276\240\255\224\276\306\330\273\274\006\274\265\2747\014 \277w\371i\276_\250\235\275S\207\226\276v\261\t?\242\360\341\272\354<w\275"
      }
    }
  }
}
node {
  name: "model/pi_fc0/b/Assign"
  op: "Identity"
  input: "model/pi_fc0/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "model/pi_fc0/b/read"
  op: "Identity"
  input: "model/pi_fc0/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "model/pi_fc0/MatMul"
  op: "MatMul"
  input: "model/flatten/Reshape"
  input: "model/pi_fc0/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/pi_fc0/add"
  op: "Add"
  input: "model/pi_fc0/MatMul"
  input: "model/pi_fc0/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/Relu"
  op: "Relu"
  input: "model/pi_fc0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/vf_fc0/w/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\036\211\336=8\232\013<\265\027\347=\252\254\362=Uq\265>e\032\371\276u\022\035>d\"\231=N\216\241>k\347\216\276\3054,\276\351\207\247>\0040\245<F\240\211=w\007\270>T\274\236\276}v\273\276]c\004?5`\253\275\310\177\211\276\335\030p=S\241\"\274\274\022)\276\004\220\354>\273\213g\276\023>\014>\365SC\276V\221\026\276\034\026\332\273\351\274\204\275\\VG>Q\376\271\276\2417M>\326\321\310>\030\223!\275\203\254\343\2766\321\201\275A4\273=F\362V>\221\362U>\357\361;>#P\021\276\223\345q=\003\0379>\324O\310\274iM\016>y\007\255\276h\375#\276\210\347\010\2779\360\362\276\017-\245>N\361\366>\362\346\334=\204\027\233>f\377\177=>F\246>Lz+>=^\353\275G\222a\276cZ\034\276H\325\027>\177\217\030>\362\016\002\276\313\320\032\276\220\t\341=X\357W\276\005\026\260\275\303\247\365\276\226c\024\276\237\241\233\276[\004\251\276\275\341\270>\217\204F\276,\255\306=\362\032\261>@`\220\275\361~\357=\250\023\376\275\337\341\212\2765Ya\274F)y\276\220?\325=\375_\237\275\270\275Z\275\334.\324\276\215\177\000\276\265\307\201>\025\356;\276\003\355\342\276\324L\272\276e\007\013\275\352V\177\276\340\245\315\275Np\034\276\246\324\007?\354A\255\275g\243\027\276\006Iz>>U\351=8\262\244\276\236\321}\276q\242\027\276Mx\252>]3\"\277|\271D>X5\227>z\375\241>`\014\021\276A9\363=\263\341\302>\220\302\313>K\016\223=oe\204=1d\320=Ro\206>\033\232\027<\000\212\200\276\307\211_>U}|\276Sm\"\276\327\323u\276\305\244E\276|W\">t\345\020\276/\361\265\276\'\236a>\321\306j\275\367xO\276Z\345\203>\320O\240=\214T\230>,\020\204<n\301\235\276\304\317:\276\360\222]=\327$y>\005\335\000\276\301\245\250=\313\242\361\275p7\026>L%J>\207\325\271>\213tP\272\232\303\221>vF!\275\376\314\210>ll\343>4\212<>\036\361\317>\205\273\221\276h\272\334>\021\256\022\276\273\307*>\223%\347>\235\343\314>2\272&>\254\274F\276\277\300\213=\374\200\246>\217r\000\276/\r\350>;\006\233\276\256\321=\275TD\026\276>\236\217\276Y\0029=J\341p>\"<\252\274\200\027t>,\237\216\276\364YJ>\355\332\203>\256\340\322>\332F\"\2755D\027\276A!\270\275\347\371\357=I\270@>Jz\234>\237*|\275\326zU\276\351\250-\276\3057\037\277\215\260c\275%[O>h\334\372\275\365\340\260\274\250~\336>w\017\\>*vc\276U\273\235=3\010\304>\030\277\211\275\3622\374\275\024\323\221>\177\243.\274\206\356\023\277iK2\275\365x\265\273gyS\275\200\306\312\275\177\265\363\274\007ke>\363\200\251>\264u\204>\025J\254\276O\205\n>\3610h>\331d\342\275\373m\\\276\326\261}\276\333\3414\276QL\263\276\333X\177\276\r\006\333=y\213\324>)\307\200=4\t\277>.\342S>^\355\305\276w\020Y>l\277W=L\346\360\276%f\001\276\236g5>#7\030>.\036\314>\331\377\177>a\245y\276\315\201\227=\3702\250>\242\234\032\275j=\013\276\004\220\001>8\342\002>v)\314=\351\227\005\277-\021\277\276S\310`>\0231\352\276\317\025\251=\302g\204\276\334[\201<3\2737=\013\325*\275c\302Y\276ZE\241\275\003\375,\2761E\332>\304\3123\276\323\311\251\275k?[\276d\200V\276Ij\250\276\344\005\355>\013l6\276J\217\223\275\007xE\276\331\353\000>\321\350\304\276\020.P;;u\216=\362\350\374>}\336\241=\0178c>\007;\275>\352\370\r\276\250,\216>\200\223\227\275\215-7<\343b\374\274fO\274=\313\323\226\275tU\240\276`\364\321\276r|\000\277\235\277\243=\010\304\306\275\277\035\254>s~\\=<uC\275\t\211\t\276\202\307\033\276#\2421?T\\\'\276\340$+>\374@o=Y\336l\2752\3606>;H\005\277WuS\2755\254\256\276\332 w<p\244\014>%F\202\276?G\210\276!/\030?\246\266\265\276l\231\006>\3401\340=\376\375O\276\272k\021>\304\355\302< yb<L\003\010?\375\017\333\274\300_\031\275\216\363\334<\303\265\260>\362{\253\275/\365\302>-\313\032>\332\377L>\251\207-\276|\013\252<\001!\324\276\364\013 \276\360%u\274\033\201\271<M\231\257\275\023\255\241\274#-\302=?|\312=\356\267\335\275:\321r=P\357\373=\\\025;=\333h\233=\356b\276\275\261q\025\274;\277\"?Q\265\007>u\364\001\277\037\325\360=\265IF>\001k\217>\3223\261=\217y\232>4\332\035=\332\215\245\274\000^\264=\230\237\233>F\257.>\023\237\223\275\213\251\325\275\375\360\267<\021\0029=\270\354\225>i\244<?T\371\324\276\317\034\301\275\343N\203\276\206\003\226\276\273Vo\276\207\337_\276\252\004X\2762\230\021>\034\272\226\275\000\'\001=&\232\327\276w\033m\276\n\351\337>I\313O\276D\371\254>\301\354\216<G%\315>:\025\'\276i\251\214\276^\030\n>\004yD\276\250\207\336\275\225\336\200>_{\003\276\355|L;\326\236\273\275} \213>\346\035 =\244\205\322>\361Z\021>q?\372\275\222\357\265>\277p\236\276\372J\361>\226\377\025>\035P\002\277S7.\2763\"V\275\255\210\\\276?\321\207\275?\365t\276\r\271\221>)\033\035>QL\250=\"y\355\275\372\300\202=\2617p\276VV\276\274;\352F=\321K\204\276\251\205=\276\3322v\276i\241 \275\317\202\226\274\205D\353\274g\231\335>.<i\276\352uF\276B2_\276\2142I\275H\222\264=\231\020\200>K1\251\275\377:\214\276\206.=\277\211\244\362\276rvm\275D\016\304>\243TK=\251\232\347\275b\211\222\275$r\303>_\205C\276W\357\020>V\310\021>\272\307/\276!\213>>H=_\276K\220\365>p?.=\243d\237<\372>=\275\363\317l=\267.\257>\304\3673>\240\311\220\276\325\314\004?U\332\265\276\177\222\336\275wR\232<\2525}\276\246\035\325=\235\266r\276\300\250\037>\301\314\227;\006\344I\276\316<\006\276\300\375\010\277\311H\271\276\226x#<\n~\333<\002G\325=\265\322\340\276 \364@\276\255\327\247<\217g\271\276\266\336\253\275\'\226\355\276\032Td>$G\343=\002\230\036\276w\300\246>8\026`\276\361k\005=<\316\341\276\241\357\216>\321\354\211>\374\204\317\275\373\304#=\364\036\377>F\212\330<H&J\276\355\226;>\003\363\'>\315\301\225=-*\332\276\3706x>C\314\247\274pM\020>#|\016\276\214\331\325\276\014\0212=\rQ\n\276\235-\334=\261L\255\275\265\216\207>w\n6?jz\033=U\212\237>\006\204\'>\367B\330>\"U9<\033\335E=J!\027\275O\335,>\356\013\204\276\r\312\026>\265\360\302\275\255\3050>Nt\360=\255\270\247\276oa&\274\261cs\276H\357\357\276\363`\201\276\267l\235<\357]x>\t%\261\275ie\366\276\317\324\220=2\024A>\231qI<c\365\262\276#\311\376\274Q\336\200\276\332\n\020=\202j\244\276\337L\'>^{\251\276|\000\245\273\\\372\014?\204\326\357=v\321\r>\251\014\245\274}o\303\276${\301\276\320\361b\276\024\356~>3\2636>m\210\275>=\037S\2763\367\247>\367\313\371=\036\326\241\276+\335:>\336g\234\276>\300\273>rg\307=\314L\330>p\363\211=3t\031>\213\255S\276]\340\235=\206tR<\001\363i<\211\304\207\276\217\300\206\276b\270\016\276>\361\364<\206\255\227\276\244\332\344\276V51>4\032\201>\372\\\202\276w\327L\275\002pK\276\232\177\226>\303Z\\\275z\370\217>\366\020\201>\022\021\216>\010\374\r>\237j\330\275\031\017\026>\244\214\300\275Mf\035>(\223\270=qh\250\275\240\017\321\276ax*>\007\007\023\276}\2778\277 I\257\276P4[>\363V\036>\3500\226\275g\'\001>4\335*\277\001\225\201=\022\227\317>\214=$\275*\354O\276\205\314\216>\021.\006>\326\022\210>\217\320\320>$\"\227<G\346\207\276@\232\021\276\321\257B>\247\251K\275\335\346F=\2344=\2736\250\r>6/\363>\3110\373\275\335\340\020?w\032\202\276Qd\036\276QH\036>\303\321\007>\335g\206=\224\322\202\276\205\261<\276\257T*=\013\277H>x\010\035\275;\266\016>8\355\214=\377,\354\274\3367e\275\362^\024\277\311\203i=_wf<;\371v\276\262\254\257>\336\"\246\276\2539\234=@\236\263>\222A\253\275#\232u\276^\233\376\275\223\362\002\277\231h\211\276\020}\366=\313|\250\2759t\270>&d\355>\021\024\333\275\237\307n\274~\214\236\276Li\231>|\2364>\363t\217>}\260\027\2762H\002\275\037j\222\275\307\330\215>)\225\376=\023\240|\275\326\021B\276\016[\320\275\2351\221=\"q\233\275B\226\223>\360Yv=\211\257\261\276\t\003\026\275\0330\256<\272\265v>\211\"4>\352\371B?\231g\313=)\200z\276!\362\010>\250\203\212\276\300\262\241\271\006\255B\2753\202~=\267\303\302\276\202\356\303>\362\263\">m\206\346\276\367bJ\276\021\363\305<1\325\023=<\201@>V%J\276\236i\325=\016C\377\275\345\266\354>8[(<7ly>N#b\275\3029\337=Z\356P\276\222\nG=\235\341?\276\255\"[>@\344P>\365\376\n>\261\031\312=x\272C>Z\001)=\352G\r?\033\223\021\275W^\n\277\375\226\202\275\0022\036\276\222\032\235>p\3500>\217\307g>\236A\345=\270z\226>Ho\254>\204\340\251={\342\343\274\305R1\2779\214l>\256\302\t\275\346\315\037\276\037]\201\276\332>,\273\027\315\207\274\324w\250>*\037#>\276\t\236\276\252\273\357=\254\305\244>*\311\206\274<j\241=O\331\366>\252ii>:\363\336\276\225\374\201=\210\036\321=j\377v\276n\211\240=*\020\214>Lf\257\275#\'\210=\310\323y>\2039\243\275\"\356\237\274\253l\222=\307B\236>\205\305\201\275\374\217\t\276\372p ?\250}\267\276)\246\r\277i\306k>\366R(\276\002\205\253=#(\342=\365G\223<6\021\212\274\323\313\226<?\256\206>\313\370\213>\337n\301>\2329\310=\301\340\223\276\304(i\276\300y\343<\003@\312>\355\310s>\224\2058=K!L\275%q\244>\320\205\007>\353T\212\276tW\037\276+\253\361>\372\200\363\276a\217\304>OUE\276\035\001\301\275\305\004P\276]\366\034>\223\340G\2745Z\246\276&\205B\274#\343\227\276\241\367\265=\356tk>\344\001\216\276\340/\366\275\303\t\220\276\277\005\213\276\336\240\010?}#\312\276p\372\332<)\223\344=~\332->R\377\362=\370 \r>\275w\'\276\361|i\276\030W\231>\375\316\035>;\253\224>\266`\325=\035\363\366\2750\370\332>\266\356\233>G\323E=\264f\200\275T\375\217\276\2767\332\275\232\307\016= \310a<I\035\301>,q\275>+\177!<O\302L\276\322%Q\275\010k\355\276d\344\255\276\211\330\214>\375v\252\275@q\373\274\025[\251>\345g\215>\024\355\t\276\350\271G\275\212-}\276P\355-\276\016\371i>#lh\273\310\250\210>)\302\024\275\264J\001>\331\266d\276\242\304s>i7\234\276L{\302\276z\340)>.\267\263>E\357\372<b\022\004\277a(\214\275c\247l>\351\t\253=\277\252\022>\361}\275>\247p\200\276H\\\241>\014\226N\2767xH=\305\356\375=&K\206\276Iu\t?\005\300\225\276\353l\001\276\337\024z>g\277\007\276\2224(?\032\264\334=\206sg\276\027\252,\275~-V\276\257\017\026>\017\233\212>\275w\261>\223\200]>\245]?\276\261U\361>\326\260+==y~\276$%\031\276\250\024\004?-\340W=\333A\000>\036l\264\276\344\020\307=\335 \257=\r\234\310=\037I\237\276\013\030\371<\246p\262<\260P\261\275w\323\216\274-\326\352\275\355\020\263>e\010\312=*\263\005\276\255\232\000\277\252\202+>\251\276\237;\250\2336>1al>i\322\332>\032<\027>\022\223B>\234n\257>\254lp\276\277\326\327>\205\207Y>\2725\010?0\016\032\277\320\320&\274\264\343Q\275\024|\300\275l;\271\274\355Z\353\275\326\023\330=1\276\316>%\226\027\276\334mS>6T2>\240\233\232=U\240\232\275\336\033\305=ez\004=<\017\274\275\230\2408=\251\240\262\276i\203\275\274\032P\367\274\355\306\316=\017\256\332=\262\302\213\276\372\024C\275d\370 >\177\007i>\032\027\306\274\237\256\257=c\274e>}\255\257>\352\345\274\276\024;\217\275z\031\226=\010\370\310=\013Se\276\212`\n\276/\211\223\274\336Q\226>\'\025\313>N\202\217\276@\210\201\2768\357\204>\006\037x\276\263\353\033?\253\223h\274\"\327\205>B\316\231>\206\033\262>\026]\276\276RV\250\273\341F\033?{\264\216\276*\363\354\276\007\224u;\215\013\244;\025\267\277=\2255\007>!`B\275\014n\250\2763(E\276\303\021J\275w\250\016\276\333\334c\274wy\234>\363\267\355\275\235\231\236>E\334$\276\303u\272\2750\257\325\275\327@\355=\361\3134\277V\352\013\276Ye\316\275\300{\222\276\362\t\017\274\314\004z>\302\262\226\275\023\330\301>\232\261e>h\254\252=E\003\266="
      }
    }
  }
}
node {
  name: "model/vf_fc0/w"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\312\230/>\021\027\325\276tt\376>\252\254\362=\303\255\255>e\032\371\276jv\021>\213\364\231\2763\311%?a\257\306\276\234u3\277]\\\303=A\001\256=\032\315\023<\221\377 ?j^>\277\366\357+\275\032,\300=\223\353\237\276 \0041\277>\321|\276\213\320\207\277NA\032\277\337\310W\275\261V\245\276\033\007=>\241\275\032\277AC\245\276\000\227\235\276\273\301\002\276\214\"\207>\2172\271\276\234\035\344>:\326{?>\004\360>\203\254\343\276\356\340l>A4\273=!\352\371>\312\350$?e \360>q\275\201\276\213\013\234\275D:\020?/\365\232>]V\327>\'hE<Vm\305\274g\347\243\276\3276\277\276\361\303#?16\025?\024>\006?\203\224S?\261E9>\021\007^?D\003\337>\240\037*\276\367\016+\276@\302\263>\240#\r?\326*\327>\301\007\331=\032\2640\276^\252}\276\241\335\003\277\216)\317\277\303\247\365\276D\247\354\276\237\241\233\276Ri#\277\251\000h>\334\2404\277/J\025?sD\213=\313r`\276\264\376\206\276\031\303\237\276\217&;\2774Q}?\341\224D\277\242\361\206?Q\274:\277*\233E?\205\355t\277\263\207\373\276m\021\225?r\'!\277\240\016a\277)\271\323\276\234\373P?t\254\021\277\377\317r\276\356\032\377\276A\024.>\311\245\325\275?\202`\276\2208\303\275\233\240\017?8\262\244\276\n\003\300\276q\242\027\276\217\314^>\206\373k\277}\331\351>F*\374>\303\340\320\2759x\305\276\311KR=UQp>\3335\371>\200\273\217\275+\030\213>\267\223f\275\025&G\275\004{\362\275\214I\024\277~\320B\277\323[\320\276\301\354\026\277\036\204\336\276@p\023\276C7\222<\367mP\275\330\000!\277\014G*=\337\357\346\275\023\247M\276\026\231\003?\343\227,?\224\\G?,\020\204<\272RJ\273\304\317:\276cX\257>\360\245.?\345\2117>\374\2342\275\022\274\200\276\3732\t?7\270\t?\022<\'?L\t\273>\305\034\317>\361\247E>\353\377\263>e\341E?k\235\211>:\377T?\035\370S>\367Y\010?s;\317>\236\'\344>\t\243\315>\217\024\337>\361\267)?\177![>@C\263>\224\034\022?\337U\026\276%\352\332=\256?\032\277?(\326\277TD\026\276\t\326\026\277Y\0029=\364s\203\275\017\212\034\276\025q\223\276\307\317B>\214\253\215\275k\335\347=2\3268=5\255b\276,\300\026\277\3413a?`J\307\276\211>\215?\200\313\250\276\352\251;?\305h=\277\026\245&\2770.\202>\032<\375\276amc\276\303\213/\276L4K?\001\224\354=\352\367\246=}\337\016\277r\312\211\276\200\334\271>\035p&\276\214\t\260\276%\245\027?\177\243.\274\000n6\277iK2\275o$\370\275\240\366g\276\312dK>_[\235>iR2\276C\356\023>\321\313!>^\246\362\276-_\327=,\213\203>\231T\313<\323Gd\276\375\317\004\277\300w\002\276\226\221\032\277|\361\207\277\341:\324=0\014\345=\010\025\361\275#\367\330>E\244`>876\276$y8<\237y\005\276U\245\013\277\334\373\377\27577\341>\t\255>??\214\\?\331\377\177>CC\210=\315\201\227=\366O\037?\262\266\315>\230\0167>\220\347\372\273\023U\301\273\220\263\373>i\3350\276\370\255\240\275H:\030?\367\222\261\276\342l\247>\304j<\276\241\225\263>\207\336\366=3\002\307>\023S\204>VmS<l\336\302>\236\0056?\313\240d\276\251\333n\275\335\314\217>\315\321L>\303\304)\275\346Q7?[OL\276\032\026\262\276\274\226\340\276^A\331\277\321\350\304\276\237\025{\276;u\216=\273\253\202>\313\037\242\274_\305\243\276b\'=?\016\367\277\276\376\364.>\210\035\272\276N\003\003\276oD\274\276\343\260p?\354\205\367\276\204\303\363>\250\372p\277\315]4>m\\\275\276>_S\277\262\211\213?\256\351\241\276xS\312\276\014\3459\276(7\n?\262|\323>{9\206\276\224\206\326\275\3529X\276\354U\237\2754~=\275\326~?\277yWj>5\254\256\276$\366u\276p\244\014>\255\005\365\276\0013\343\276O\345`?\370\373K>\277E\316\276\335\325\n\276\341]\342\276\333\010\305\275\203nb\276I[\223>\037\372\351>l\263H>\333<\307\276\276V\246>U\004\031=\277\367\000\277j\306\035?!<\n\276\277\367\227\275\247\202\361\275z\202\210>\361_\357\275^\210\315\276a\251\236\276\022\3108\276A\200\255\275R\346x>=\264/?[\217\016?\356\267\335\275\222\320\274>P\357\373=\035\227\255>R\031\003?\335I_>]\020\023\276\232\301\376>\323\257\005?W\324\037\276U\246\322>$\317\021?\277n\307>\372\235\253>\255\306\277>[\337\276>\363J_=@P\004?|\314D?\231`\205>\355\304\362>({8>\244k\270\274\t\271\210=\322\352G?\272W\222?\037,\004\276\032\037$>\200@\216\276Dt\001\277hi\340\276\033g\014\300\252\004X\276%P_\275\034\272\226\275\353\324\036\276d:\376\276\r\354:\277\301y5?\320d\317\276\021h\205>\021cL\276\t3\230>\333\235\315\276\"\213\351>\032\020=\276%\\\363>\256\276\n\277\026\376P?v\240\001\277\307_|\277g\020\013?0\t-\275z\223u\276\233\251\273>\271z6?\372\'\302\276\276\235\220>\352q\006\277pl\214>\357t\001>T\351;\277\307.x\276\363^\000=\255\210\\\276\025\245\237\276?\365t\276\373\365\247=\372\t\330=r\210\355>\270?\000?|\235\375\276\3321\322\276g\017\221\276#\200)\276\204Y\014\277\020\245->`C\337\276F\343\204>\250#\241\276\212\215\271>\"|]>C\326S\276\345\026\000>\035e\246\276\243S\220\276\366\343\017>\253\204\024?_\233\321>\323\202\333\276\252\207\201\277\334\033.\277\364\370i\275\243\270#?d\333!?X\376\265>b\211\222\275\307+/?_\205C\276as\333>PV\022?\255\245\345=\346\300t=\372\205\272\276\350\302\\?h\311\307>L=\235>F0\245>\022t2>\034\"\026?z\226\202>\004\3213=e\307\031?\033-\207=e\341\271>\\9\354=\213.\225>\243\251\303>\001\177\216\276N\010;>r\200\370>j\325N>c\215\030>\3763\222\276f:\304\276\".\r\276\246L\017\276\273\300\366\277\265\322\340\2769\317\252\276\255\327\247<K_\376\276@6\017\276\2328v\277\321\202\306>\320ql\275c\230Q\276\321\325=>\n(\223\276\220\203\375\275\375\354(>\240\364;=\371fN?\317\324\333\276\257w\367>J\307F>\250\315\235\277,\343\236>\3017\234\275Z/6\275\342m\003=\266\337l<\362\214:;\203d\220\275D\026\222\274\241|\204\276\201%\340\2762\240\036\276\003\275c\274\361xN=\261L\255\275\243{x=w\n6?\373?\363\275g\276\320>\2671\"?C\335\206?C\355\313\276^\221\024\275S\246\216\276\2715\220;\364\007\005\277\330\242\t?\334\200\251\276\227\313\377>8\026\313\275\336\231\317=\370\211\334\275`\362\204>!>\361\275\324\226\035\276\002\303\033\276w\267\227>\027\020\214>\351\306K>\350Z\326<\301X\017\275\260\252+\276x\217\262\276\227W]>V\255\244>y\013\006?\202j\244\276\362\210\351>^{\251\276\037\312\213>\017\350x?\276C\271>\347\020\321<\027\0043\276\3760\370\273\222\350\030\275Crk=\217T\033?BW\235>\004\355\032?\223\336\353\275K\352$?\366\274]>Of\303=\201#+?\240\237I\276F\271e?\375\207\273>\350\005\306>\r\r\326=\270- ?\014n<>\342\342\261>k\005\202>\262\204\350\273m\324\255\276J\\\307\276\351\225\n\300>\361\364<\210\201\304\276\244\332\344\276\030\317\305=h>^>X\343J\277\230\003/\274h4\250\276\271\202\214>\210Y\331\275v\307\200>\317\351?>jr=?(\342,<\315\263\217>\235\322v\275\323\024V>,\212\212\275\231\227\246\277N\376\216>\373\307\033\277Z\351\031=^m9\276\370\024\335\276\367\227\020\277\312lA>\324\242u=\260{\325\275\031\350\330=EB \277\274#+?\205z\246=\214=$\275\036\360\013\276\205\314\216>\rqp>A\033??K\003\205?\336\234\345>V\257\320\276!\245\301=\322_8>s\033@=<0z=\207\346O>\333y\006>=\024\034?\363\323\205\274\344\036O?\023\330\266<\022\266\324>\332\275\247>\024\0348?\327u7>53U\276k\303I\274\3516\210?\022\372\001?\242a-<CpG>+\230\216=vnV>e\006\003?\\\325\213\275\311\203i=k\211\230>;\371v\276\\\353\034?<5\274=\210$\234>\0012\201>\tjy\276eu\002>\357]V>9\327u\276\2528\241=\370\024\207>\177\202\022>\247\000\356>\242GE?\2019\037;\222_\307>\034\274D>\241U\330>\000\3553?\203y\n?\344G8\276/\360\221<\200V\317>\230Y)?L\202\305>\333\367.>(\365W\276R.\262\275G/\006\274F\005\006\300B\226\223>\300\327)=\211\257\261\276\007\3471\275\177\233\017<\231g\242\276\250.s=\310\224*?{\306\352=\321\377A\276\\|\031>\321\235G\276E0\222>\273\025$\275\325\341\206>^\277\337\276\311>\003?YW\035=\025\317\351\277\243F\203\274H\314\327\275\265\251\200;\003\225\034>2-\276\275#\322\317\275+\323\371\275\024\316\343>\030\014\264=\300\240d>\373\017\345=\217_\213?6M\004\277\222\nG=\221V\005=\255\"[>\267\341\350>\355$o?^\006L?\235\265\016?\322\030\221\275S\252\177?\002{\223=I[\227\276\2704\276=\354\220\r\275\243\254\331>\267\251X>\355u\004?\265\200\214>Y\312O?\0307\205?0\2305>&\322p?\212\304\323\276l\260\207>\215Ls=<c\250?\300U\245>\261\315F>\336\371\033>\t;\251>9\007\310>\314\370\204>\237\032\'?\254\305\244>\000\324\205><j\241=\t\030??\260\313$?\362\217a\276\305\213\255\274x\004|\275#s\373=\024]\320>\3348\n?\326\214\201>\272zf>\260X\354>\346p\036=+P\220>-\025I>\236\3025?\262\357\347>\221=f;\315\337\223?L\201\322\275o\236\026\277#\357\225>\"P\244>\253\261\356>\031@\273>\006Yy>\365\225\034\275Y\016\020>\016\233\177>\267\354\343\277\337n\301>\215\364(>\301\340\223\276\026\340\027\276\037\220E=\t\0060\276\314\310h\275\014|\232<\351\3453<\354\300\000?\240~R>d%\372\274\302\242\214\275\337u$?r\030\367\276g\322\001?6\251\203\276\3512\265\275\"\320\313\277h\\\010>3\rB\275f\246t\276\363\233:\275\2432\314\276]w\256\275\253\242\212>\303\245L\276D\214\254=\240x\232\276\342\315J\276\016\374\310?\255\354\267\276p\372\332<\031\345{>~\332->\372\251\225>{\256\201?4\035\251>\336I\224>{{\207\274G\013\023?\362\201\223>S\231\212>\r\362\207\27532+?\232\350\244>/.I>\256\036\034>(O\275\273F\347\277>|\352\207?\3638m>E\250\267?\363\032\024?\203\0076\273\303\007\211<\007\017\344?(]\367=\375\230k\276\230\306\257>\355f\247\275\037[D>l\206f?k\276X?\024\355\t\276\251\253b>\212-}\276$\356\262=O\377$?K;G>\027$M>\336fQ\276\325\r\371>x\230\307=\221\365\376>\313\277\266<{nN\276\315\004\277>I\251\371>$#\246>K\370\275\276\023 \250>\203\004E?\300\314v>\033\270,?0s\036?L\033\231\276\000h\312>\351\007\230>\341\345\333>\306\022\276>s\313=\275|\374\003?\013\301\3739\310\216\177\274\301\223\347\277g\277\007\276;\354]?\032\264\334=\326\002\214\273\340l==\3364K\277\302\307\320\276\034\252\241>\363a\372>B\372\026?\223R\222\274\rPz?\324T\"\276\005\201+>a{\351\276\320\317i?\321\200\225\276\222|\254>\242@\332\277\023fZ\276@\257^>09\277>\374E\260\276L\372\272\276AZ\230\275,\347\337<\233\031[>1\002\217>\365\225\250>U\263\300\276\360\256\237>\261-\260>\252\202+>`\320\335\276\250\2336>\305T\025\276\310\030J?\001\000\n=G\350\240?*\340u\276\306\224\260\276\375>\343\275\2345\037\276Sd\211\274\253c\'>t>\017\277\263\036#?\326\326\372\276\234\037D?\376Mt\276\250O\346?s\353\224?\273\004\274>\013\257\030\276\345\261$>9\276Q?\200j\322?\346Y\013>\357\035\325\276=\r\t\277 \035<=\355S\025\276\362\211\t?h8\031?\355\306\316=\323\201\267>\262\302\213\276\363\350D>/\327\020?\374h\311>\215\344s\275\333\364\266\275gR\022?\021)%?o\241\377\275:\016o>\237$\221>\275\330\220>\273vg\275\313\333\r>\n\260\">\260\252,?G\274z?\217\262\271\275\202\243\212>\200O\373>9\274\227\276\235\0318?\261\'\374>\365\243!?\253V\007?\366A\013?\264N\311\276\317\007\021?6gt?\326R\024\300*\363\354\276yH\352>\215\013\244;\036\326\016?\327\322\267>\312$%\277\247\026\243\277t\020\\\275\003gy>\307\017\010?\256\242\244>F\313\234?\257S<\277n\003\215?\354\371f\277n\243;?;\030[\277\203\022,?\273\311\000\300\361<^\277\303\260\252>:\240\232>\024\241,\275\372\374\021\277\361_\302;\221b\"?E\2076?\241GD?\330\340\213="
      }
    }
  }
}
node {
  name: "model/vf_fc0/w/Assign"
  op: "Identity"
  input: "model/vf_fc0/w/Initializer/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "model/vf_fc0/w/read"
  op: "Identity"
  input: "model/vf_fc0/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "model/vf_fc0/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/vf_fc0/b"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "E\211\246\277]\3575?_\223\272?\000\000\000\000\376:\202\277\000\000\000\000\2062\205\277$\026\210>\357\252\003\300\311l\005@M\2609?\260>\365\275Z\304\205\277\010\020I\277\237\210\220\277t\203\000@)\322\264\277\336L\375?\330M?\277m(\003@\25477\276o\360\013?(\250\004@\006S<?E\223\200\277Z\021_\275\033\253\377?\306\201\244?yi\251=R\222\205\277\277\247\233\2770\221\357\274"
      }
    }
  }
}
node {
  name: "model/vf_fc0/b/Assign"
  op: "Identity"
  input: "model/vf_fc0/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "model/vf_fc0/b/read"
  op: "Identity"
  input: "model/vf_fc0/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "model/vf_fc0/MatMul"
  op: "MatMul"
  input: "model/flatten/Reshape"
  input: "model/vf_fc0/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/vf_fc0/add"
  op: "Add"
  input: "model/vf_fc0/MatMul"
  input: "model/vf_fc0/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/Relu_1"
  op: "Relu"
  input: "model/vf_fc0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/pi_fc1/w/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        tensor_content: "Y\333\214\274\335\311\276\276_6\317\274>\2405=\017\260W\276\300\351\035=3\213\213=\205\336\247\276$\272\354\275\027\240%\276\251\006w>\260\037,\276\227\364Q\276?\306\177=\341\nK>\"\027`>\n\177H>?w\337>\017\002\375\275,X\367=\010\224\t\276\241W\267>\351Wa=\016y\035\276D\361\267<\370\255\307=\303f\244>\332\037\311=*\372\337=\243\267\016\275\276\321\367\276\313\266\010?\273\232\202>b\320\005\276\314\026\244>2\363\265=Hi\210\276\235{\232\275\312p\375=\026\313\241\276\276\251\343\275R\266\374\275C\034\254=\263\023n\275\224\270\027=\243\304\327>\035\351#\276i\317\232\276\321\322\027>\220\317\026=yt\343\276\365\007\325\275\335w?\275\331\353\227\276\307\206\374\270j\267\313>gG[\276\t\365\305\276\274\310\333=\221HU>,E\247\276c\314k=\264y\370\274\316\351\345\275d\036\200\276v\372\344<\300-\254\275vH\356\275\322}k>\275\356\000\274\031\242\366\276^nm\276\374\211\246>\256\300\276=\376\023\001?\313oY=\211\032\221>p\370z\276\357\347\343>\355\245+>\226\006\333>B\207\317=\203|f\274:E\275\2754\233\023\277\214\234\221\275\233\314\212=\022w\016\276\360^U>\343\232\307\275\257\304\004\277\177\210-=\361U\004\276B\035\200\276\201\274\276>\3254\215\276\264\212c\275E\362G<sL\300>\013\263:>N\035r\275^6)\276\250\243\000?\256\301\006\276Qi\266>N\366\377\275>\223e>^\022\233<\t\247\277\273\200\3704>\313U\200>\207\333N>;\374\237\276\t\021\237=\340\\\215>>B\031\277\362\032!>\010\340\236=\257I\261>M\005\273\276\272\327 \275\246\361\231=\214\351\254\276\246?Z>d\002\201=\262\247\370\275\253\360\312<=\316?=\304\323)=\033\245\340\275\242\033=\276\'\330\022\276C\205\312>U\006\301\276\260\261\244\273\237fR>I\305\360=\230=S\276\316C\215\276\223\031->3\350\200\276\001O\232>\232x\231\276\010\014|>\217Q\305\274y\027\r6\323\202\270=\210\035\315=\266\237L>\313\025\274\275;m)\276\307\370\206\276\250[\272\274\244J\352\273\243\354\215>>Z\004?\260eT\276o2i>\376\231\270>\033\363\274=\232\2759<\021\334\336>`p\013\276\305J\277\276\317>6>%\223\223=\310\\p>$\007\264\276\301\320\224>\345\353\220\276X\323\306\2754\026y\276rE\010>\021\026\t?\177\305\035\276:\276\320;\310Z\217\275|\342\266=\003\350\"\274[\227\215\276\377hE\275\331\177\274>hsE\276E\303p>++\330\275\037x->!\337\222\276\236ob\2769J=>\221\335\260=fbQ>MdS>\002\316\027\274\370/\247<\010m\356\275\345\273\220\276\331\210\037\274\3370\276\275\241\331:>\356\336\002>\3631\324\276\201\341^>\303\360\256>$q\272\276\262\351\005\275\022\3548>\274K\215>\002B\327\276\332\373\246>b >\276r\270\222=\357:\213=<\224\243\276y\205\005\276\351\200j>;\254?:\366\324\225\275j\2410?\030\200J>\024\022\301>\247\202\002\276Z\261<\275\350)u\276\374\231j<\002\233B\276\221\230\300\275{\357\343>u\337F\276\302\375x\276+\366Q\276\367%\320\276,\207\202>\327\321\377=:\310\203>u\224\331;\002\376\211>\3513U>o\236\356>Y^M=\216$\345\275\345\342\330=\370D\317>`\250\r?\223X\201\276&\325^\276\000Z*=l\372\236\276dl\272>\031\207\177\276>\032\300\276j\344\200\274\303\354\313>O\014\217=:G\020>\237L\004>\311\321\n=\217\000G;\372*)>\017m8>\373r\007\276\345A\367=\241Q\315\276\310\233\024>\231\310 ?\241\263c>\002\256m>\373\n\272=X\213f\276\232\274J\276(\r\326\2758\255\310\275\230\336\351>\235\032\250>\302\270\312>\211\016H\276\010\313\327<\007&\340\275\325j\263\275\004F\n\276\367\337\322\275\320j\317>\001\000\203\275\177\205(<\026\031X=\203\373\254\275\341\314\217>s\373z>{\367A>\247o\234;\"\205\245>\341\243\322\275j\231\026\276iR\362\276\276\2768\275=\224\033=i\350\020<\367a\n>i+\207>\205-\341\275\235\216\333\276\3459|\276]\313\026=\225j\364=\236b5>\301\215\212\276\331\256\310>\324\272\211\276\303\234\306>!\310\263\276\016~H\2764\372\210>OO\375=\236\200C\274c!\007\276\244x\016\273h\371\303>%\337@?\337\374\023\276pP>\276\236\243\010\276Z\031\212>\227\305P>\217@B>\360\373\361>U\0255>\221\341\365<\370\257\323\276uSv==\257\363\2748\331\241\276{\034\300=-V\366\276h\025\303=\n2\221=r\333\'\275\215\027\222\276\025\001o>\220\204|>]\201\254>\033\252\353>+m\305>Y+\301=>g\207:\272\216\010\276\014l\316\276}\206\217<\342\302\347\276S\260\353=|\nr\276\264uw\2761\037\006>{r\212>\235m\363\275+\335\367>;?G<D\\\230>\005E\203=%\236\223>H\002Y\272\2314\001>.Yz=2l\001?\367\\\254\274g`\223<GG\235\276\013v\301=a\372\246>\010\225.\2766\335Z\276\345\236\344\275\350\330h\276\223\224|\275\254hH=\2215\016?_\177\332\275\316[\034=\226#s>\007\347.\274\224\274\235\276\311>\313>\374\023\177\276\002\377\220<\r\033\357\275J}\205\276\343z\313<>\364\374<\323/L>\303\377w\276\263\350\332\275\355\213\251\276\267\341\032\276\334\257\215\276\023R\374\276\013B7\275\301Z\027\276\024HL\276B\232\221>\262\177\232\276\231\217\324\274{N\274>\361J\000\277[x\365>\021\315y\276\245\322_<\242h\313\275U\254\r\277=\377\270\276\3375\360\276{\317\223\276\212\023\031>\310\000\241\274\315\325F=\322\330\334\276\356c\332\274\212\016Z\2769\244O\276\375\tA>\204\250\010\276\2716\227\276\270\034\220>\365NX>\262\271\261\276H\013+>z\234\000\276\356Z\034\276\006eX>-\212\256\276\310\204\037>\035_\222>\355\356\346>\025\000\362>\313\342c>\343\316\016=\363\235\264\275\372\021\234\276y\340\013\276S_\305\276Z3\031>\236Ev\274mNL=\2161\017\276\2438\337\276N\204W>\356bH>\204\325a\276\226o_\276\273\276\273>\005\352\275>\310\033\005?\2318\n\276\312A\316=XR,\276=\311\213;Z\007J\276nh\347\276\014\202\235\2761{\341>!Y\360=\330Y+\274\366\002\257=q\303d\2751\214s\276p\236\253\276\314Yp\275\016\027\357>G\335\225>\311\345\312\275i\246\264\276\350\"\360>\346\014D\276^\374~>\004V\204=^\247\226=\363M\210=\tUB>\357\237\027>6\'[>\2729\357\276\244\r\200>\212Y\326\276\345\225\331\276\331Hh=\353\016\332>\242\340h>64\014\275<\322s\276\"\225\233>z\"\344<\"@\305>\267\302\236\276o&\332<\270\211V\2750\266\243\276\245\003\254\276\330f\200=\363\271\026\2767\354O\276\204\177\200\276\304wL\276\326\223J>\270\266\000\276G \215\276\233\227\203\276\266&\275=\n\014\254>\341q~=\n\331\332\276#w6\276\025\033\206>6\236\025\276\244\331\025>\301l\204="
      }
    }
  }
}
node {
  name: "model/pi_fc1/w"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        tensor_content: "ab>\275\250w\343\276J1\203\275\315K\037>\343C\227\276\\\222\312<P\255&>\215\231\244\276\233\224,>5s\016\276\356x\352>9\014@\276\007s\016\276\340*\355=\270\013\013>\216\237|=\216\256P>U\260\337>\275S\010\276\300J\215=\254\260\354\275\357X\267>n\006)=\253\221\005\276\300\225\246<W#\307=8\\\211>F\353\301=\372\303\344=\234\206\037\275Kr\367\276\021\356\007?\273\232\202>b\320\005\276\314\026\244>2\363\265=Hi\210\276\235{\232\275\312p\375=\026\313\241\276\276\251\343\275R\266\374\275C\034\254=\263\023n\275\224\270\027=\243\304\327>\035\351#\276i\317\232\276B\356\'>YrH<\017\344\353\276e\033\272<\260\235\347=\361\014\232\276 >U\274\266:\327>\354\025K\276\001\027\332\276\271\277\356=\001?H>%\211;\276\233\370\215=\310\035\351\275z\305.\276\204\016\202\276-9\372<ZL\254\275\205\316\272\275\236\322\221>\237\327#\274mo\372\276^\365\203\276N(\254>\244\274\314=\250\034\370>\313rY=\211\032\221>\324td\276\241\311\346>NT%>\232\355\302>\247\300\277=\330\356\261\274X\210\263<\03600\277\214\234\221\275\270\312\263=;\216M\276B a>\3454\342\275\225\324\335\276\275\214\375<\223\364#\276\352\326\201\276K\307\272>/8\223\276:\347\373\275\000\372\242\274<l\265>\261\235\253>K\353\244\2766\2672\276M`)?\235\0177\276\025)\350>\321\201\271\275\222L\021?5\010\370;Q\202\376;\242\341\207>\333\253f>\344R\204=\266o\235\276q\354\227=\342\374\210>\027\265\034\277\362\032!>\375\335\236=bC\256>\2308\314\276L\364\027\275\274A\211=\246U\245\276\235\215P>d\002\201=\033\233\005\276\020\352\260<\\\201:=\304\323)=\033\245\340\275\242\033=\276\'\330\022\276C\205\312>U\006\301\276\260\261\244\273\237fR>I\305\360=\230=S\276\316C\215\276\223\031->3\350\200\276\001O\232>\232x\231\276\010\014|>\316\335\005\274!\303\233;\323\202\270=\206~\227=W\207W>\313\025\274\275\224\002&\276\201\002m\276P\230e:\360\202\312\274uq\224>>Z\004?\202\253G\276W,U>\227\262\266>\033\363\274=\227I\224>L\222\352>\324\261\024\276\341\241\377\276\273\223\354>Q\227\215=\255\2300\275]\273o\275\216\324\360=\036\033\303\276\255\212\237\276\311]\202\276\374\2751?!\017\264>\337b]\276\350uu\275Rez\274\217Nf=E\301\317\274z\034j\276\234sR>Q\230\270>\005`\245\276\"\343\245>\000\300?\276\322jJ<\213u\337\276\205\343a\276\347$\304>7w\276<\211\272\024=\315\241\016>k\227\2557\'\2610\2740\357\000\276\224z8\276\241+\213=\002J\323\275-\303H>^t\031>\034\330\271\276W\2155>\021\366\327>/a\301\276t=\001>D\250?>\274\202H>\213r\037\277wN\201>\267\275N\276r\270\222=\'\3613>D\204\243\276y\205\005\2768\340{>\206\246\036\276\001\204I\273\252p;?\342\367;>\024\022\301>`\204_\276\330S1=\301\271d\276\302\276(<W\337\210\2761\274\311\275h\017\340>\303\317\340\275\001 \306\276\202\365Q\276{\213\342\276\362o\344=\237m\004>Or|>/\223\254;\267w\204>\241\215K>\217\347\354>%<8=\350\203\341\275\277\277\322=m\235\313>\276K\n?v\332\351\275\276\303\020\276A\333\034=\010\353\260\276%\007\300>\022\246\213\276\347?\313\276\214\230\233\274\333\262\305>DY\n>\256\177\017>\030V\263=\210\025s\275\314>R>\314\2456>\020\006!>c\342\013\277_\340\303>Hz\315\276;\365\027\276\017\211\200?\332\332\262=t\362\024>4\010\212\276\242on\276\357W\360=\325xr\276\320;)\276W \334>\013\221\025>\212_\250>\016\340j\276x\326\244>`Q\262\276+\001\310\2752D\342=}\327w\276/\362\016?\206}\334<\305`\016?\200\345$=\310v\007\276\214\340\362>\204\016~>\347\336\243=F\251\207=\007\374\262>Do\321\275\272l.\276\237\335/\276BIU\275\255\257u\276\207\363\355=\341J\223\275E\026\301=\216\241\304\276\265\250\334\276`\275\017>\t\230\327\275H\0308\273>\321\006>\301\215\212\276\331\256\310>\324\272\211\276\303\234\306>!\310\263\276\016~H\2764\372\210>OO\375=\236\200C\274c!\007\276\244x\016\273h\371\303>%\337@?\337\374\023\276pP>\276\236\243\010\276\260\327\212>g\270N>\217@B>x=\355>\240h<>\221\341\365<\t\032\330\276S\312\256==\257\363\274\331Z\241\276\330+A=-V\366\276 \357\303=\201>\177==\3463\275\215\027\222\276\253ki>\275\352p>\267\366\247>(\354\025?\361L\324>\2005\265=\001\351\240=\364Z \276U\232\272\276\2013V<\342?C\2761f\324=\361,\334\275jDa\276\301s\355=R\357l>4\206\014\276v\225\345>\016U\004\274\323N\327>tW:=\334@\211>\275\317w=$\017\374=7{\364=\325`\376>\342\343&>\2119\262;4\035A\276\3508\002>B\r\214>/\032\226\276\200*i\276\tl\345\275\350\330h\276i\203\013\276lJ\322=\3268\016?\"\022\344\275.\254\272=r\277\200>\265s\334\274LH\255\276\311>\313>\006*~\276\346;\364\274\034\301\377\275J}\205\276\243\265\212\274v\331\256<Q\2537>\351\215Y\276\000;\'\276o\216\251\276\033\364\347\275j[\237\276F\372\346\276\210\346(\275\247\324\327\275\323\244W\276BJ\235> \352\214\276\327\000:\2758\030\237>za\r\277g6\360>\024d\201\276\022\2673>\031G\257\275\356E\016\277\213\315\275\276\310\323\032\277;Y\215\276\352R\023>\323\344{=\227w\031=r^\342\276\251\236\206\2749\027b\276\222N\203\276\315Z_>\324\364\006\276\372/\230\276\211\373\264>\367\222\222>\357\344\262\276\346y;>\236!\217\275\367\234\347=\305\236*>d\\F\276)\275\033>\365\345\351>\275\244\353>\033U\305>\226\n\034>\361\211w=WN\301\275\rE\240\276\030\226$\276s\211\214\276\007\023\027>~\2551\275|\222w=\031\343\r\276S\316\346\276-\340\n=\216\313=>4qK\276\255js\276w\356\267>:N\277>c\321\322>t\024+\276\2450\232=\221\324\004>\300-\014\276N\223K\276\201Pa\276\030\312\326\276\332\254\t?\235\r\033>*\377\342>\267\337\225=\330O.=\222\307\317\2759\006\276\276\005C7\2766\242\002?>\366\206>H\314\317\275\360e\233\276\233\2029?\010QF\276a\026F>s\336\">\244\363\022=LqF\275\203Y\266=j\310\027>e\356\276>\000m\000\277\374\204\346=#\322\006\277\345\225\331\276\241\177\177=\275\324\322>\251\340h>64\014\275<\322s\276\"\225\233>\261?\332<}\233\304>7\\\235\276o&\332<\207\226Z\2750\266\243\276\336\271\253\276\022\323\216=\363\271\026\276.`L\276\337\240\216\276\n@a\276\203P\244>\304{\275\275\276\227\222\276g\200t\276\201\030\324=\242\"\277>5\202,=~\235\226\276Z4C\2764i\312>O]\367\275<\323\260=\254%\267\275"
      }
    }
  }
}
node {
  name: "model/pi_fc1/w/Assign"
  op: "Identity"
  input: "model/pi_fc1/w/Initializer/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "model/pi_fc1/w/read"
  op: "Identity"
  input: "model/pi_fc1/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "model/pi_fc1/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/pi_fc1/b"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "\364\232\262>2\251\224\275\210\240\244\274\0040Q\276\240\200S>\314@\373\273,\244`<\324\026\037?w\252\354\274i\224\266\276\003\006\033\276X^\360\273l\262t=\271o\216\276\031\036\326\276H\372\247\275"
      }
    }
  }
}
node {
  name: "model/pi_fc1/b/Assign"
  op: "Identity"
  input: "model/pi_fc1/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "model/pi_fc1/b/read"
  op: "Identity"
  input: "model/pi_fc1/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "model/pi_fc1/MatMul"
  op: "MatMul"
  input: "model/Relu"
  input: "model/pi_fc1/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/pi_fc1/add"
  op: "Add"
  input: "model/pi_fc1/MatMul"
  input: "model/pi_fc1/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/Relu_2"
  op: "Relu"
  input: "model/pi_fc1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/vf_fc1/w/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        tensor_content: "=.\301\276\2760\005=s\312G\277\254\263*=\3758\"<\'\006/\276\322\236)=\343\031\353\274\252R\003?\246w\216=Y\244\030\276L!\317>D\377\325\275\373 \221\275L:I>\217\023=\275\240\313_\276*a\307=-\236Q\276\311\227{<nk\227\275\244=b\273\312q\204=\0303\020\277\313\253\014>\ndD;\355\351B\275\255-{\276\022C\240\273]\333\321=\030\370\234=C\023\311>\274\r$?\326\006\246\274~\013\221\276\351+\315<\306\0031>\202\247O>\334\013\313\276\240.\314={\244\310>\234\325?\276Z\007k\275\350\005M>t\r\310>\231\215h=\177\253\237\276\210\247\243\276\354\246\215>c=8\276\225m\224>6\3721\275\302\273\200\276TZ\310>\250\014\326\275\'4\211>\240_\250=\3228\201=Z\3074>k\312\246>\311O\224>/\321\341\275\036l|<A@\021?\342\236\030\275C\177\224>\034\\\355;\224o$>c\212E>\021\010\312>\253\321\003>\302\327\307>!\301\305\275if>\277R\360\277>\235S\004=\357\242\">\255\242c\276\354\017\244>\314\006\251<\302j\351;\313\260\216=\3701\224>n\261p<a\3468?\231^w>\310\350\265\276\310d\323\276S\343\007?\021\221J>\236\312\200>\220\'\\\275\215r\250\275\303\206\243<\226\031\375>H\r\374\274\365z\201=A\203\016>\300\210\225\276s\262\333\276\265\274\366\276\031\032\255>\371\0333>\370\277\014\277\242?+\273\013\210\242\276\276\353a>\010T\361\276\003y@=\275\323\220\276\"\331\277=\3709\r\276}\256\226>z\240\264>a\376\241\276\224\2521\276\021O\001\275\323y\213>\243UV>\215\3310\275\3243\215\276\240\243/>\246\232&\276\276\213\236=Y\254\206>\266\353\372>use<\\\222\360\2758\273\177\276j\213\342\274f\341\206>\251\023A=$\347\"\276\357\t\037>\322Z\302\275{.p<\236\303\231\274\260)\212\276\374\232\341=\363\246\034>\324\213\365\276\356\344\031\276\257\233G\275R\010\363\276\001\010W>\321.\320=:a\263\275\007:\357<*\307\335<\024\203\345\274\376\362\335\276n\0363\276J\035\374\276\013\323\007><\276\307>\273\274-\274\225r\177\275\350\020\276\2742\013Q>\277\215\305\274f\302;\276n\357j>>\363\232\275B\221\312>*\347\272\276\271rT>\354\256\230\2766\"/>\356@\021>T|\200\276\366\205\224\276\234\005\002\276Ka\200\273t\217\033>6\217\371\275uL\013>\337z\354\272\002\007\361\275\357\352W7\014\360c\276\031\212/=_dW>\273\020\320>P\357\022>`[\275>@\363\233>\344\305\263=\323l8\276#\033^\275&\340\002\276\306\027N\276 \241\273>\033l\010\276\323d\325\275\303q2>z\243\255\276\207,{\276\030\215\272\276\220L\001>\004F0>\206\220\t>\006?\204\275\001\314\225\273\311\271[\276^O4?\177\270\335<\363\216\315>\033\355\246\276\013\005\252=\241h\001?\326\266\273>\036\022\000>j0\004>\024Qi=\030N)?\330\211/\276\355K\251\275\255\247{\275\201@\361\276\273.\217>?\002\257={\177e>\236b\200>w\306Y;\233\336\312\276-\316\213\276\320}S>~\244\245=\014!\201=\3337\244>H:\326=\367\274&>\300\254^=\201\020\031>Y:f<\261\350\362<\305\252\025>\363i\222>\314\240c\276\333v-=\366Xn>\336\264\254\275\245t\241>\302:$\275\212Q^\276\325\374\221\275(\004\270\276\245v\327\276\375\211\217\275\241\231\001\275\333\003\301\276\331\273A>wqb>VC9>\250O_>\354yk>\316\3240\276\257\317o\276\315E\266=\304c\302\275\321\353$\276N,\262>#:\020\276\0305\236\276K\020\265=\273\331\372=\217\244(>\0322\252\275\325\232\277>\2166\275=\375\267\346\274\013\262\201\274\336#\314;\020\367u\276N\235\252>\005\223\245<\257\357p\275\255\240\312\276\222\302e\275L\362a\275\324\002\334\275\003\231b=q\010N\275\303\354\255\275\026\"\007\276W<\247\273<\341m>\377\262\376\275\347\177 >\204\0130>+:\251>$\3764\2753#\020>\360\036\006\277\037\355u>e\235\222\276I\264\230>\025\206\271\276$\027:>\221\001\337=\216U_>\321\374\366\276\245\207\374\276\377\023\003>ht\327>>\357\264>\213Y\270\275\367]\202\276=f\001>\365\300\236\276\332P\363\275\212\263\001>\212\3628>K\334\234<\212\210|\275&\257\223\276-\370\\\276\271H\007>oa\207\276SV\230>\351\347\370<\215\276\355>\350\247\010>\317\336\207\274\007\324\221\275\003%I=\036\241\343\274 \317\237>\263\354\317<\365\311Y>T@\223>\302\337\366\276\245OJ\276k7\367=Vpq=\010H\213>\343(\t?w_\340\276^\311\020>u\025F\276^\'\200\276l\023C>\206G\332>%\023\212=\230\347\253>7\231\260=\366\302\276=Q\264\230<\223W\334\276\357\262H>?\222\201=\356G\323\276D\346\334=\236\344X\275\336\345\352\275\251.\211>:\207Q\276 9\300\276\243\034\033\276\272%\275>\373\005\225=.\177d>\275?\372;o\211\305\276A\006\226>\257F\000\276\311\210M>2n\004\276\t\377\036\276~\362\352\276\371\322\247\274\343\245\314=K\220@>b\324\306=\321\230\361\274\330\013\357\274\341|\022>\371\367\364\276\221\306\320\276Fn\301\276w_\370=]h\311=+\245\021\276c\237d>\370\330@>)\311\332\275]k\367\275\257\226\213\276\354{\352>\273r\360=4a}\275W\222)=\021\206\250\276\223\020H\276\022\031\372\276>}\032\276m\251\210\2753\312\233\276\201^\210=\301\n\004\276\375\331g\276jd\013\274c\305\000\276\214\375\360\2759\360\242>\260\016\317\275u\363\210=\010\352\031\276Efw\276-Zn=\'b\330>\315\360\023=\334\364\204>D\031\317>\267\035\r\277\024,\223\276\372-/\274\326\227\214\276LC\320=\240O\243\274[6\021>b\345#\274n\004\313\272Ux\261\275\340s\276\276\213\t3\276\n\253\232<@\213a\276\2537\231\275Z\034N>\212y\241\276\213\205\016>F\212\244>\257\237\221\276/\316h\276\340\232\t?\227\036\032\276\004\337\240\276\206\022g>\035\302a\276\257B\r<n\354\316\276\006F\354>\321\242)>\301\034\333\275^\306\356>_qU>\311\250\204>d\311\014\275i\022\241\276\301\313f\276\357\317\273\276\366\215\343>\305\370\t\276\002EL>\230\330\222>\212\254\263\275\332\0132\276\346\261\001>\027#\325\275|V\206=\362Pz>\222$\337>q\363\203>\372\300\244>X*\211\276\364\364<\276\235U0?d-0>\027\335F>\357p\232>\\6\'\276\354\3316\276\2246\232>\307\214\033\276\350\024\323\276\317\020t=\000\003\316\276\325E\267<\227w\232\275^w\224\274aD^>$\007w>N\354e>B8\202=<pK\273;#\243\275\257\023\316<\323\341\272>\303\255W\276\203\020\237\275\272\014\000\277\315)q\275YS\005?tm*\275\231S\271\276\225A\206=u\212 \276\263\217R\275\031\004\326\276h\030\"\276\335.\'\275\251S\204\276\021b\202=/\200\n;\225\203\213\276\351\013Q\276\035\240\204<j\n\316\276\301\003(>`\352A=>\340\">"
      }
    }
  }
}
node {
  name: "model/vf_fc1/w"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\322\261\320\276\312\270\250>\2753M\277\254\263*=\207n\215>+\336\312=+\250\217>\343\031\353\274m\301F?\246w\216=w\272.\276L!\317>4\302!>\211\333\246\276\271\274\343>\213\262\205\275\223\266\352\275\262\0010?\204sg\276\311\227{<\273\353\347>\207l\003?3d\006?\0303\020\277T\255!?\ndD;\346\370\216\275\255-{\276\375\304\003?+\303\265\275\001}\024?\3558\342>_aQ@\234\300\347\277\324(\225\276\351+\315<\225+\333\277(A\322\277}\360\006\300\240.\314=\0315\307\277\234\325?\276\347>\231\275\350\005M>\200{\304\277\333\0071@\353\315\002\300\321M\016@\354\246\215>c=8\276\225m\224>6\3721\275\302\273\200\276TZ\310>\250\014\326\275\'4\211>\240_\250=\3228\201=Z\3074>k\312\246>\311O\224>/\321\341\275\036l|<A@\021?\300F]\276A\2750?U;g\274\224o$>\271k\014?5\025=?\310L\331>\302\327\307>Bf\177>if>\2772\202\262>\235S\004=\313\357\002?\370\361%\277\246E#?\360\2038\276\302j\351;\313\260\216=\3701\224>n\261p<a\3468?\231^w>\310\350\265\276\310d\323\276S\343\007?\021\221J>\236\312\200>\220\'\\\275\215r\250\275\303\206\243<\226\031\375>H\r\374\274\276\036\241=\225\263\355>\244z\240\276s\262\333\276\305\030I\276\221\362\036?1\327\325>\370\277\014\277\006\000\213>\013\210\242\276\356\034J>\010T\361\276\250\023\247>\010w\334\276\225Q\267>?\373\332\275n#\251>\221\014A?]\374\254\276\224\2521\276\'\365\242>\307\000\034?\211\024\376>\215\3310\275J\274E=\240\243/>\237\264>\276\276\213\236={\267\032?\337\220\305>\250\002\255>\271V\222\275\220\243\217\277\275\213{?f\341\206>\251\023A=#\035P?~\355\210?{\272I?{.p<J\014n?\260)\212\276\374\232\341=\363\246\034>}\301\001?e3\223\277\325\237Z?lM\245\277\360\213\230?x,\237>\"\226\336\275\007:\357<\2223G>w\301\020>\005\013\220\276n\0363\276\372I\277\276\013\323\007>-\353\273>\273\274-\274F\266\262=\256\243`?w\005\312>j\377F?\246\000\357\276\255\263\330>\212\237\300\275B\221\312>\016\026G\276>\260\256>i\326G\2766\"/>\037\354\226>T|\200\276\026d\240\276\234\005\002\276\361>$>n\0232\276F\\\225;\301\002t\275_W@=.\2158>\2618\260\274\014\360c\276\213\022\232>I\322\351>\274?\035?P\357\022>\372\262\033?@\363\233>#D\202=\323l8\276i<I>D\247[\276\265\177\000=\036\n\325>\017M\367\276\227L\014=\r\312\034>z\243\255\276\335\366\372\275|v{\276\317\213s>\004F0>w\033\202>\006?\204\275O\022\372\274\311\271[\276\025iS?]\316\244\276\377\252\003?i\233,\277\241`\204\275wL@?\322\354\260>\036\022\000>\245J\262>\007\360\212>O\365Y?\330\211/\276[Q\004>\255\247{\275\352\301\376\276\273.\217>\r\223\232>W\227\227\275\264\266\346>f\336\034\276\364\313<\277\273N\216>\024\343=>~\244\245=\031\r\020?\'\353K?\n\231\004?\367\274&>\376\244\n?\201\020\031>\224Fr;\261\350\362<\020\212$?\213L\r\277G\254c>\337\021\021\277g)\253?\213\000\220\275zk\226>\302:$\275\231\315\255\276\374J\\\274\025t\354\276\245v\327\276V\217\037\276\241\231\001\275\333\003\301\276\331\273A>\323\316\214<U\305\262?\022\357\244=\346U\254?e6\273\276*\370\030=\373\301\212=\304c\302\275\035\277\247=\022\356\024?\371\ns=\0305\236\276\316\345\246>\273\331\372=A\r\021>\0322\252\275U\203\034?L\357]\276@\322=>\203\2348\276\242~\224?e\350\254\276\355\226\237>\005\223\245<~\271\201\276\003\231\345\276\272\000i\276L\362a\275\216E\224\276\003\231b=\\\007\204\275\303\354\255\275^\206\302\276\263\\\232?(eJ=pQ|?+{+=jU*?\303E\236>$\3764\275\035\032\026?\344\241\267\275\017\374\034?e\235\222\276g\3038?\025\206\271\276\342\214#>\221\001\337=zt\'?\321\312;\277\025B\241\275E1)=O\016\246?H\030\342>\274k\344\275\367]\202\276\351\214\347=\036!4\276\260`\264\275\212\263\001>i\2265>K\334\234<I\260\243\275&\257\223\276U\002\222\276\025\235l?\005\245\214\276j\272\231?\007\032\t\276:\002\204?\323\364\345=\317\336\207\274\261\354\344>[1\014?\217\357\323> \317\237>pt\002?\365\311Y>\021\005\210>\302\337\366\276q\257\236>\374\225)\276\202\211\014?\016\006\353=\245\372\'@|\305\021\300^\311\020>u\025F\276\273\242\005\300x\000\330\277\354\275\267\277%\023\212=Gq\327\2777\231\260=\366\302\276=Q\264\230<\352\346\021\300\215\344\024@\202\342\325\277x\204\322?\n\275\230?\340\227D\275k\204\013\276\251.\211>U\324\254\276\311\326\254\276\271\367\210\276\272%\275>\376\033\217\274.\177d>\313\022\t\273o\211\305\276*x\262=\006(\204?\326<\\=f\ry?\337\250\251\275`,i=\"o+\275\343\245\314=x@%?\255j\014?\303\236\275>\330\013\357\274\343\204\021?\371\367\364\276:\372\334\276Fn\301\276\210\013\022?K\232\220<\'t\231>\324\375\225>@q%>\375\271\205>u\222\021\276\257\226\213\276\360OH?\305\360\340>O\217[>W\222)=\262\326\206\274\223\020H\276c\345\002\277>}\032\276L\001\201>\331S\364\276D\225\274>d\210\t\276@\366L\276\337\177\037\275c\305\000\276\214\375\360\275E=\223>\003P\237\275\307\346\020=\010\352\031\276En\213\276-Zn=\'b\330>\315\360\023=\026\260j>\371~\322>5\215\021\277\376\250\204\276!\243D?\\\013\350\275\210R\244=\240O\243\274}\251c>\006\203:>\002(\331=Ux\261\275\336\245\227\276\213\t3\276C\307\004;@\213a\276\325Y\014\275\027\303\204?J\271]\276\370ml?ap5>\037\"\207>n\004~\276\340\232\t? \224\250>\3752\005>k\346\036?\035\302a\2766\241\334>n\354\316\276HS\340>\321\242)>\207\014\267>\357\254\271>7`)?W\214\004>@\335\272\274Av@=D\307|\276\357\317\273\276\2068B?5\017(>!\264\346>\230\330\222>\206yP>\332\0132\276\217!\322=\027#\325\275b\220\276>\200\024\341=\247\0078?\371M\214>\301\261->=\265\211=|\236R\276\235U0?\224B\361>\222Q\370>\212\262\r?\\6\'\276\333\265\345=\2246\232>\207\2345\276\350\024\323\276 \364\265>\004V<\277\3637\225>\332\253m\276\263M\r\276\323a\255>,?a>N\354e>\021+6>\010\252\352=\022~\014=\257\023\316<U\007\365>\303\255W\276\001\221\321\275\272\014\000\277\341\tT=\353\302\246>\267\014\220=\212_\352\276\026VP=[\310\023\276\263\217R\275\031\004\326\276\257\006$\276\246l\342\274,\271z\276\021b\202=\333\325u<\225\203\213\276\211\'`\276\035\240\204<\371\226\307\276^t\031>z\024y=O\311\023>"
      }
    }
  }
}
node {
  name: "model/vf_fc1/w/Assign"
  op: "Identity"
  input: "model/vf_fc1/w/Initializer/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "model/vf_fc1/w/read"
  op: "Identity"
  input: "model/vf_fc1/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "model/vf_fc1/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/vf_fc1/b"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "Q{\351?\374\2007\277>\226\252\274\000\000\000\000\222]B\277\340\221\'\277\'\254,\277\000\000\000\000\273@E\277\000\000\000\0002\231\317\274\000\000\000\000\3219K\277`\254\002@e\241 \277\317\032\345?"
      }
    }
  }
}
node {
  name: "model/vf_fc1/b/Assign"
  op: "Identity"
  input: "model/vf_fc1/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "model/vf_fc1/b/read"
  op: "Identity"
  input: "model/vf_fc1/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "model/vf_fc1/MatMul"
  op: "MatMul"
  input: "model/Relu_1"
  input: "model/vf_fc1/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/vf_fc1/add"
  op: "Add"
  input: "model/vf_fc1/MatMul"
  input: "model/vf_fc1/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/Relu_3"
  op: "Relu"
  input: "model/vf_fc1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/vf/w/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        tensor_content: "P6\340=v=\245\275\254#\223\276Su\320>h\370\343\275\313\362\036\276`\320\340\276\227\375\240=\322&\363\275$\351\376\276\215\266\242>\245\326J\275*\267\257\275\215\004\262=\340\322\221\2763\350B>"
      }
    }
  }
}
node {
  name: "model/vf/w"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        tensor_content: "*\250\235?!\231n\277\202\237\214\276Su\320>A%Y\277\365&I\277\244\371\204\277\227\375\240=\315\366E\277$\351\376\276Y\371\227>\245\326J\275Q\256/\277?w\234?U\322w\277\316\270\223?"
      }
    }
  }
}
node {
  name: "model/vf/w/Assign"
  op: "Identity"
  input: "model/vf/w/Initializer/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/w"
      }
    }
  }
}
node {
  name: "model/vf/w/read"
  op: "Identity"
  input: "model/vf/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/w"
      }
    }
  }
}
node {
  name: "model/vf/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/vf/b"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.1864893436431885
      }
    }
  }
}
node {
  name: "model/vf/b/Assign"
  op: "Identity"
  input: "model/vf/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/b"
      }
    }
  }
}
node {
  name: "model/vf/b/read"
  op: "Identity"
  input: "model/vf/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/b"
      }
    }
  }
}
node {
  name: "model/vf/MatMul"
  op: "MatMul"
  input: "model/Relu_3"
  input: "model/vf/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/vf/add"
  op: "Add"
  input: "model/vf/MatMul"
  input: "model/vf/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/pi/w/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\353\001\3739U\027h;4\350\270\273v\"\006:C\324\306\272]\2408:\021\255\212\272\036\325\3169\000\352\025;\364\233B\272\3025^\273\235p\316:a\240\017\272k\031\251\266\035\200\330:U4\256\273"
      }
    }
  }
}
node {
  name: "model/pi/w"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\017\341b=\242\211\030<{\305\315;%4?\276\021z\335>R\255\227\274\273\024\261\275p\341\030>4\254\031\276\213Ml\274\262\337\304\276\254\314\231:T\352\216>\351\025\001\275\224W\321\273J\206G\276"
      }
    }
  }
}
node {
  name: "model/pi/w/Assign"
  op: "Identity"
  input: "model/pi/w/Initializer/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/w"
      }
    }
  }
}
node {
  name: "model/pi/w/read"
  op: "Identity"
  input: "model/pi/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/w"
      }
    }
  }
}
node {
  name: "model/pi/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/pi/b"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.3546905219554901
      }
    }
  }
}
node {
  name: "model/pi/b/Assign"
  op: "Identity"
  input: "model/pi/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/b"
      }
    }
  }
}
node {
  name: "model/pi/b/read"
  op: "Identity"
  input: "model/pi/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/b"
      }
    }
  }
}
node {
  name: "model/pi/MatMul"
  op: "MatMul"
  input: "model/Relu_2"
  input: "model/pi/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/pi/add"
  op: "Add"
  input: "model/pi/MatMul"
  input: "model/pi/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/pi/logstd/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/logstd"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/pi/logstd"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.7514435052871704
      }
    }
  }
}
node {
  name: "model/pi/logstd/Assign"
  op: "Identity"
  input: "model/pi/logstd/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/logstd"
      }
    }
  }
}
node {
  name: "model/pi/logstd/read"
  op: "Identity"
  input: "model/pi/logstd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/logstd"
      }
    }
  }
}
node {
  name: "model/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/mul"
  op: "Mul"
  input: "model/pi/add"
  input: "model/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/add"
  op: "Add"
  input: "model/mul"
  input: "model/pi/logstd/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/concat"
  op: "ConcatV2"
  input: "model/pi/add"
  input: "model/add"
  input: "model/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/q/w/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        tensor_content: "B\253\246\273\013a\255\271\000\2519;\327ao:\2358\2219\036\356\210;L\0365:\335\232\2129\273\223\"\273\027\255\231\272\262\203\236\273sC\001:\363>E:\353Cf8\264\325\360\272,\233b;"
      }
    }
  }
}
node {
  name: "model/q/w"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        tensor_content: "B\253\246\273\013a\255\271\000\2519;\327ao:\2358\2219\036\356\210;L\0365:\335\232\2129\273\223\"\273\027\255\231\272\262\203\236\273sC\001:\363>E:\353Cf8\264\325\360\272,\233b;"
      }
    }
  }
}
node {
  name: "model/q/w/Assign"
  op: "Identity"
  input: "model/q/w/Initializer/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/w"
      }
    }
  }
}
node {
  name: "model/q/w/read"
  op: "Identity"
  input: "model/q/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/w"
      }
    }
  }
}
node {
  name: "model/q/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/q/b"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/q/b/Assign"
  op: "Identity"
  input: "model/q/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/b"
      }
    }
  }
}
node {
  name: "model/q/b/read"
  op: "Identity"
  input: "model/q/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/b"
      }
    }
  }
}
node {
  name: "model/q/MatMul"
  op: "MatMul"
  input: "model/Relu_3"
  input: "model/q/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/q/add"
  op: "Add"
  input: "model/q/MatMul"
  input: "model/q/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/split"
  op: "Split"
  input: "model/split/split_dim"
  input: "model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/Exp"
  op: "Exp"
  input: "model/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/Shape"
  op: "Shape"
  input: "model/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output/random_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output/random_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "output/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "output/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "output/random_normal/mul"
  op: "Mul"
  input: "output/random_normal/RandomStandardNormal"
  input: "output/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/random_normal"
  op: "Add"
  input: "output/random_normal/mul"
  input: "output/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/mul"
  op: "Mul"
  input: "model/Exp"
  input: "output/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/add"
  op: "Add"
  input: "model/split"
  input: "output/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/sub"
  op: "Sub"
  input: "output/add"
  input: "model/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/truediv"
  op: "RealDiv"
  input: "output/sub"
  input: "model/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/Square"
  op: "Square"
  input: "output/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "output/Sum"
  op: "Sum"
  input: "output/Square"
  input: "output/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "output/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "output/mul_1"
  op: "Mul"
  input: "output/mul_1/x"
  input: "output/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/Shape_1"
  op: "Shape"
  input: "output/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "output/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "output/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "output/strided_slice"
  op: "StridedSlice"
  input: "output/Shape_1"
  input: "output/strided_slice/stack"
  input: "output/strided_slice/stack_1"
  input: "output/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "output/Cast"
  op: "Cast"
  input: "output/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "output/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9189385175704956
      }
    }
  }
}
node {
  name: "output/mul_2"
  op: "Mul"
  input: "output/mul_2/x"
  input: "output/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/add_1"
  op: "Add"
  input: "output/mul_1"
  input: "output/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "output/Sum_1"
  op: "Sum"
  input: "model/split:1"
  input: "output/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "output/add_2"
  op: "Add"
  input: "output/add_1"
  input: "output/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "output/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "output/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "output/strided_slice_1"
  op: "StridedSlice"
  input: "model/vf/add"
  input: "output/strided_slice_1/stack"
  input: "output/strided_slice_1/stack_1"
  input: "output/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "oldpi/input/Ob"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 30
        }
      }
    }
  }
}
node {
  name: "oldpi/model/flatten/Shape"
  op: "Shape"
  input: "oldpi/input/Ob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "oldpi/model/flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "oldpi/model/flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "oldpi/model/flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "oldpi/model/flatten/strided_slice"
  op: "StridedSlice"
  input: "oldpi/model/flatten/Shape"
  input: "oldpi/model/flatten/strided_slice/stack"
  input: "oldpi/model/flatten/strided_slice/stack_1"
  input: "oldpi/model/flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "oldpi/model/flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "oldpi/model/flatten/Reshape/shape"
  op: "Pack"
  input: "oldpi/model/flatten/strided_slice"
  input: "oldpi/model/flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "oldpi/model/flatten/Reshape"
  op: "Reshape"
  input: "oldpi/input/Ob"
  input: "oldpi/model/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "oldpi/model/pi_fc0/w/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\002\t\205=\215H\000\277\"\367\375\275A\304m\275\0055S\275\366\357\273>\270e\035\277\256\'\251\275V\353\373\275\001U\236\276i\257\256=\337eS\276\274\246\223\275\302\277(>\312\320\233\276Y|\237\276`:\211>J\265j=f<\262\276\261\n\200\276>\026\300\275I\034\375\275s\374\221>\267P\020\275\236\'\244\276\026q\227\274c{\243\276\312\216.\274\010\003\314>|\260\326\275\200\206\206>\247\\\334\275\3235\255\276z\354\334\275\270\375,=W\212\320=-\206\212\275\310U\217\276\261o\016<\300\213\267\276\2133;>/\321J>d{\210\2740\302\244\276\303\221\320=\014/\324\276\216v\314\275\307\003\207>\r\3513>\r_\216\274fV\030=\344\2671\277{\1772>\331\315\217=\305*\234\276\3506\262\274XL\240\276\004u\206>HUz>\271\250n>AI\235\275\313\213\'>\271\247\000?\333iM\275>j|=\250\'6>{cA>\037\310D>&\367\215\276\006\371\300=\300A\273\275\246%\360>\255`5<\335\332\305>\030\243%?\300\002\276>\206\014\336\276S@7>\211\245\213\275Q\240\230\275MD\002> \314\025\276>\337T\276\336\270\306\276\237a{=\337V]>Q\226\017\276\254@7<\273\000\224\270aD\020\276\355(s>\273_\310\275\300Y\204>[\336\230>(\307,<z_\240>\007\331`\276\370\374\357<\305\177\251=\322&\021?\212\215\272>\223\263\\>\336w\213\276\177\001\027>\225^\323\275Y3d<-\261\253\275;\370L>\235\263\243\275K\013\226=/\237e\276\245\217\211>\366\323\230\276H<V>M\'\326>\317H\302\275`\304\244>j7\212=Z\010\277=(\0247\275c\302\003?\250\254\267<\235\252\267\2767_\360>\312\320E>\006\2639\275\251\'\203>\314BF\274/\220;\275\022/\'\276\274`z\276\334(\303>a\315\262\275\2736U\273jh\271=\256\014\204\275\315\207\365\274\250Y\376\276\206\307\245>!\3700>\303\306\363<&\223\223\276p\331\220\276\3553\301=\312\364\323\276\024\251\255\276\363\311\022\276.\"\222\275\362\021]>\000};\276\371\321\350=\036W\214\275\370\364\022>\255\'\274>\276\214h>p\314\322\276\360~\241<\'\345\221>\0351\233\276\217\005\366\276\366H\026<\200\tV>\336\tz\276\234\257\215<\311*\315=j\210@\276b\355R\275~\226\220>Z\335\226>\n\254_\276\"\246\344=\251\207\221\276\307\016\002??W^>\300\356\240\276\373\242\344=\245\343\003?\022\n\232\275\251\317\264\276\234q\027\275\347~H\274\332\206\037\276\241\227\207=\307\260\032>h\3530?t\035\036>d\020\r>\264\312\177\274\300\207\002\276\222kX\2751\235\372=\237\351\261>\037\023\343>\374\2500\275]\033H>\272\'f\276\\\316\223\275\177\240\377=\307&&>o\000\204\276+u7>\257\312|=\332~\014=\007\030g\276\250\346W\276\236\226\n>\363\"B>_\007:\276\264\326\315<\235\342\t\276\350\213\264\2758?;\275\017\362\216\274\355)a=]\215\317\276\232\342\354\276Z\234 ?\327\201;>\277\004\020>\274\235}>\030\032\327>\212\203 \276m{\256=\206\242\000\277\000(\305=\231E\037=A\232\013?\337\265\017?J\004M>\316\264v=$\345\252>\270/5<\215\333\036\276\023&\212\276w\375\354\273D\r\253\276&A\315\275H\341\267>\306w\321>\251\2058\275[\357\267\274\266\340\277>\341\203\372\276\177\375\317\275\226\303\210>\263F\247\2762\375m;\366\373\361=\265z\026\276?\200\320\275iy\333=0\333\220\275\002\037o\276\375\206\315<\024\303\352=(\024\221\275\335p\216>I\224\302>\352x\251=Z\2559>\333\345\t\276\231\213#\275\325)N\276%0\245=\004\276\225=# \372<\317\225\303\276\030sv>zB\362\275*\251&\276\341ht>\232\235\247>\026\315\250>0b\016>\2567\n\276\324\355\261>\230\236\207\276\025\225\376=*\242\301>\227\361\211=\205b\256\275X!\370>\323\243\004=\006\r\021\276\027\366\202>\255\035\331>\025\037\326>\352\253\212\276M6\273>\310}\336\276G\227V\275\312G:>\323\372J\276\345\243\t\276>\377p<\274\364\330=\333\276\232\276\026v\272\275\210Q\211>!\266s\276\260\376\335=\205\303)>\247\202\366<r\233u>\200\321\250<\206\254\030>\242\204\031>\033\374\300\274\231W\213\276\220\316B?\375\350@=R!\250\276)D\333=\221\325A<D9N\276z(\335\275|v\025\277#\030\002>\337\316\367=W#Q\275\236R\231\276\243\247k>\\PS>BW\033\275Z\264\024\276\307\252\033\276G\242\004\276\222E\317=\r\333\347\275\356\375\210\276\273W\034?a\"?\276\334\275\327\276\377\305$\2768\241\222\275\327\212\023=o\016\352><\004%=\001\214_>h\r\376>\337\364\265=\301\334@\276\271\023+\276\031\r\223\275\177\024)\276\350\215\300>\215\307X\276\376 \226>D\326_\276q\220\217\276*\331\344\275\240|\023\276\027~\027\276\354\010w>\3421\230\276\335`\031\276\005\300\344=1\n?=i\303\272\2752\024\274\276\271\336\001\276c\232\346=n\266\006\275\217N->4\311\231\276\322\037\013>+;\303\275\272\010\372\274\230\316\273\273`?`>1\312s\276\235)\325=\t?\t?\307\276\216>\001v\304>\245l\003\277\323<\216<l\004\321=\027E\340>\226\n\205\276\267Aa\276\365i\336\276\267\340Z>Gr0>,|\317\275\013\365\231\276\023\3413\276\324\233\222\275\302\t\t\276a\276\234>9\314\037?\211\343F\275N\261!\276\"\264D>\261\270C>6\014\342<T\345E;\323\005\t\277u\363\256\275\n\322\231>\177k1>\310\374#>\245>\351\276\221\352\302>\\\327w>\201u\360=e\025\023\275\323\337\\>u\2521>\361\357\241\276s\364\235\276~Q\035\272\307\220v>^,\257\274\205\306\201>\300nv<E\262\223< \300T>)3\021<60\177\276\214\210\240\276\006\207\020=\272\306u\275 \212\256>m\035\365>I\304\023\277\204\305\212\275\2742\262>4a\247=@\r\212\276\227@[>Q\203x>x\007\000=K\001\232>l\032\264\275\234\005\263\276<M\013>\212\267i\2752\350\340<\370\201\352\276[\336d\275\311\335\372\276d\346&\276a\007\022>E\342\030\276\036k\233\275\023N\265\274@o2\276\227\242\257>m4\312\275\277e\027\277\233B\t?\2410,>\003\303>>\333\3621>\270\253\303\276W\300\366>\275\350\205=\241\253\027>\022\314\244=\257\255o\276AZ\330=\206R;>\2465\352=\nX\264>\277\316[\276\365&\357=\360\210g=\351B\331\275#u\021\276\374@?>\342\334\225\275\337\345f\276*\000B\276m>[=dw\341>\363Q\374\275\347e\'=\373\370`\276\342\220\332=\t\233b>K\332\375<,+\205=G\353\234\276\320,\007=E\254\305>/\222\331=\346\375\330\275\303\024v\275\356\340\013>^\345\026?\272\0138\275M\204\253>\030\205\200\276y{\247>H\227\221\274\246\2017\276\206\000\355>\326\240\237>]\334\210\276\246Q\t\276Ig\242\276\007\300\003?r\272\327<\2348\310=\\\376\302>Dd\357=a\262\215=0\311\006=u\t\325<Mh\233\273\260\"g>#\027\213\276@~\254\276rL\001\276Mf^\276\357\021\032\272\351)\217=\313\033\003\277\007\313<\276s\324\207=\324U4>\2538R=\000\366\214>\346\001V\275r\257\202<\257c\340>\266}\217\276k\222 =\000\212\316=\221/]\276\243u>>\211\tX>^I+\276p\260H\276~{%>\261\274\277>&\266\251\274\262%\220\274q\034\010>)\231\n\277\306{\031?@\303r=\002\234\002\276\223<\223>.\023\247:\027?\217\276\353\316A\276\340\016\305>\226!\373=\277\014\037\276\370\206\004?\241\213\226\276\355\376\310<Z6\237\274\024\227\210\276U]#\275P\0244\276\305\305m\276\211\021\215=\370\336U=B\233\206>\207\315\271=\310u\345=\200\022\340=\232\345\001=pV\270\275\323C%>\230\024*\276\3419\222\276\024\214:?\333\371\246>\247!\312\274\t@\032>\333\010W\275\262\262\334\276(=\240>\370\313Z>di\367=\000\021\"\275\220\206\212\276\274\314\237>\307\330\365\275p2\200\276\237c\032\276\310F\251>\254\367(\276c?\373=\tse\2766\372|<1\243\034\277\220d\321>\204\336\336\275x_\014>\334\247_\276\34325\276\245\027\255\276\323i\362\276\021;?\276r\005\214=\226<\321=\025\030\001\274kI\322\275V\205\224\274\270O\007\277\257#\007\276\316\210\313\275\r\020\321\275\007\277\205>\2322\232\276\332K\375>q\304\003>\345\327 \276\247\264F=Y\036\202=\026\364\236>`a\273>\255Q\273>0X\000\276\373\002;>}\273\230>\002\276V\276\320U\211\276\250\013\325\276Z\005E=\332\007\223\276k\326q\275\006\021\023>\035]\273>v\307\227=C@\316>\337\304\230<\276\334\001\276p\3613>\345\227%=\204\202\204>I\336\261\276A\343\213\276\340\302\342<\005\005?\276\223M\203\276\205\"\301>\200\"g\276\203\365\362\275\241\036j\276.\377S>\177\313\256=\006\0349>_5\263>\370\'\215>\215\234E>\305V\032\277\017A\214\273\232\331\265>\010\302h\275\262#\201</\307\354\276r\013x\276\276\010q=\276\261J>\"\3724=0\355\346\2754X\205>\333\341\361\275\252\017\020\276\334\027I\276y\235\\\276+\324X\275\356\374\327\2756\244\215>\251\261\317>+\346\232\276\217s\202> \307\302\275L\230\303\276\336\'\252>|\216,\276J\230\311\276\334\247\203=w\364Y>\254#\n>\311\261\337=\277\310\235\274\271\272@=\243\030\367\274FHN\276\013BA\276?\246\t\277\\^\204\2766\375\r?)v\211=\235Xo>\274\016\315\275&\267\300\276R\021\302\276k0\235\276\003\374\204\275\215\t\322=\244!l\275Q\257\370\275[Y\216=\215\377\254;\217\366\256>\3343{>\305\2249\276\354\020\004\277]\037\320\274\333`\014\276\013\327\227>\010`}=vI\305=|D\010?|\276\n\275\016\036k<\2711\005\276\205.\200=\215\373\305\276\307\272\241\275kL\235>\244\350\253>\215\255\350\275h\345\343\276\355\235O\275\301>\320\274\\u\262\276m\375\314\276\2733m=B\024\211\276\n[Z=\306\0366>\013~&>\340j\251\275n\266!\276\005=\213\276\036\t\274>\\\224K>\217J\230\275\r\212\004\276\214\215s>\271\302%>\212\342g\276}Q\216\275\0172w\276\235\367\211\276H8\323>F\245\201\276\335\3630>\025$\245\275LC\217\276\323\371J\276\262\026L\274Z\3024\275\214*h\276\301\225\333=\314{B>\"\2076>\255\211\266\276\035\302.>\326\035\031>E\226\013?\3170\216>\3413\323\276\3242\353>\337\230%\276\206\024\201\274kR\267\276HL\240>?\340\200\273a\n\035>>B\247\276e(\307>\022\334[\276\272\220\234\275{Gl>\313\231\010\275\014*6\2767\266\210>\373z\223\276=$\261:\032_+=H\271\027>\230\316\235>\331\202\241\276\016J\323>\327\276\324\275\342\036\306<.\242<>\367{\363>6\\\211>Vl\255\275\230\247y\276\250(e\276\305zl\276\261\341K=\266+\221>\242\215\022=:\352\035>\'\014\322>\035J\244=X\251\373>$\253\002\276w\365|\276\377p1=*\216\035=\t\370P>n\036\243<z\363h=,\302\022=\235\216r>9y\253>mb\n>\336XW>\305k;>\255\020\240>.\003\372\274a\0143>\021{\002?:<\204><\305\370>\335\2407\275\027\257\352=@Nf\276\017\302\367\275D\002\275\274$\265r\274:\324\027\276\375\247\324\274\017\2319\277\230\267\201=r2\033\276\026a\003=\320\\\002\277`\\\001?\220\263\227\275\350\365\004\275\311$\202\276 \\\001\276s-M\277\324!H\275\013\355\034\276\0255\246\276\230\237@;\026\3630>\317\326\013>\361\312\261\275~\235/>\247\343U=\205&r>\207\363\200\275(\354}\276\211\300\373=\336\305\210\275\223\027\322>-$\301\276aA\234>\nwW>(\211B=@,\216\276\205\n\026\276\020<\371=\314\006\322=4\006\243\272\024\014\217>T\024L\275\301S\317<?Z%\276\203\357e\276\222\316\210\276\264\272B>\351\316J\276\246\353\324=\347u\376=]\273\344>\221\356\006;\256\2762>\272\274\200>\236\367\304\275<\365\335>9-T\274R\365x>#!\303\276\202\212\262>s|\263\276@\340a\275nl;\274\000\241\222>+\335\"\276\307\364\361>]\261u\276\256o\373>3{\024\276\\AR>\357\202#=\035\003\212\276\363s\205\275]\247B\276\367\037E\275kYi\275\344\020\204\276\'\235\244>\337\0211\277a\2648>\260\360\276\276\254\347\350=\330\370{\276\331\2509>q\2177\275\202\367;\275\217\262\357>\267\203\036>X\302\355>\301\302\241>\010\236\323\275S\203\245\275,\007.\275\375\314\023>H\3147>\020\035\313\275s\226\204\276\0160\205=\363\350\272\2755\211\241=5\247|>\350\322\302=\323\231->\207\211\365\276\245\350\301\275\005\362\026\274\037\024\006\277\376q\242\276=\367q\274G\307\213\274\243G\n\277\372\310f\276l*\321>\2261#=\243\376\021\276\333=\353<\234\333v\276\344\201\214=\325\267\027\276\214A\304>\222\014M\276.\335]\275\300\252\032>u\371\253>\276+\205=t\211\200\275B\031t\276\200\205\t\276\316U\341>P\344\331\275\330t*>N\247\253<\353\304\230>^\273\303>\354\001\020>\317sG>$\326p\276&\261\007\276"
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc0/w"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\037\325\023?\n\304[=\177\231\334\275A\031\207\276\214\374)\276q\352\362=w\261\351>lL\323\276\241\336\005\2777\247\203\276F\226\203\276go\352\2743\243\222\276\331\256?\276\305\'P\276c5\006\277\035\267\000?\227\262\360>aN\207=\232\215\332=\223\376G>\364\377\375< \275\324\275\216\204\224\275\211\373z\275\363a\001?\345c\307>\226&6\276TB\035?\275\017*\277\216\201\026>\346N\270\274\236\250\321\275\355\332<>\310\224\230\276M/\250>\367\355\260<\252\314\213\276\264\373\252\274q/\304\276>Jd\276\244\354\374=\020~\230>/\274J\273\217\200\333>\263\315\201\276\205\274V>\3118\341\275i\024)\276\257z\243\276\22023\276\341fo=\262\343\305>nR\007?\216\264\353=4\014\316\276w\350B\276#\265\324\274\330\371\260>L\026T\276sT\375\275\332!\233<[\321\334\276\034y\351\273k\216)\276\327[\007\276*\227A>\242X\344<!\313\317=\2702\214\276s\032.\276_\2172>\260\323z\276\343\226\364\276j\220\250>\254\005q>\234:\247>\227\373\367\276\024q\271=y\353a\276\003\005\310=\223\0262>]\365\226>\022\010\370<\235\"U\276(\341\374=\366\346.\272\036\021\274>D\271\350<\263\010\025>\222\237\317\275\016\020\372>.\362\270\276\272\313\317\276\377\337%=f\230 >\235j0>I\027\200\274\336\240\236\276\315\362\370\276\024\307\017?\020\236\211>#:\244>\001X\035>\227v\267\276P>\355\2748\246v\277.\356\000\277\223\2202\276\233H\277>\274\004G\276\270\017\033<\'L\337=\235\304\317\275\317o\370>N\t\025\275\026<\351>\274\334\030\276\217\211\326>\273\220\201\275`+\211>\3356\006?{\n\235=\321\311c>\364\346\202>D\370B\277\215R!\276\212\241\222\275./G\276\303\264\211<0\337\316>\022N\356=\265\361\211\275\010m\350=6\305\263\275*4\376\275+7\254=0\354\244=J>V=>\363H>\353<\262>`$\206>\2546\t\277P\226\222\276\273\221\361=6D\232=v\341h\276X\r\200=y\'~\2765\374\220\276W\204\232>\";j\275\326\376\205\276{\313\372>\037\335\206>\021\2227>\177{\213>{b\216>\322\036\016\277~\025y>\311\230Z>\304If>\354\224\016=\252\005\242\276\332\205+\276\334\266\274=f8\252\276\014\252\341\276\017H+\274i\215N>\266{\362>\212\352\305\276\3448\216\276\346s\247\276\202\323\256<\354K\242>lq\001?a\213$\276\252\nK>!\233\214\275\363\265\244\275<\nx=\006\314\006?\352\2764>\375Q(\276Z\221V=\220r\345\275\002\222\366=\014\322\330=\002\213\315=\350\3642>Ph\317>M1!?*\201\221\275\362\252|=v\376,\277\353D\304>\301f\177>0eY>\017\tm\276\234\322$>\313\310)=\007\2138\277\333\272\014\277]}n\276R\022\374<\010]-?s\246L\277\206\002\255\275\020A.?x\360\223\276\177]u\276\314\377K>W)7=\335\026\302>H\310\346\275:S\272>\035\2122?\225\350\202=\021\301?>\036\\\271=I\326\310\2769}\t\275\303\005\n>\336\217\257>}\345:\277#9%\277\233\257\254=V\035\337<\246\206`\276\330\206\244=\021LP\276^tq>\'\320\206\276\n7\322=\361:.>?\255\360=qNL>\263\222\240=C\246\331\275\000\366\276>g\316\027\276\347\331<>I\270\376\275\2321\332\275\3679\000>\317\n\375\274\307\027_>\022\223*=O$\254>\3309t\276\276\0006\276\307\354V>\2233\215>\250\327\202\276x\005[>\\\333\322\274\206I\276\275n^W>\231|i=I\272\271\274\261!\214\274S\351)>\3656\314\275\225\234&>K\340\320=P1\233\275cG\"?\013\032\365=\262\t~\275\355$\004\276\301l\311=)\020\243>\237\255\376\275\243\302(\276\377\315\214\276\377\247&>YiA>\037(\212>\320\2321\276\204\360\370>\026\3310>\226\274?>Z\320\225\276d\324\243\275\034\033\206\276\0323\035?\353\232(?\333\351\330>8O \277\023\305\260>\314T\302\276\233\234\251<\315v\377\276\006T\335>\260\207j\275\032\344\315\276\2111\007>n1\356\2763\000\313\276|\000\206\276pU\246=\321\303c>\260\225\247\275\224\270\321=\305h\227=T\203E>A8\"?s\227:\275\207a\037\276\237\227\017?6\326V\276:\366\333>5\362!?+\365\262>\214s\\=K\247.>\032m\003\276\221\203p>\223\314\007\276?\032\317\275\203y|\276\220\001;>\3633\207<\273\nK>\207\331S\276\252j\326<\r\216\033\277\254\227u\276!3\205\276?R*>\201\0135>C@\225\275\324\324x=\225lP=sQ\252>\203\225o\276\330D\373\275\373\r\354\276j\366\331\276\364\236\310\276\343Ss\276<\202F>\263Y\235>\341\223W\273\277\301\327\276<\014.<\t\313\034\2763\362\332=\270\356\244\276\360\333e\276\357\210?>\342\321\231=M\353\235>\201\026[\275WF\261\276\274\271\355>\000\250\263\274x`\026?>\342\377=]\357\007\276\201\222\241\276\202\314\356>|F\223>\037\3710\276\014\326\014\274\341\351\216\275\345g\017<VT\341>\237\321B\275\264_\004\277\222,\210\275\367-0\276\305\252\000>\207\363\272>v\312Q\276\252s\241\275:b[>\313i\336\276Q\334\006\275\213\216K\276\360u\313=m\254\027=\024\316\203\276! N?\257\215z=T\035L>2U1\277\352\025}\276\233\nQ=]JY?\336N\327<\002\250\035=\241D\315=\234\251\347\276\300\331 \277#\215u=B\233\364>67\252>\355s\341\276\030j\273>\246\213\010?\257,\\>\276\r\017>\373&\253>\312\241\255\276C]\024?\024x\342>\312\t?>\237?\351>%\366(>\253\321\245\276\220\326\267<\243[\225\277\263\313\203\276\201)n<\304\243\177=\233\336V>\247\344i\276\246\001\307\275\267\363\256\276\204\323\353>1\247\004>\371\205+\275\240d\021\276y6!<$r\321=\362m\310>w\343V\275\315=\303\275\253\234\025>$\317L=\003\223\377\276g\277\000>\n\361\257>\322Yt>\224\304\335\276/\271\231;l\230\230>\304\246\023>\211\030\005?\236q >\005\347\244=\360D\314\276\326\037\217=\207<\017>?\201h\276\314\272\007\276\205\302r\276\255\201\363=V\035\303\275A\026\r?/\262,\276\266/p\276?\327k>\371\200-\276\263\014\024>_\323\372\275\002:N\276T\027D\276\333\312\022\277\265Br<jg\304=\235\006\214>z\001\261>E\014$?\232p\344\275\245g\213\276u5\001\276\222F$>`U\035>\267\335-\275GtI>\223}z>\257\277u=\2533\030>\334\037l=\330\371P\276\347E>\2768\236B\276F\0203?\250\241\303\274\023O\235>\374Fn\277\024\031\277\275\232p\273\274N\032\203?B/\322<\n\035\371>\373Gd=7\0215\277\363\322\216\276\214Z\023\276\3271H\276b\201\247>\270P\226\275\216e \277\314\212\305>\225]\256>\035\351\007\276\245A\227<4\265Y>\213\346v>\036\362\270<+7\265\276\351\237\026?\2467\033>\331Qi>vYS?\256\3737\277\310\n\264\275\312\006\321\274\316\336\202>:<\r>\363~\323\274\275\257\000\276\235\322c<\004\230W\275\343\004\204\276\3154(>X\343\304\276g*\216;[\370\021\277\032\253\210>\313.\331=B\325A\2764\307k>\325\336\207>\024\235\014?}\203h>\203\266^<U?\320=\013\367\377\276d#\266<\242b\377\275{=\341\276\335\372\001\2768\005U\276Sw\304\275\026@C\276\305.\267\275\332\001\226<\226\253\234\276b.\315>$\213\274\275\021W\204>g\0235\276\241\202\251\276Lq\216\276%X\321\274\273(\036?\355\032\230\276/\276\247\276V\371\272\276|4l\276\231\331\004\277\023\323\002?}\336!\275\357_b=\017\310\371=\363U\331=Q\232*>2+\323\2761\323\301\274\234d\220\275h\266\256\275\037\005G\276\2272;>=r\242>S\314\362=;=\036\276\223\006:>\333\214\024>W(C>\033?\210>\213\353\267>\233\250\037?\017!w>\305\230\315\276\253\233\020\277R:\355=\0032\321\276\0212P?\315\340$=\235\000^>;\376\237>\361\243\010\276\216\306\016\277\353g\032>\3242\374\274\330~\252>\272\234\371\276\310\035\360\276\344\257~?\370\3268>H\277\325\275\n/\275<\327o|\277\366\353!?\017\314S\276$\3663\276\246\010\014?&\210\022\276\276#\253\274\314\260E?\371eQ\2777iv>h\0055\275=\252\021>\211]\313\276\000\013u>\003\314t>\336\277%\276\300a\332>\r\223\365>\366\342\230\275;^\243\276\026@P>\330\326A>s\237\215<p \200\274\261\214\364\275~\252\021=\230lh=\224\264\340<8\200\227=\313\316\255>R\021\002\277\374n\355=|\t\232\276\245\325n\276\303B\217\276\216\330H\276\023\346\315\275\n\302\036=\376\031\242=\254\024\323\276\357-\260>de\235\274IP\'=e\0009?K\271\215\275K\332-\276\006\024\031\275\022f\213\276<\276\276\275u\3668>\200\310\005=9r\357\275&\277\205>\247\033\331=\211\270n\276\355-V\275\334\234\335\275G\232\221\276\326\022\201>\266v\313\276F2\207>AZ$\277\001H\375<\313\311.\275\2719G\275\016\261\353\274\374I.\276\354\210\334\272\214M\035?Fb\r\277E\341Z>i\202\t\276\254\2560\277e(2\275\252\337X>\205)X?\262\312\200\276\255\370\235\275#U\033\277\222\001\341>\021\321M=4\203\200?\245\223_\276y\363\254=\346c\353=\363\025\025\277AA\231\277Yr\310>\2751L\276$\300\313\276i}\376\276\372k&\277\004\034\307?\037\227\014\275\266\237\221=:\366\323\275\276n\310\275\334\037N?\006Td>\206\205(\277@~&?\361\242\217\276GV\'\277Bc\003?\213\nM\277}vj>\204\014\334\276\300\344\000?-8u>\226\341>>\240\177\314=\016\226\314>G\340\003\277\231Ss>\036;\314>\263\350\221\276\235\036;>1\251\212=\363\234\233\276\305\222\215\274Q\376\307\271\225\007W\276@\250S\276\276g;\276a\024~>\352Y7>Y\254\302\276\"\002\273\275gN)>Op\302\274\364\362J>\n<9>\307d+<\0304E>j\376\246\276\004\323\353>)\310\364=\365b\204\27552i>i\005\236\275zyh\276\340\203:=Yg!>\007\375-\276\322\177Y>r,\236>LIB>\243!\355\275\337%\370\275\367\334v<\r\360\315\276\340wI<9]\257=\005p\201>g)\335\276f\375=\276\020\246^>P/\031\276R<\317;:\\C\276\027\232\350<}\323\317>\264\263\257\276\r^\245\276\375\304%\276\252\330%\277h\207\215\276\014\323\005?Fa\363\2769-*>\340\t\211>\010\365q?o)\004\2759\347\331=\315\251.\277W\243\234\275|\310\362\275\263\212{?!>\364=\201\277\230\276\343\365\264<\334\357%\273\327\246)\277?\020\220>iW\371>\376\272\325=\206V\352\276s|\032\277\023J\334?\024/W\276\222\332\037>\352\272\021?\327\360\204=\200\321f?\227\005l>f\312\327\276\"#y>SD\014\277\351\357\t>H\216\207?\330\257\017\277\032@\"=\033\251\003\276t\022\014>\034M>\276\017\317\024\275\001\360\n\277\3073\377\276\367H\342\276\330\377;\276\255\024\356\275\243\031\001\276#\007|\276\345\245.\276[a\231\275O\362h>cm\020\275@S\004\277i\316<\276\t\247\253\275j\232\301>\033\367\020>\366.\034\277\002\205p=\326\363\244=\271\016\311>\227>\374\276.eC>\220\350\024\276\254\030\025\276\316\304\345\275q\'\312=N\250Z\275{\331u\275\335M\316\276\036/\022?~k\375\275\252(\350=H\227;>\016k=>M3\353>\373\000!\276\314\343\276=\004;\n>\002\327\202\276\373\323\274>\232\001c\276N\037\374>V\225R\275K\017\220=*\327\227>1I\203>\212\340a>\315x\357\276\331\016\347\274\020s\002\276,4\027=\255f\217<\034\017C\276\026\250\277>\343$&\276K\312/=e23>%u\341>\016\306\213\276\'_\031>:\032\270\276\230\024\272?<\207S>\302\306\346>s\022\033\277\367!~>\320\'\254\275\004\035\277?\317\203\353\276n\031\274>\263\374\356\276\273Qa\276\254{\250\277\rl\303>\325O\241=$\312\326;\266qb\277\222X>\277\031\022\265?2z\202>\222\210\264>\255:8>\230\313\363\2761nb?\362\r\345\276\007\006\031\276\027\267\356>\242\246\017\277\324GA\276\335dz?\360\035\201\277)aa\276\"\363\322\275(J\010?\017eH<\217\261\256\276\313N\206>@C\356;z\231\343\275\327U\326>\026\215\210\275\361\3450>\004\333-\276\305m\277\276\"\356\312=\036\r\241=\375\266\330\276\221\246\343\276Xs3\276\345\326/\2763\337\351>B\336\332\275\331sM>\226\3165>\315:\352\275\021\260(??\274\253=\r\332 \276\013\276\026\277K\2059\275W$\255>\237\332\014>\341\313\226=C&L=\253Y\023>\366\201\003=o6\225\276\375\307\271\275\262\224\275\276\t\222Q\276lb\361;y\312\223>\211\236\t?X\255\026>\343p\372\276\2329\332>\263\323\255\276\024X=\276w\366\017\277\257\253\312\275\325\217l>\"Q\361=\373\304\274>\366\237\n\277l\035g\274ENe>\022\270K\276\016\217M>4\261(\276\372F\021=\3436\021\275c\010{>\275\325\223\276\267!\232=\020\nN\276\342y\272\276\377\263\365>"
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc0/w/Assign"
  op: "Identity"
  input: "oldpi/model/pi_fc0/w/Initializer/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc0/w/read"
  op: "Identity"
  input: "oldpi/model/pi_fc0/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc0/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc0/b"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\310A\014\277\377CE\275\000\000\000\000\200\372\367>O\354O\275\213\362C\276\362\231\344\276\251\372;\275\000\000\000\000\336\277\345\275\026S\300<=\275\020?\0331\334<\365\032\241\276\241(u\2751\301\272>)\273\004>\2254\234\276\261h3<\000\000\000\000\314?\2539\032\205N\276\035\264\225\276\306\330\273\274j\234\250\274\021\256 \2779\304h\276_\250\235\275\320\213\227\276Z\037\n?\242\360\341\272Rqm\275"
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc0/b/Assign"
  op: "Identity"
  input: "oldpi/model/pi_fc0/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc0/b/read"
  op: "Identity"
  input: "oldpi/model/pi_fc0/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc0/MatMul"
  op: "MatMul"
  input: "oldpi/model/flatten/Reshape"
  input: "oldpi/model/pi_fc0/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "oldpi/model/pi_fc0/add"
  op: "Add"
  input: "oldpi/model/pi_fc0/MatMul"
  input: "oldpi/model/pi_fc0/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/model/Relu"
  op: "Relu"
  input: "oldpi/model/pi_fc0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/model/vf_fc0/w/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 32
          }
        }
        tensor_content: "(\3476<?\364\373\275\326\270\240>\252<\317\275\014[\373\276\017\\U\276g\322k\275wj\351\275\377\356\205>\177\307\273>\t\365\245>\351\371\001\276\263\322W\276\021\306\234>\366\021\224\274\362\033\253=S`n>|\000\345<a\332\270>,r\351=\347EX>Bp\220>\036\002\033>\250S\375;v\212\215\276o\006\320\276d\366\344<h\224\331<\337ix>\016\363\037\276\271=\330=\264s&?\214\177\260>\313$\246\275\366^=\272ah\037=15|\275i\305\216\276\013\306\204>\311\027 >\313$\350\275GP\255\276O\005\366>\r\223\355=L\004]<r\034F>\331Z\327\274\256\320[<MC\202\275\0251i\276\242S\023?H\r|>N\n)\277v\347s>aS\036\2768,\006\276\304I\344=\326\311\026>\310\262O\276\300\304\342\274\007R\250\275X \245>\362@\261\276u|\032\275\351\345\265<V|\024>c\367\212\276\217\326_>\355r\037>\367\334\375\276\336\330\370=\314?a\276\026M\027\276\001\302\037\276\252W<>3\001\340;\232{\223>z \356\275\'E&>\310\332\253>\026j!?\033\262\242=\017t\217\276\"al>\302\035#>gps\276\226\347\321<\230\276\207\276\206\267\371>\037C\374\276\034\267\356\275PD\332<\023K\270=\001\371K=\272\323\"\275\207-\346=\036\366B\276=\323I>\014!K\276O\376X>\212\032\252\276m\020\222\275\367\327\006>)\245\201>\374ex=\247\347\276>F@`\275\342u&\276,$\213=\332\025&\276\363\204P\276\274\335\312\276\203u\357\275V]\003;_\343:=\030\252\236\276\332\021E\276\242yp\276p+\007\276iTc>\010I!?$\001\242\273\340\213\245>g\335#\276<\224]\275\030:\004\275.\363\361\276\357\226\356>5\t7>\370G\205;|\276\016\276\361\220\352<\330W\211\276\301N\316\275\310\243\"\276c\322{\276\247eJ>\005!\027\276d\312\312=\3458\231\276\017y7\275\342!\341>\272R\004?\014Tv<\327c\342=\017J\252\276\n\300\242\276\004p\032=\235|\224\276\017K\007\276\34099;\321\n\316>*\306n>\272K\323>w\204\316\272\246E^\276\376.\233\276\226\234\241\276k\210\343>\332#\260=\257\002\357\276\221\241\212\276`\333s\276}\2703\276k\357\345>\365\275\335\274\211\273L\276\333\3529>\230\236\t?\273S\200\274\216\313\022?\t\216q=\321\247\247\275\315\341\200\2765l\250<p\314.\275w\367\026>Z6\233>\n\217\206\275~\001\234=\rq\274\276\255p\312=N\265\233\276`\312S=T\357\234\275\243k*\275\240\341\223>\355\326\212\276\0242C>\365M\204\276\225\035\317=\255\016\315\275\277\361\361\274JJr\2762Y$?\007\347<>\374\323\327>\362\302s>\215\251\207\275\270\243\247\2756\234R\276T\206E>\330\373Q>\356\373\321>,\351A\276\305R6\275~\374\265=z\267\356=_\230V>\364\366\366=\346\237-\275@N\246\276\365\'\007<\031]=>\303D\246\275\245\307E=6\222\002?\032\306\250>7\236\265\2768\302#>\255\026&\276\377\255F\276\347o%\274\2404\251>y\3001<\370\236\370=\350\354\366=\344Y\034\276\362L\244\276\027\221\240=f\360\226>h\235\346\272\273\217\274\275\014f\314=\270x\253>\006\020\322=\t\201*>\n\325S\276\'mP>\177\365\034\277R\022\306=\344\347>>yG\001\274\3311`=\217!x>\020\346\252\274$|\030\277\177\350p>W\004\305\275\362<\254\276\221\276\274\2760]\220=\205\027\351\2765\r\020=\247\016\202>\277\373\206\276\252\313\360=\317\217\037>z\365\325>H\3456\274\377\260\205\275\255\301\233\275\331mR>\316\222\346\276\010\235\315>\027-\n>6PY>m]\010=B1\037\275\026\272R\276Y\2058>u\247D>mS\n\277\373F\312\276\313{\301\2764\200\372;}\314&\275Esa\276w\361\341\276\023\217\277\276\361\001o\274\267\273I\274>\357[>V\007\213>v\215k>N\341\263\274\250yR\276@\037#\275R\004\331\276\2523\253>1Z\367=\003\277\331\273\263\210]=\347tb>\377\330\200>\310V\304>\217y<=\313\373\247\276\330\252k>\346\242\353>U7\206=O\274\353>\367N`\276\210\252\340=Z9^>7@\344\276\315g\225\276\000F\021>\206%_>&qG\276R\370\347<^\353\033>\031\311\232\276\031N\222\2728eC>\364\337\334;+\006\214\276\351\223\241\275]\366\204\276\230\325V>\277\365\177\276\210\020\006?p\357_>\313\234\201\275\326@W\276\231\326\022>\251\354\350>0;\263\275\237\036\t\274:\347D\276\033\224X\273\255\360P\276\177\266\247=\244\036\034\277B\r\004>Z\017\025>\211\235\200>\370\253\033>\006\373X>\377\021\237>\267\003*\274\237?\276>\210(o>\033\313\322\274z\217X=\3130\004?\204y\234>\325+\\=\342\021\004\273yQ\255\275\200\315G>0<\220=(\363?\276\254\257|>1e[\276e\300\010?\332\350\246\276~\371\222>Z$\325\276h\010\322=\350\320\"\276\276\361!\275\322\303u>\'\2070>4\002\213>\373\224\004>r\204\'>\267\021\t\275\030\326w=\3122\347=xnR>\331\373?\276l\367\244\274\'\220\220\276\265\357\232\276\232\252\303\276\310\033F\276\344\'\261>\300&\267\2759\272*>\001\377\353>S\311$>\230\347\245>\223T\020> \004\023=n\370\023>\303\352\203\276=E\037\276F)\360>\031T7>KIv>\332z\273\276;\273\007>D\207D\275f\256a\276ti\234\276\031g\265=\177\314\247\275\310\207\257\276,xh\276\360u\032>\376\013\374\275>\346f\275O\363\036=\212\246\240\276m\037\364\275[7Z\276x<\321=s(\257\276\203r\242=\337\321\001\277j4D>\006\355\345=2\367\242=\027.\251=\331\212*?\224\353\016\275^IP>\2701.\276\340i_\276g\222\235=m\377\266=\357W\244\276n \177\276\\y\027\277\241\347\356\274\240EW>C\237\311\276\263\242\025\277\'K9\274\026\245B\276\230\333a\275Y\367\243>\347\304\256\276\240Gg>#|\324\275j\254\356=\200\t\253\274]\255\257\276p\211\013\276\375\210\211:\253\367\312\273v\205\206>#5G>\\\351b\275\222~\273\276\371\333a\276\311x]\276\023\222\335\275\314+\254\276\026\251n>\263\364\310:\272\211\316\276\241rZ:\251\323\312\275\326\016p\276M\277)>\321\204>\277\212\267\262<H\351G\274\013_X\276\212Yk\276\214\223\031\275\264\343\256\276\233\275\271>\014\2073;\217\373\207\276\254\303\363\276\342\"\314\275\327]\331\274\352\001b>&63>\347\364A\275=f\201\275\003\226H<\206(;>G<\204>0\327\253>b\272n\276\277hu\275\020L&\276\326\233\306\276 8\010\276\3127@>\313\177y\275\024e\376>\010\005\245\274\264\315f\276\274\357\360\275\354\251\261>U\312\207=]\324\300\275\335K\255=\206\337\212\276Mj\331>\335?N\275\337\262N>\273\253\327\276\345\357\234\275r|f>f\222\232=8N\325=\315\362\r>O\317?\276\313\227k\2763O\315<[\256\013\276Q(\032\277\233v\312\275W}\201>\317\021\346\276\376]\025=\"\207k>\203\'\246>\257\260\236>\270\224\312\276\257n\342=\261\322>\275\342r\n\277v\2642\276\370;\336\275\333\252\036>\001s\'\276\3556\233>{8\346>\337-\252\275H(\247>\005\323\210<\271 q>\2714\361=\220\277P>t\370\005>\222#\212\276}\346\204\276\004\003\244\274oJ\000?8\024F\2767\014\t\275\222\330f>P\325\013=\257\342\n>\370\n:=\261\303\306\276\030\361\372;u\344J>8*\306=`}Y=\363a\264\275\277\3252\276\275\314~>\356I\207\276\233\371\323\275\270\r\205>Pj\221>\002\005\304\274\356P\362=\245s\177\275\305{\256\275\273U\002\277so\224>~g\267>\370\206(\275\035\332\271\275t\n\316\275{\030\246\276\014o\232\274\223\023\205\275\336)\203\276\000\320\237=\210\230\324\275~\254\223>\243\374\"\275\375\006\025\277\274\215\026?\020+\276>p>N\275\345\241\200>\233\314\362=O\331j>\024\003n>e\203D=-\036\310>2\032\232\2761\337\247<\261\360(>*L\274\276\0245\231\275]<\266=\0003\242=t*3\276\225\255\265\275 \254\355\276\265F\000\276l\314\000\276j\200$>\352\243\244>\346l`\276\240\374\t\276\370d\253>q.\320\276\326\3321>\213\250\347\276S\351\257\273(\002\275\275\355X\022\2766\004\026\277\016\336\357=\202&\276=\002\257\036?3\'\177=\n\t\345\275\370\263c\276nT\214>\301\352?>\3713\265>\214d@>\214Y\321>5^0>\276I\232>t\036\306\275\323\321]=\350\352\367=\335\275->\240*\177\276g\026\274>oU\304<#\362T>\341h\317\276\223\245\255>\366\250\256\276\341\226\245>\2420x\276\360\310\365\273\350\360\212>\275\234\010>\360\217\n=\007y\312=7dm\274n\n\265\275X\327#\2761\346t>93I=Y\256\267=\247w\323\276v\222\226\275\253\031\365>?\365\326=\351\314\234>\303\341\335\276\035\222\354=\241\330\202>\312\037\377\275G\r\265=\342\024\022>,\"\322\275Mj\223\275_\324\"\275\242\027\272\275\237\013\010\277Y\2370>\276\nX\276\340\207d>\370\307\217=I@\311=\267K\245>\303~B\276j\207o=\257\241~\275\022\244(?I\355\'>\346\317t>p\241\267\273\207\366a=0z\213>\265\262\372\274\034\330\214\276\304\214\211\275C}\260=\2445D\275\031\036\000\277\271\265\265\274\222Y\213\276\267\206>>\"bg>.~\256\276-\3528>\205\333f\276^4\351\274Cj\221\276\3108\003?\203\311\323<W,6>E\002\240>\016\220\205\276\325\323\201\274m\263n\2751\304;>\206JJ>\243\222\353\275\336\2718\277\346v\200=\364\252:>\275\307\322\275D\305\025>\256\203y\276zg\333>u~=\276\256M\001\276\205T\204>\305\342\030>cU\311\276}\002\031\276\3109\206>\026\306\361\275\252\262f>\322\304\201\276\257\243i>\262\376\213>]\307\216>\334\250\017\276)a\226\276jn\240;\314\006\225:\356G<\276\230\325\\>\222\303!?mjA>\351>\227\275\371!\205>\3273-\2763\374\207\275c5\230>\217\004m\276\323m\267>W\352F\276~pe=\374|\272\276\344\001\005\277\251\000\000=!z\004\276_\232a=0\227\216>0G\342=c~\200\276:\336\023>\301\310\300;r\2411\276g\252\361\274\374*\263=`\001\244>\302\275\210\274-\270,\276w\005Q=\322<i\275}\357\315>y\347\021?\034\3675>\336\342\257\276\356\217\253\275\027\356\255=\240\034\361>N\350\246=\362\254\202>\r\360\335>\244\312\266=\0148\200>\204&\344=Q\233\342\275\204\210\177\276W\020\215>\321TG\274\201\"\244>\237\346\010\275\0042\205>\003M\347>\304y\000\277}w\005=\262\265\214>\307X\326\275\331\343\356=4\355\212\275\330.\377>\237\2312\2731D\r<\017\271%>$\337\216>%@V=\340\201j\276hh\002\277\026\271\335=\277\342+>8\337S=5A}\275U\033\217\276\310Q\363\274\2616\303\274\3777\032>2\302d\2760\211\377\275\217}\376\276w\344:>\247\t\320\275qE\035>Ciq>\224OM\275z\331\002?\230i\321<;S{>c\266\"=a\242s\276\370I >\243\206\'\277\275\252\376\274\037\030\333<#p\324=\221w\023?\325/\327\275\330+\010?\250\370*\274$D\232=\372\n\t\275\tW\232\276\257\024*\276\037Qb>\211\026\320\275|eQ\276\035 \"\275fV\022>\316\000h\276\312\033\030\274\270\177\240\276K\336\225=\266\031I>\255\3052\276\321I\277\2766mn>|\0035>L\307\177=~\257E>.\301\244\276\312\336\324\276\010\225L\273d\252\316>\'3\243>\250\331\004\276\305+D\276\251$.>\202\347\234\2759\250\263\276\035H\315=\367\370B\274R\316u\275*${\275\027\270\251\275\331\'\264>q\311\216>\311\362f\276w\226,\276:\351\r?mE\220>9\302R\276\022m\001>\2563m>3\217\250>h_\315>\365\365A\276\250q\000\277\223\t\t=\343\241\301\276un7>Z\370\354\275At\034\276\000\306K>\337\335e=\203+w\273\272\325\262>\225i >2#\r\274\272o\231\276\2211\360<]\014\372=\225~q>\000\025\243\276\022\356\240>\204r\021>\325\212\331>\262P\001\276\235Z\347<b\n\264<\030\033\237>\231\201\n\275,\267\301>\274\267\260\274\265\030\312\276jj\324\276\260q\272\274\026\220k>\267\204\215>\302\204\n\276W\317\356>\247\341\351=\326\3158>\244\"\234\275\004\227\256;\233\203\267>@E\377\273\312%n=\017\326\032>\363\314\223\276\331\343\224\276\254\002\036\2763>\\>\002\256q;\333{\334\276\345\032\226>\301\261\225=N\217\225>\223\206\305=\361\276\233\275\306\2634?\231\031=>\350\0175\276\316\024;\276\177K\302\275)2\260>~\310\017>\340S\n>\333qg\276\351!R\2768F\017\276\272\031\001>\027\275<\275\276\036\315\275\2201\327\275%\241\365\275\276\033\215\276\364\217\337\275t\013\003>\251\230\022?\021\335\200\276d\236#?\325\214\016\276Z\221\034\277\027\265\020>\366\225E\276\275\323-\276N\203\213=[\336\017\276\211\272f=\351\247l\276b\217\325>BEA>M\370\353\273\025s$>\253\263\204\276\345\003a\274\207rr\275K\225U\276K!\017=\375\334\206\276"
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc0/w"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 32
          }
        }
        tensor_content: "\205\251->\310=\326\276\267\376\377>\252\254\362=H\257\254>e\032\371\276\252m\017>\266\032\233\276\254n\"?V\337\305\276\211\0041\277u.\277=\306\242\252=\2620\352;b\201 ?U\345=\277\344\n3\275\365\370\303=\371\373\240\276\364\2200\277C\t\177\276q9\207\277\325\312\031\277.<a\275\277b\246\276\033\007=>\212N\032\277v\210\246\276\315\257\236\276\330\253\004\276\033a\206>\2172\271\276\226<\344> \352{?U\033\361>\203\254\343\276/\027m>A4\273=m\014\372>\346\376$?\346\261\353>\370\314\201\276\001\256\234\275\250N\020?\234\020\233>\024v\327>AdG<\033\263\306\274\326\324\243\276\037L\277\276o\325#?B-\025?pP\006?\337\213R?\327\0369>\245\034^?\227&\337>\240\037*\276\3470+\276\"\365\263>y8\r?OJ\327>\373\202\331=\032\2640\276l)z\276\252\324\002\277t/\320\277\303\247\365\276\353\360\352\276\237\241\233\276S\203\"\277\001\222k>\01756\277\357\204\024?\3515\213=\310D]\276\345r\205\276wK\236\276DL:\277+l|?\037\316C\277\250~\206?A\2739\277-\301D?\360\345s\277J\277\001\277Y\241\224?\321\017 \277w\027`\277)\271\323\276\317(P?\t\216\020\277\234zo\276Fe\375\276\302\3360>\311\245\325\275,\033b\276\302\372\306\275\n\212\020?8\262\244\276@\324\300\276q\242\027\276\262\037]>\307sl\277T\014\343>W\327\374>\023F\315\275\263T\306\276\245\256L=\342\273n>\001f\370>\240\234\214\275\337[\212>\333Q`\275\006\"N\275\022\201\357\275\235\275\024\277\230\266A\277X\230\317\276Oh\027\277X`\337\276@p\023\276o\265\235<\214\272X\275\373s!\277\024\364#=\003z\351\275\023\247M\2769\250\003?_\253,?\364\352G?,\020\204<\355\033=\273\304\317:\276\363y\257>\243\273.?\330o.>\217\0243\275%\323\200\276\374F\t?\237\305\t?\225K\'?\201\030\273>\020\t\317>\325\313E>M\353\263>\177\362E?-\214\211>2\021U?\027\343O>\222P\010?\302e\317>1J\344>\t\243\315>1\004\337>\354\320)?Gs[>\007b\263>\262+\022?\337U\026\2767<\342=\304*\031\277\312.\327\277TD\026\276\355\360\025\277Y\0029=K\345w\275\203\322\030\276\344\240\226\276@\226?>\r\276\215\275\261|\356=_\301E=\267\236_\276\006\333\025\2771D`?{\251\305\2765\306\214?\301\261\246\276\305\305:?\037U<\2777\256*\277\004Y\200>Q\363\372\276\374c_\276\303\213/\276\257WJ?^\355\365=\214\351\255=\367\372\r\277\257U\210\276\200\334\271>\211\270\'\276\307\310\260\276\016\253\030?\177\243.\274\245\3016\277iK2\275\325\323\372\275[vi\276DK=>@\346\235>iR2\276\223\213\022>\024\251 >FI\363\276\243\305\324=B*\204>\342\321\301<\353\010c\2765)\005\277\353G\001\276\362\355\032\277H{\207\277\371\251\326=h\371\341=\222\325\363\275#\367\330>\r\312a>\300\3357\276\233s!<\314\276\006\276\014\350\013\277\334\373\377\275\231U\341>\225\300>?\254\035]?\331\377\177>v\255\210=\315\201\227=\315`\037?/\342\315>j\272->\260\255\376\273\022\353\306\273\245\333\373>\223\2470\276x1\240\275\363A\030?\325\246\261\276\357~\247>M\224<\276\366\267\263>\364\230\366=?&\307>ZN\202>4\017Q<\324\010\303>\365\0266?\313\240d\276\325_o\275\351\376\217>\301#M>\264\315(\275\016a7?[OL\276\243-\260\276PU\336\276\345G\332\277\321\350\304\276\340Yw\276;u\216=+\240\204>\221;\203\274\003\371\246\276\305O<?\007\372\277\276@e2>zn\270\276\276\254\377\275\266d\272\276y\266o?\274\321\365\276\262\314\361>\004\342o\277J\2440>*\035\273\276\332sW\277&\017\213?\251\207\237\276\2118\310\276\014\3459\276\235P\t?\016\354\325>\354k\204\276Z\025\317\275:1U\276\354U\237\275^\027B\275\r\324?\277\211\323n>5\254\256\276X!w\276p\244\014>g\237\365\276=\336\343\276h-]?E\365L>\277E\316\276\241\023\014\276\253\340\342\276\352P\307\275C\230c\276A\351\223>\024q\351>%\320I>@\334\307\276m\336\246>\211\336\023=\314P\000\277\367\013\036?\310\232\013\276\\m\232\275\247\202\361\275\346\005\211>^P\362\275\351,\316\276\023;\237\276$\2729\276A\200\255\275%&y>\257\310/?m#\017?\356\267\335\275\270\354\274>P\357\373=c\272\255>\360/\003?!\272U>Y1\023\276J\253\376>\252\304\005?\315\233\037\276\365\306\322>\236\327\021?SY\307>u\261\253>W\260\277>_\003\277>\340\263^=%c\004?\204\313C?\037L\205>*\361\362>\321\3038>\244k\270\274\'q\210=\317\004H?db\222?S\353\003\276\t^$>\200@\216\276\242d\000\277Y\347\335\276\302\353\014\300\252\004X\276@\255N\275\034\272\226\275\261|\032\276\004\027\374\276\373\207<\2771\2114?\034h\317\276QO\207>\030\244H\276g\365\231>.\203\313\276z\\\347>\202=9\276S+\361>1\206\t\277\035\364O?P`\000\277E?\200\277\374\376\t?q\324\027\275F\344p\276\233\251\273>vy5?\261s\277\276\316\234\222>*i\005\277\315\033\216>\357t\001>\375O<\277\020\nz\2768_\024=\255\210\\\276\336u\240\276?\365t\276\335\233\244=:N\324=\\i\346>\230\226\000?|\235\375\276\333\017\323\2763\306\221\276\364\027+\276g\301\014\277\2340/>)\003\340\276\254\251\205>\372\001\242\276\212J\272>\271\260[>\363\033R\276}\232\001>\206Y\247\276,/\221\276\366\343\017>A\340\024?S\225\320>\214h\334\276\203\272\201\277\235p.\277\364\370i\275\371\311#?v\361!?]*\267>b\211\222\275F;/?_\205C\276\207\231\333>\203n\022?K\024\322=!)t=B\234\272\2765\331\\?\033\350\307>\241`\235>\026D\245>\263C2>\"-\026?]}\202>\201\t5=\240\274\031?\344\320\207=\275\336\267>\243\334\353=\034^\225>\360\320\303>\001\177\216\276?\337:>\355\267\370>\3210O>\260\323\030>b\022\222\276f:\304\276T[\010\276w\231\t\276k\313\367\277\265\322\340\276&q\250\276\255\327\247<\335\347\373\276\201_\n\276$\327w\277j^\304>\353\212l\275\'JM\276\247\027B>;*\221\276\310\310\363\275\244\363#>\271\257M=m\'M?\240\r\331\276T\031\365>\002xL>\000\332\237\277\350s\234>\332)\220\275\331\341 \275\342m\003=v\214#<\202\332\020<\351[\207\275~\376X\274\031\223\202\276\201%\340\276o\351 \276n\020\207\274\365\254^=\261L\255\275\305)o=w\n6?\270\006\370\275\233j\317>9\'\037?\235\033\207?C\355\313\276\230i\036\275A\252\217\276j1\017;\222\233\005\277\3430\n?O\214\252\276Dt\000?\372\013\320\275\266\327\323=\230\252\341\275\026h\205>{\344\354\275\265N \276\3264\036\276w\267\227>9\027\215>\t\337H>\356\362\301<\303f\030\275\247\210-\276x\217\262\276r\243]>O\335\244>\204\242\006?\202j\244\276L\253\351>^{\251\276\260\363\213>!\002y?\243F\264>\331\262\317<\23103\276\227,\354\273\342\333\027\275z\246l=$`\033?\322;\235>\215\371\032?\023P\354\275\237\377$?\265\213]>\373\030\304=! *?]\324I\276\002\323e?\314\262\273>\350\005\306>\341\256\325=\213K ?\250\320<>D\t\262>\216)\202>\262\204\350\273L\027\253\276\313\037\304\276\301\034\013\300>\361\364<)\320\301\276\244\332\344\276\357\000\321=Z\267c>\260\203L\277\324\026}\274!8\250\276\305\361\216>d\256\317\275=\010\203>\275\220E>\341\007<?C-\177<\004\334\214>O\215]\275w\257P>\0215{\275\006\242\250\277s8\214>\304\021\032\277\320\0342=^m9\276:\261\337\276^\332\016\277>\210F>\035|\205=}\317\314\275\031\350\330=\334\335 \277\204n*?.N\253=\214=$\275\tl\016\276\205\314\216>s\346m>\367e>?o\356\203?\323\245\346>V\257\320\276\001j\274=L96>\025u6=}\230p=\331CR>\373E\004>*\254\034?\271\001\233\274B\257O?\273\354\240<!d\324>f\346\250>ob7?\332\3324>53U\276\367\307&\274\304\323\207?\024L\001?\362\332\006<\323xE>+\230\216=)\300V>\034 \003?\026\035\207\275\311\203i=\306\256\230>;\371v\276\255\001\035?K\023\275=\210\023\227>\207\031\201>\200\226y\276\302\333\002>H\246V>n\204u\276w\241\241=\240\366\206>\026\272\022>Z\341\355>\223^E?\243\206\021;\227\217\307>~\241@>k8\330>\200\0104?}\220\n?\344G8\276\177L\220<\343\225\317>\336s)?\232\253\305>\261D/>(\365W\276\355\334\245\275\006\226\215\272\377\214\006\300B\226\223>\353PB=\211\257\261\276\355\276\030\275\364\260q<\305\252\245\276,0]=\345\222*?\373\254\365=\227\220<\276\222\210\036>\2262A\276\022\377\216>\210z\014\275\215\255\203>\2530\334\276\214\271\001?\360w:=\312\334\353\277\017H\265\274\342b\310\275\177>-<\003\225\034>&\362\311\275j,\300\275\250b\356\275^\315\346>\274\310\275=\300\240d>\361<\335=\336\315\212?J\315\003\277\222\nG=!W\353<\255\"[>\226\326\346>8\002n?\1772K?\373\213\017?\322\030\221\275k\236~?\277\220\214=pL\231\276Z8\266=\363|\374\274L\343\327>n\202\\>#e\003?}T\216>\316\257N?\252(\205?`Y9>\276\250o?)\335\325\276l\260\207>X\275\200=\026\305\247?|\'\243>\246\355B>\247\326\030>\t;\251>\2420\310>\342,\205>\251\261\'?\254\305\244>\355\371\205><j\241=\243.??\304\347$?\220\317k\276c\033\257\274P\266|\2752B\374=\276\201\320>\324M\n?\235\247\201>\350<f>\373t\354>\373q\035=\255~\220>M\335H>\361\3325?\251\333\345>\001[W;\272\355\223?\010\307\321\275o\236\026\277a\324\225>;\220\244>\324\346\356>\366i\273>\263\246y>\365\225\034\275\361\371\026>T\345\203>Z\371\344\277\337n\301>;\332/>\301\340\223\2760\320\020\276\357\004a=\r\2206\276\334\304\200\275\257K\232<g\276\212<\215G\002?\021%X>\213[\277\274f\003\233\275g\"&?#\264\372\276\372\322\003?\252\025\207\276E\317\244\275c\335\315\277\247R\001>p_\037\275\333\376l\276\363\233:\275\254\202\317\276;\343\234\2752\326\215>\033\352E\276*x\267=\240x\232\276\236\210Q\276\226\000\310?{\013\266\276p\372\332<\020\002u>~\332->Q%\222>\246\263\200?Y\222\252>\034(\227>{{\207\2741>\021?\033\213\220>\261A\207>?\215\225\275\325\327,?\270\320\241>\253\314O> \306\024>\3079\2719\037\030\274>&>\210?\306\255s>\266\247\266?\221L\022?\203\0076\2736\273\271<*\376\342?\013R\350=FCr\276\002\030\255>\355f\247\275\010\251D>\005\237f?\357UY?\024\355\t\276x\362b>\212-}\276\262\230\263=\365\031%?\260\356<>q\366L>R\223Q\276\367>\371>o\"\310=\033\035\377>:C\270<w\247N\276\312\036\277>\330\213\371>\356N\246>\357\021\276\276\356M\250>\005\370C?\357\225v>w\322,?%\211\036?L\033\231\276zO\312>\332D\230>L\030\334>.:\276><\244<\275|\374\003?B\216\000<\3233\341\273\262\244\350\277g\277\007\276\220\315_?\032\264\334=\031mT;TE[=\237\325L\277\273\'\324\276\247\246\241>\377\261\375>\255\243\030?\261uB\274\325V|?\007.*\276Y\3212>\004l\355\276\310\377k?X=\231\276<\366\260>\307V\334\277\373\024b\276U\'h>Kf\303>\374E\260\276\250\227\276\276\273-\205\275\225\307\013=\364ob>W\372\221>\365\225\250>\313\345\304\276\337\277\232>z\274\262>\252\202+>\032\"\342\276\250\2336>\240\037\036\2764\242G?\n\226&=\016\313\241?*\340u\276\234\026\265\276\352\363\361\275X\215\'\276c&\315\274\n\223/>\226/\021\277\225-%?\226o\377\276\251\021F?\036\334}\276\340\370\346?\r\354\225?\n\374\266>0\271!\276\345\261$>\345\240S?/\023\321?u\352\001>\331E\331\276\273\266\n\277 \035<=\220\016\025\276\002\240\t?y\320\031?\355\306\316=\320\240\267>\262\302\213\276H5E>[\357\020?tH\304>\r}t\275\257M\267\275\256h\022?m8%?\030\024\377\275\3245o>W\014\221>\273\356\220>X@h\275\360)\016>\306\204\">+\277,?R\256y?\262\017\272\275\017\323\212>\317v\373>9\274\227\276M\0178?\"_\374>\313\272!?=h\007?\273R\013?\264N\311\276\357\343\022?P\235v?\325\334\024\300*\363\354\276\010\376\355>\215\013\244;\350\273\020?\327\177\273>\367\303&\277\037\353\243\277T%\\\275|\353\177>i\262\t?S\246\247>\366\313\235?@C>\277x\352\215?\254\353h\277\342\315=?\211\357\\\277\312I.?\313\326\001\300\340!`\277Nb\257>\020\301\236>\024\241,\275\244\304\023\277\035$y<\336\030$?]V8?\025\275E?\330\340\213="
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc0/w/Assign"
  op: "Identity"
  input: "oldpi/model/vf_fc0/w/Initializer/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc0/w/read"
  op: "Identity"
  input: "oldpi/model/vf_fc0/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc0/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc0/b"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\207\214\246\277P\3515?\002\332\272?\000\000\000\000\217?\202\277\000\000\000\000z5\205\277\t\017\210>\362A\004\300\225o\005@\024\2449?\025Y\365\2759\307\205\277\323\025I\277/\220\220\277A\206\000@\013\330\264\277NR\375?\225T?\277J+\003@vR7\276E\351\n?\367\252\004@\364M<?L\226\200\277Z\021_\275\277\260\377?A\200\244?\nK\251=e\225\205\277\331\250\233\2770\221\357\274"
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc0/b/Assign"
  op: "Identity"
  input: "oldpi/model/vf_fc0/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc0/b/read"
  op: "Identity"
  input: "oldpi/model/vf_fc0/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc0/MatMul"
  op: "MatMul"
  input: "oldpi/model/flatten/Reshape"
  input: "oldpi/model/vf_fc0/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "oldpi/model/vf_fc0/add"
  op: "Add"
  input: "oldpi/model/vf_fc0/MatMul"
  input: "oldpi/model/vf_fc0/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/model/Relu_1"
  op: "Relu"
  input: "oldpi/model/vf_fc0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/model/pi_fc1/w/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\251\267\240\276\313\363\232>\335W\212\2762\327 \274\003\322[\276\247K/\276\343\261\\=+\347\374\272\276E\232>Ve\312\275I\363\204=\037\030o>H#\002>\r\030\207\276\252\347`\275\215\r\262>\355}\020?n>\320><\226\304\276\r\221\276=o\2575<\272\020h\276{\251^>\023\271\317\275mt\021\277p\231\032\276\303&Y>\310k\232=fe\221\275RM\255>\366aX>\003T\004=.\205#>W\221b=\016\3318>]\2125\276HG\201>_\242%\276H\236\027?\362\333g\275m\014\331>\340\245\356=\010P\267\275\037\323B\276\376V]\275\342\245\'>B99\275\236\3606\277\370\344.\276\333\212\323\275\264\342\252>6\377r>\215\377h=\214o\340\275K\203\275=\324\326\213\275\017\337\371<\002\024\302=q<@>\013m\377\276\313\326~>\374E\326=\333dR>9-\311\275\213\207\227\276[\037\233\276aZ\016>\352\372/\276\033\000\032>\t\233\331\276\304?C>\r\226\025\276\325\357\361\27673;>\2414\035> \361*\276\236\r\362\275\236\265H>\275\260\256\276\241w\034>\253\254\252>y\177\213\276\n\373d\274\357\177\226\275\207\243\275>\340\334\\>\376k\333=w\026Z=\247\372\264\275\034E!=\203\305\267>\367 \356>O6\035?c\037=\274(o\277>\262(\320=x\250:>{\372\326\275\262f\215\276\311\321\272\2761\370\021\276\320\013\177\276\0102\270\276\003KX>\341\2773=\266\351\\>amX\276n\0133\276\3070\t\274<\236\331=1\226*?\334\213\225\275.\364\307\275+P\342>\nS\316=\n\202\324\276CJ\024\275\271\233\317\275p\327\326\276uD\200\274\354,\312>>\377\350=\177\032H>\245)\202=\031V\357=\324\313\244\274\3302\231\272&}j\276Y\371\016?r\216\272\2764]J>\246q\001=\030$\n\276\276\335>=PU>=\013/\250\275@f\213\275J\007\020\277\323\224\363=\214\315a\276C\';\276o\275\356\276\r\256\304=\360\244\211\276f\364I>\334z1\276\244\233\263<\201\354\354<\215\2415\276_\277\205\276_)\020\276\237\312I\276V\361\326=^\nL>f\301\n\277N\343\031>\r\024\027>?\213\326=\253\315\210\276`\0226;\261\265\236\2757\325\022=\256\206\350=\307\276\212<\246\352\247\275\313G*\276\235W\226\276\206\322\251=o\n+> \313\310\276\252&9=J\307\004\277\2461\215>I\213y\276\222\266\323=Zh\t>\275\020\t>z8\200\276\212\356\245=\221\024\010?\336\351\021=\311\023D\276\256\005\036\276b\320\244=@\327[>\265\237\270\274\261\"\256<\320\266&>+\017\300=ly>=\2129\013=\200\215g>\003\022O\276\334\3078>\316\023\263=\021\233\261=!\212\214\275\024+\302\274\217\375\214>\207\252\026<E\307u\273\335\204\014\277\345\312K>\350\332\360=/-\267>\t\343\253>\025\265L\276\210\005S\276\t0\235>O\322\202>\214}\321>\305\300\250\276\254\254*>\243f%\275\344\276 <\357%\001>\312\234K\276\244\357>=\213S\211=s\355\372\275\253\021\210\276\2029\235\276]d\360\273\357\347\217>\002X\337\276\346d\277\276\003\320R\275\027^\003\275\262U \276&\035\203=\275\250v=\203\355\004?\217$\300\276z[r>\272\307\214<\014\020\224\276Dx\026>\252O\275\276n\262\321=%\227\005\2764\363\341\275IYw\273\343\363%\276\217\254\264\276\241\017\344>\310\361k\275\004\367\356=Z\255\001\276f\244p>\205\317\336>\271\233\224>\262\n\264=\311!\010>\240y\220\275^\003\326<\236\302\016\276m\261\222\275\021\006\331>W\377\010>,\333Q\276\234\375(>\225{\t=\303z\231>v\030\020?D\243\246\272=\353d\276\224`\200\276\323i\316\276z\203\224=HG\330>\272\306&>\360\221\264>D\251\203=k\002a>\354\350)>\226Q9>\010\250\342\275\355y\216>1\205M\275A\220;\275\002Z\026=]\226u>\240\352\020>\022j\372\275]\331\350\274\0002\212=\177\203\373>>y\312=\345\020\247>\303H\r>^S%\27661\236\275\036\014X\276)\036j>!s|\276\004\247\214=?,\366\272?\364*>\365\322\376>R9\251\276\312m\037?\322o\205\275\003\264\324\276~;\276\275\365\206\230\275]E\250=\266\023\303\276\201\205\221\275\\\246y\276{\277\'\276\033\006\252>\261!\326\275=w\266>\266\013\207\276\3230A\275\221\374\025>s\366\316\275DC\320\276\030\263Z>LU\231=w\272\225\276\277\252[\274\331\202+>\233f\t\277\0011\334\276F\357\257>aBK>\372 u\276\r\340\271\276\221\244\222\276\262s\261\276\304\222\206>\201\027\305>\347\314\021;9d\213>6X[\276\223\362\277=q\"e>;\275u\276E\000\260\275bP2\276\244\027\360>\266\336\331\275\013d[\276\321\342O\276Sbt=_\030\350\275\335#\204\276\374\257)\274l\030\243\274%)\013\277\2102]\274\374\236^>\364V7>vq\343<\207\220\037\276\t\374\301>^\360\310>\250\257\007=3V\013?\214\275\215=Ni\020\275\002\322s\276\003Z6>\'\273[\276\247\307\260\276\243%\211\276<\2350</\334\251>\035$\324\275\336\237h\2748\337\250\276D\367t=\325\315\372\276\220\344\202>\335r\330\275\177\361\375;\331|i=DF\260\276_\252\361\275\315B\006?5\023Q\276\375\304Z\276D\330\010?\221\354f\276g5\341>\207\210x>\221\253\342>\336\270\373>\n\021|\2766f\025\275g\000\275\274\014Rw\276\342\014\366\275~=/\276\270\267\030>\354\255\254>HM\010\277\243\306\370<B\337b\276@s\317\274\255\352D\272\215\014[\276\225w\234>( S\276W\354\010>\227\006\260>\340\346\210>\200\013\262>OSY\274\210\306\003>JU\010\276\307\300S=|\rY>\240\362Z\275\026hv>G\313`\275e\335\254>\351\244\200>j\345\366=\017\354\347\276\344\316X\276\240\344\377=z\004\226>k\242\247\276\017\351\325>O^v>\341X\310>]\336\214\2751F\022\276\355;*<\363\024\210<+V\010>\253\001\332<\371\365_\276\205m\275>\330\322\224\275fF\276>eo\373>\223\340i\275B\274\177:\246$\370>m\177\330\276RhC\276\241{h>a\372o\276\365\357\360=\237e]\275\216r\215>\344\337v\275\327\362\226>\377\326g\275\026\261\025\277;\027\250\276&o\220>-\372\317>\364\340\034>\206\213\372=\376\232Q>\274\246\024>\025U\002\275\270\005\327\275\266b9\276\237]z\276t\344\026\276\273\354\342\276\300*\272\276\267\362F\276\364_U>\376\255\223=l\244\301=\024i\370>\204GA\274_\360g\276a\343W>\004\366N>\360!\273\274\311\354\346<i\324\"\276\346\250\216<\214\214\024\276u\t/>\247\271\036\277\253$\030\275%\005\210=P\300\207\276fXA>{\266?\276I\352H\276Q\255\250\274q\025\212>\350w\246\276?\373M\276\2368\264\276%=\250=\312\337\037\276(\264\316=\3629\271=\263n\302\276\347\036K>O\2738=\021[\244\276\236;\271\276\221\340\352>\'QD\276\225o\224\275\n\262\306\276\360\346F=`cT>o\211A>\321\364\275\275\002S\n\277"
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc1/w"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\024\306=\275`<\343\276\034\243\203\275)\343\036>O/\227\276\\\222\312<.\256&>Rr\243\276\001\263,>\353\021\016\276\355[\352>9\014@\276\335\360\r\276\316x\355=jg\013>\216\237|=\216\256P>U\260\337>\275S\010\276\300J\215=\254\260\354\275\357X\267>n\006)=\253\221\005\276\300\225\246<W#\307=8\\\211>F\353\301=\372\303\344=\234\206\037\275Kr\367\276\021\356\007?\273\232\202>b\320\005\276\314\026\244>2\363\265=Hi\210\276\235{\232\275\312p\375=\026\313\241\276\276\251\343\275R\266\374\275C\034\254=\263\023n\275\224\270\027=\243\304\327>\035\351#\276i\317\232\276\334\216)>\020Jf<G\352\353\276\262\003\243<TW\351=\361\014\232\276z\314\177\274\256\007\330>.NL\276W\245\332\276\237<\352=\001?H>\230\3039\276\366\362\213=\303|\352\275z\305.\276\204\016\202\276-9\372<ZL\254\275\205\316\272\275\236\322\221>\237\327#\274mo\372\276^\365\203\276N(\254>\244\274\314=\250\034\370>\313rY=\211\032\221>\324td\276\241\311\346>NT%>\232\355\302>\247\300\277=\330\356\261\274X\210\263<\03600\277\214\234\221\275\270\312\263=;\216M\276B a>\3454\342\275\225\324\335\276\275\214\375<\223\364#\276\352\326\201\276K\307\272>/8\223\276\025\204\373\275\347e\237\274\305G\265>\214k\253>\014\017\245\2766\2672\276gj)?\234\2134\276\351-\350>S\366\270\2750=\021?5\010\370;u\353\005<\006\352\207>:\000g>\344R\204=\266o\235\276q\354\227=\342\374\210>\027\265\034\277\362\032!>\375\335\236=bC\256>\2308\314\276L\364\027\275\274A\211=\246U\245\276\235\215P>d\002\201=\033\233\005\276\020\352\260<\\\201:=\304\323)=\033\245\340\275\242\033=\276\'\330\022\276C\205\312>U\006\301\276\260\261\244\273\237fR>I\305\360=\230=S\276\316C\215\276\223\031->3\350\200\276\001O\232>\232x\231\276\010\014|>\316\335\005\274!\303\233;\323\202\270=\206~\227=W\207W>\313\025\274\275\224\002&\276\201\002m\276P\230e:\360\202\312\274uq\224>>Z\004?\202\253G\276W,U>\227\262\266>\033\363\274=!T\224>\032\256\352>\013\312\024\276\272\314\000\277\347\257\353>Q\227\215=\252\2679\275\220Xn\275D\200\361=C[\303\276\362\177\240\276\311]\202\276\263\2721?\256\362\263>\272\017]\276\350uu\275-\311d\274\010\323m=\336X\321\274\233\371l\276N+S>Q\230\270>G\225\246\276\326\304\246>\255\226@\276Q09<\014w\340\276\205\343a\276\262\341\304>s\306\267<y\212\022=\315\241\016>\342\220\233:\023m\027\274\217+\001\276?\271:\276\335C\214=\002J\323\275`\302F>\360\300\033>g@\272\276\234\3534>&\034\327>/a\301\276\270\263\002>`\007?>\351\'H>\213r\037\277wN\201>\267\275N\276r\270\222=\'\3613>D\204\243\276y\205\005\2768\340{>\206\246\036\276\001\204I\273\252p;?\342\367;>\024\022\301>`\204_\276\330S1=\301\271d\276\302\276(<W\337\210\2761\274\311\275h\017\340>\303\317\340\275\001 \306\276\202\365Q\276{\213\342\276\362o\344=\237m\004>Or|>/\223\254;\267w\204>\241\215K>\217\347\354>%<8=\350\203\341\275\215n\322=\'\242\313>\257B\n?\363\265\353\275jp\021\276A\333\034=\337\343\260\276m\006\300>\370q\213\276\323=\313\2765\233\240\274\333\262\305>\312\031\n>\013~\017>W\322\263=\210\025s\275\246\341Q>$\2256>\341\265 >\016A\014\277\317\373\302>Hz\315\276g\323\027\276)\217\200?]\336\263=l\203\024>\370l\212\276\242on\276\345V\357=\370\206r\276\321\242(\276W \334>\236\022\026>\206\312\250>\244&k\2761\232\244>\263\022\262\276+\001\310\275o\205\342=\257\315t\276M\344\016?\302\177\336<GF\016?\200\345$=\267\252\006\276S\330\362>\3616~>\347\336\243=\r\305\204=\253\375\261>Do\321\275a\343,\276\024h1\276BIU\275E\037s\276#\341\354=j\034\216\275k$\305=\000E\303\276\265\250\334\276\224\002\r>\250\003\324\275\255\027\337\272>\321\006>\301\215\212\276\331\256\310>\324\272\211\276\303\234\306>!\310\263\276\016~H\2764\372\210>OO\375=\236\200C\274c!\007\276\244x\016\273h\371\303>%\337@?\337\374\023\276pP>\276\236\243\010\276\260\327\212>g\270N>\217@B>x=\355>\240h<>\221\341\365<\t\032\330\276S\312\256==\257\363\274\331Z\241\276\330+A=-V\366\276 \357\303=\201>\177==\3463\275\215\027\222\276\357[i>\233\352p>k\361\247>#\216\025?\310\243\323>\2005\265=\361\335\236=2i \276\201\203\272\276\323rO<\203BD\2761f\324=\320y\334\275%la\276x\210\355=R\357l>\275\344\013\276\205\007\346>\241M\007\274\201\244\326>,L;=\334@\211>\313\323t=D:\000>w\351\363=\203F\376>\007\361%>\2119\262;NE@\2760\371\001>\241\017\214>/\032\226\276\200*i\276\tl\345\275\350\330h\276i\203\013\276lJ\322=\3268\016?\"\022\344\275.\254\272=r\277\200>\265s\334\274LH\255\276\311>\313>\006*~\276\346;\364\274\034\301\377\275J}\205\276\370\225\220\274f\206\254<db7>\243\013Z\276V+*\276o\216\251\276\374\301\345\275\363\262\236\2767\202\346\276\212\243\'\275q\340\327\275\323\244W\276\032\327\234>3\253\214\276W\3716\2758\030\237>\316y\r\277%1\360>sd\201\276\'\3673>\347\177\257\275\356E\016\277\177\246\275\276n\353\032\277\035=\215\276\233d\023>hg}=\227w\031=\251\324\342\276q:\205\274n\016b\276\222N\203\276\336\005_>>w\007\276\372/\230\276\226\364\264>\211F\222>\357\344\262\276\321!;>\216\242\217\275\325\232\350=U\313*>\\\332E\276)\275\033>Z\236\351>^\337\353>Ut\305>\226\n\034>\361\211w=WN\301\275\rE\240\276\030\226$\276s\211\214\276\007\023\027>~\2551\275|\222w=\031\343\r\276S\316\346\276-\340\n=\216\313=>4qK\276\255js\276w\356\267>:N\277>\253\327\322>\374\322*\276\271\364\231=\274)\004>\257\317\014\276N\223K\276n\235a\276R\242\325\276\013\270\t?\230w\033>\007\367\342>\267\337\225=\270v/=z\030\317\275\256\313\275\276\005C7\276\330\376\002?:\362\207>\362]\320\275\374\243\234\276\256\3129?\010QF\276K\207C>m\267$>\035(\017=\006\213I\275\364\240\262=j\310\027>\r\314\277>\316\234\000\277\312\"\345=#\322\006\277\345\225\331\276\241\177\177=\275\324\322>\251\340h>64\014\275<\322s\276\"\225\233>\261?\332<}\233\304>7\\\235\276o&\332<\207\226Z\2750\266\243\276\336\271\253\276\022\323\216=\363\271\026\276\261uK\276_\t\216\276\264\222a\276\356>\243>\002\343\275\275\276\227\222\276)\336u\276*\366\327=\267\336\276>u\177)=\267[\227\276Z4C\276\243\344\312>\212\217\370\275\250\214\260=\254%\267\275"
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc1/w/Assign"
  op: "Identity"
  input: "oldpi/model/pi_fc1/w/Initializer/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc1/w/read"
  op: "Identity"
  input: "oldpi/model/pi_fc1/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc1/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc1/b"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "\201\247\263>\362V\217\275\373\337\246\274>\255S\276\340\010U>\314@\373\273hCC<+\302\037?\335\274\370\274\333\035\267\276\\+\035\276X^\360\273\352\021}=>\010\217\276\300\234\326\276H\372\247\275"
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc1/b/Assign"
  op: "Identity"
  input: "oldpi/model/pi_fc1/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc1/b/read"
  op: "Identity"
  input: "oldpi/model/pi_fc1/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "oldpi/model/pi_fc1/MatMul"
  op: "MatMul"
  input: "oldpi/model/Relu"
  input: "oldpi/model/pi_fc1/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "oldpi/model/pi_fc1/add"
  op: "Add"
  input: "oldpi/model/pi_fc1/MatMul"
  input: "oldpi/model/pi_fc1/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/model/Relu_2"
  op: "Relu"
  input: "oldpi/model/pi_fc1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/model/vf_fc1/w/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\326\261\201=~\245\035\276I(\222>\316H;>1\nk\274f)\022\276[\265X>\253N\005>\315\303h>^\331\342\275\341}\3049\307\2575?\333\362\340\273o\"\004>\322\234\231\275Y\023]=\t\226K\275\220z\300>\236 \003\276\017\205\214=\340\231\010\276\303k^\277$\3177\276lG\361=\226\264\364\274\312N\217>t\366\304>\271rl>\033\261\246=2\231\260>\252`\017>-\266o\275\370\005\214=\257\237\344>\226\235d>l\306#>\256\242\021>DUz>`k/\275\371+\222>\306\020\000?\007\237\013?N\254\240\276!\334=>\315\372\240=\216[Y>\344\314\303=Z\222:\275\310-\357\274\033_\203\276\300\375h\276L\240\203\276\2649k\276\260\323Q=\371\034\336\276* \220=\254Ww>\214<\237>\231\302\211>\017N\r\275}\035U>\207H\307\275\270b\000?\030c\202\276N@\212=\233q@=\222]\245>\031MF=\322T\217>/\274\000\2768\303\207\276lZ\010=A\264\220>k)\332\276f\021e\276\2006\273\276\277\330\302>\005\322\311\274?\331\370=\265)\305>\200\212\000?_\204\030\276\244_\n\276\245\333\366>=\377\006\276?\030\233\274\353\004\256>\302J\025>:\217\232\276\277\031\212>\221\357O>\323\272\212=h\274\271>\222,(\276\335e\230=\241T>=v\304m>\3433\207\276s\221I>\020o9\275\335\3076\277k\367j=\034nn\2735\305#?\3012\325\275\337\305\\\276\257\256\200=+r\032\276\204\327_\276\340\020\\>\316\266L=\315]\343=\222/\027\276\023\301\000>\243\301\245>\005\304\360\275\rK\'\276\205\020\036>a\303\036>\254\276\002\277\346\250\225<CWZ\276o\304\300=\353\017\003\276\t\322\022\276\264z/=\251r\344>W`\177=\030h\222>\022\254\337=j\335\035>*\260\210>\375_}>=\260\263\276G\376\032\275\354p(>\226\t6>`\210\005\277\271\225\327=Rs\300\276\370\276\200\276\327\370\272>1\0256>\315\257\"\277\031\351\016=\320\001a>\t\2457\2756hW>L\365\2249\032\356W\275\017@\024>\027\230(>\303\330\263\276\370\241g\276\271U\260\275\300FM>\354\306\023>\245\200\225\274\n\363\220=4\003\311<\241\303(\276m\270\211\275\234\234Z=:\\\213>\325\335k=\037\212\232\276\033_\204\276\"\377\r<\202-\032\277\352\337\204>\333H\274\276(1\244\276\017\324z=\004\244\342=J\217|>+R{=:\322P\275U\352\033\274\324\202A\276\376N\315\275 S\013?/\224\362=\230\033\021>\004\315\213=\255m3\2762\026\303\2767\016\372=[#\014?\202h\024<\202\202\202>)T\003>\214-\353\275\203\224!>GA\031\276\217\236\363\276E5\217>\346f\225<\3232\314\276\023\365z>9\374\231\276\276\033\263>\225\250[>\215\305\236\276\201:\016\276\356\n\303\276)7-\276\0041\221\274u\351\230>F\006.\274.\005\303\276c~&<E\236\262\276_[\220>p\370\213\276h\006\376=\033c\350<\0105\263<}\362\317\274\270z\200>0\342E>\230\362\'?\201\326f\275)!*>>\001e>\261\262\226=&\323\203>,\316B\276\375\022\024\277\213I\267\275\2462\'\276Ui\233>mn]<@_\226\2745#k\275\302\206\032>@\335\025\276\264\260!\276\r\365\342=\001k\365>\026\234\236=\017\265W\275f\364\267\276\234\336\315>\222\2412\2757\006K<\033[\035\276\330\212\350\275\311\261\304;Z\220\227>,\234\036>|\257\247\276\3474\264;\2400V>\017\022\226>\277s3\276\302\270\n<\227]\207\276z\243C?h\305\267\275*/Q>\2606\267\276\305<\207=\001\025\201>Oj\235\275}\345\005>D^\235\276\224\241W\276\352\202\330;\367\017\004?\267CN\276\243}\'>\260\256\"\274<+k\276g6\377=\227\367!\276\372\224\227\276Z\354S>h\352\r>F\371!\276>\234\276=D\230\022>\201S\334=\037\324\210>\217\237M\276a\314\344=\262\255[>9E\210\275\351\002\302>\313\235b\276w\370\245\276\260\371`\275(\362{>1\360$\276\277\247D\275nK\243=\311PH<\265\311\003?H\0279\276\241T9\276\271\207`>\235\311\351\275>\267\327=\325\005\347>Y\026b>\261\261\000\277\200\310\235\276\317Y^\276yR\032>\310\317\217\276t\034\225\276\253O\377>\365{\360\274\340\010\262=\227\247*\276\365\271\216;h\250\214\276\275\021\233>\2149b>7:)\276\220\315\233=L\207\300\274\241\366\230>l\270\275>\310\346\362;\322\371\r\275\020M\213\276\3075l=S\016\307\274\353q==6\026\261<\347\334\327>\305`j\275\272\335\005\275\223\315\205\276\311\372\025\277\313h\215>snT\276P\354\325=\013O\226>3\324\'\276\254\300\t;\371/U\275\243/\342>\260\3665\276\255\201\242\275\373\034\302>O\r\313=\227\204J\274Q\365\327\276{\365w>CH\340=9\202D>\024\233~>\243FM>G\2001>\252@\250\276\343\026E>I\256\265\276\324\n\033>\026\306\013?\004\014/>%\216\300=\nZh\276\344\344c\275R\240\007\276-\354\003\277\230\206.>\r\327->E\336\231\276)\004 \275U\210\214>\007U\037\276A\303=<.\350\210\276\n\244\314<\224+\205\276\271\032!\276\344\331\215>\350\033\302\276\320\031\326=\206\314>>\231\277\356\275{\264T=qL%\277\347\216\310=i\367@\275\245H\333>\366f\232\276\365\300\326\276\004Wx=\215u\325=ug\203={\321\233\276\364$>\274\271\360\214\276\375\372->\351\206\016>\230\254\001\275\035b!>\256\376\304=y\037\n\277\2027\247=\371O\373\2761%\200\275\325\335\202\275\234h\273=\255\267\356\275\205l\035?\324\271\021<\316\315\373\274\034\245y\2761\312\'=\364\303\277\275\232 7\276\t\274\316\275]U\332\275\3367]=t\003\373=d\212\267\275d\001\310\275mc\311=`\326\217>\316\253\314>\016\"h>`\325\254\274\262\252\204>7p\340\275\235\205\177\276\2171Z>\207\255G?#CJ\276\n(2\274\254\256\023?`\372L>#\274\246\276:\253\013\276\337\215\336\276(\2420=^\262e\276\037d\325\276\227\326l>\321\025\307\273\202\367\343\275\205\202z>C\213\'>\027\261b>F\250\301\275\265\306\022\275\257\356!>\245K\317=\330C*\274\312\226\204>\336\032\350=W\026\247=\344/\266\276\233\362\214\275\331/V\276\306\004\213=\257C};\232\3468\276\025\202>>i\032i>\"\316i>\351\033\342>x\275n\276\263\035O\274e\255}>\rM\016?W\347\230=\345\205\244>qn\350=\024\315\354=\266Q\327=\'\366\210>D\307\002?] \202\274m\000$\275\330xA\276i#\352>q\263\000\275\033sc\276\273\374\333=\371\354\325\274(\232\260=\347SX\274\213}\330\275/\265\271\276@R\360\27412\237\276\257i\374\275W\344a\276`\213\343>\216D\256\2765*q>b\006\362=\264d\355>\033\246\264>\031\330\214\275\354\3319\276\022\264\223\275\211\357\256>\370b\223=\377\031\316>\357-\363;\303v\'\276\255\312k=\334\\\260\276\233\363s\275\360U\356\272\344s\260\275\2408\223>\t?k="
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc1/w"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\331\323\320\276I\342\250>\2753M\277\254\263*=\273\227\215>v~\313=\261\313\217>\343\031\353\274\235\325F?\246w\216=w\272.\276L!\317>^\025\">\245\376\246\276\036\343\343>63\206\275?\353\352\275\001\0130?\204sg\276\311\227{<\243\376\347>\356u\003?\266l\006?\0303\020\277\301\266!?\ndD;\346\370\216\275\255-{\276\304\316\003?Q\370\265\275\373\205\024?g,\342>c&R@ia\351\277\324(\225\276\351+\315<\215\314\334\2773\336\323\2778\273\007\300\240.\314=\316\320\310\277\234\325?\276\347>\231\275\350\005M>\350\031\306\277\265\3141@ \234\003\300m\020\017@\354\246\215>c=8\276\225m\224>6\3721\275\302\273\200\276TZ\310>\250\014\326\275\'4\211>\240_\250=\3228\201=Z\3074>k\312\246>\311O\224>/\321\341\275\036l|<A@\021?}Q^\276\241\0061?U;g\274\224o$>\\\264\014?\365[=?\010\316\331>\302\327\307>rA\200>if>\2772\202\262>\235S\004=28\003?\2755&\277c\212#?\001\2069\276\302j\351;\313\260\216=\3701\224>n\261p<a\3468?\231^w>\310\350\265\276\310d\323\276S\343\007?\021\221J>\236\312\200>\220\'\\\275\215r\250\275\303\206\243<\226\031\375>H\r\374\274\260\223\240=\217\335\355>\244z\240\276s\262\333\276\027\305H\276\003\007\037?\002\374\325>\370\277\014\277&)\213>\013\210\242\276\356\034J>\010T\361\276\344=\247>\206\232\334\276\365x\267>\006\200\333\275\376\367\250>\000&A?]\374\254\276\224\2521\276&(\243>\360\031\034?\214C\376>\215\3310\275bOG=\240\243/>\237\264>\276\276\213\236=0\321\032? e\305>\3033\255>m\377\222\275\343\027\217\277\021\026z?f\341\206>\251\023A=\277\276N?YO\210?\261\267H?{.p<\240\312l?\260)\212\276\374\232\341=\363\246\034>ml\000?\r\212\222\277LqY?\250\326\244\277\217\236\230?\356\340\236>\"\226\336\275\007:\357<~\235F>\034.\020>KR\220\276n\0363\276\233\223\277\276\013\323\007>-\353\273>\273\274-\274\363\216\261=\356\310`?\376\273\311>&$G?G\000\357\276Z\263\330>\212\237\300\275B\221\312>\220\026G\276\022\260\256>\227\326G\2766\"/>\351\353\226>T|\200\276\026d\240\276\234\005\002\276w>$>\240\0222\276\265S\225;\267\000t\275\325\305<=\344\2109>\2618\260\274\014\360c\276\252\217\232>\311L\352>ax\035?P\357\022>x\360\033?@\363\233>#D\202=\323l8\276H6J>-\215\\\276l;\004=\302\232\324>\253\204\370\276b\256\026=\r\312\034>z\243\255\276v\334\365\275\\\377x\2762\275u>\004F0>`Z\203>\006?\204\275O\022\372\274\311\271[\276R\013T?\272\007\246\276\254B\004?\2573-\277$\273\206\275Y\236@?\322\354\260>\036\022\000>\356\354\262>{\216\213>\021>Z?\330\211/\276\374\217\005>\255\247{\275\352\301\376\276\273.\217>\3314\233>g\367\231\275\330P\347>\031\004\036\276\014I=\277u\\\217>\024\343=>~\244\245=f\223\020?FoL?\220\026\005?\367\274&>F)\013?\201\020\031>\224Fr;\261\350\362<\322\017%?\247\312\r\277-\265e>)\214\021\277\016\014\253?\321\365\215\275zk\226>\302:$\275\331J\255\276j\'L\274\353\367\353\276\245v\327\276\244\215\036\276\241\231\001\275\333\003\301\276\331\273A>~\367\224<\322\247\262?L\356\246=G9\254?\3349\274\276#\311!=\373\301\212=\304c\302\275t\r\254=\361q\025?/3z=\0305\236\276+\361\247>\273\331\372=A\r\021>\0322\252\275\003\014\035?\004\004`\276\023\312?>\035\215:\276\337p\224?\262\250\254\276\355\226\237>\005\223\245<\243y\201\276\360Y\345\276\312\210h\276L\362a\275\223\006\224\276\003\231b=\\\007\204\275\303\354\255\275DF\302\276\326N\232?\307UL=\2736|?\237\215)=\362x*?\303E\236>$\3764\275\246=\026?!\212\266\275\346\034\035?e\235\222\276g\3468?\025\206\271\276\342\214#>\221\001\337=!\230\'?\016\352;\277\370/\240\275GT\'=5\000\246?vY\342>\274k\344\275\367]\202\276R\222\350=\370\2373\276\333j\263\275\212\263\001>d\0276>K\334\234<I\260\243\275&\257\223\276\266\300\221\276\256\200l?ue\214\276\270\254\231?<:\t\276\254\007\204?\323\364\345=\317\336\207\274\300\002\345>L<\014?\206\003\324> \317\237>i\177\002?\365\311Y>\021\005\210>\302\337\366\276\036\306\236>\204\266)\276\005\224\014?\227\310\352=N\213(@B\\\022\300^\311\020>u\025F\276\2269\006\300\021,\331\277\231\345\270\277%\023\212=\003\234\330\2777\231\260=\366\302\276=Q\264\230<\356|\022\300\005u\025@\337\r\327\277L\243\323?\010\253\230?\250\007B\275k\204\013\276\251.\211>+\202\254\276\243\205\254\2765\252\210\276\272%\275>\270\013\212\274.\177d>\313\022\t\273o\211\305\276Y\301\263=\343\025\204?N\275^=_\352x?\215m\251\275\006\322h=\"o+\275\343\245\314=\371:%?Oe\014?\027\223\275>\330\013\357\274\225\177\021?\371\367\364\276:\372\334\276Fn\301\276u\006\022?\332\206\221<\303h\231>\322\014\226>\201b%>\202\306\205>u\222\021\276\257\226\213\276MVH?M\375\340>V\244[>W\222)=K\014\206\274\223\020H\276c\345\002\277>}\032\276\253\016\201>{[\364\276\334\240\274>\304\225\t\276@\366L\276\337\177\037\275c\305\000\276\214\375\360\275E=\223>\003P\237\275\307\346\020=\010\352\031\276En\213\276-Zn=\'b\330>\315\360\023=\026\260j>\371~\322>5\215\021\277\376\250\204\276\341\254D?\233M\350\275\210R\244=\240O\243\274\376\210c>)c:>\204\345\330=Ux\261\275\254\265\227\276\213\t3\276C\307\004;@\213a\276\031\325\014\275\374\307\204?R\332]\276\263wl?\354\2635>\314\002\207>n\004~\276\340\232\t?\034u\250>\325\365\004>\332\326\036?\035\302a\276\316\202\334>n\354\316\276HS\340>\321\242)>u\356\266>\236\316\271>\240P)?\315\317\004>\221\216\300\274\301\240C=D\307|\276\357\317\273\276\tkB?\263\325(>\325\020\347>\230\330\222>\202@Q>\332\0132\276\217!\322=\027#\325\275o\365\276>\031\246\337=288?\027\365\213>&\251,>\272\374\213=|\236R\276\235U0?\255\322\361>\203\335\370>\335\361\r?\\6\'\276\214\351\347=\2246\232>\207\2345\276\350\024\323\276\262\203\266>g\231<\277w\277\225>*\253n\276\024d\017\276Q\177\256>,?a>N\354e>\354V8>\220\316\356=!\222\023=\257\023\316<\372\024\366>\303\255W\276\001\221\321\275\272\014\000\277U\250\\=\230\263\245>\301\370\223=\341a\353\276\026VP=[\310\023\276\263\217R\275\031\004\326\276\257\006$\276\246l\342\274,\271z\276\021b\202=\333\325u<\225\203\213\276\211\'`\276\035\240\204<\371\226\307\276^t\031>z\024y=O\311\023>"
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc1/w/Assign"
  op: "Identity"
  input: "oldpi/model/vf_fc1/w/Initializer/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc1/w/read"
  op: "Identity"
  input: "oldpi/model/vf_fc1/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc1/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc1/b"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "b\200\351?\251\2117\277>\226\252\274\000\000\000\000\033fB\277D\232\'\277\350\264,\277\000\000\000\000\017IE\277\000\000\000\0002\231\317\274\000\000\000\000\361AK\277\347\256\002@\021\252 \277\337\037\345?"
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc1/b/Assign"
  op: "Identity"
  input: "oldpi/model/vf_fc1/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc1/b/read"
  op: "Identity"
  input: "oldpi/model/vf_fc1/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "oldpi/model/vf_fc1/MatMul"
  op: "MatMul"
  input: "oldpi/model/Relu_1"
  input: "oldpi/model/vf_fc1/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "oldpi/model/vf_fc1/add"
  op: "Add"
  input: "oldpi/model/vf_fc1/MatMul"
  input: "oldpi/model/vf_fc1/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/model/Relu_3"
  op: "Relu"
  input: "oldpi/model/vf_fc1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/model/vf/w/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\222\371M\276\345\233A>\363\376\250>\263}\247\276\375L)=\332\240\344=\314\260\237\276\231\007\037\276\326f\342\276\207\177\253>\364?a>\263o\027=\316dS>\230\310\241=\265;\241\276\341H\204>"
      }
    }
  }
}
node {
  name: "oldpi/model/vf/w"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        tensor_content: "!A\236?q\326p\277\202\237\214\276Su\320>\266V[\277\205=K\277\200\376\205\277\227\375\240=\261\020H\277$\351\376\276Y\371\227>\245\326J\275p\3101\277\256\034\235?\200\002z\2774!\224?"
      }
    }
  }
}
node {
  name: "oldpi/model/vf/w/Assign"
  op: "Identity"
  input: "oldpi/model/vf/w/Initializer/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/w"
      }
    }
  }
}
node {
  name: "oldpi/model/vf/w/read"
  op: "Identity"
  input: "oldpi/model/vf/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/w"
      }
    }
  }
}
node {
  name: "oldpi/model/vf/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "oldpi/model/vf/b"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.1866364479064941
      }
    }
  }
}
node {
  name: "oldpi/model/vf/b/Assign"
  op: "Identity"
  input: "oldpi/model/vf/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/b"
      }
    }
  }
}
node {
  name: "oldpi/model/vf/b/read"
  op: "Identity"
  input: "oldpi/model/vf/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/b"
      }
    }
  }
}
node {
  name: "oldpi/model/vf/MatMul"
  op: "MatMul"
  input: "oldpi/model/Relu_3"
  input: "oldpi/model/vf/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "oldpi/model/vf/add"
  op: "Add"
  input: "oldpi/model/vf/MatMul"
  input: "oldpi/model/vf/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/model/pi/w/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\"\336\310\270\371\205\005;\031q>;\002n\307\272\026\311\370\271#\034N:\022\241\345:\241\337\265;\t\242\034;\025;\024;\237\224\241\273;`]:\240C\030;z\0041:&\210\241\272\320\005/;"
      }
    }
  }
}
node {
  name: "oldpi/model/pi/w"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\200,h=\030J\033<\200\221\313;\016\276?\276\361/\336>R\255\227\274w~\262\275{\352\031>\030\320\031\276g\335x\274z\342\304\276\254\314\231:\006\207\217>\367\035\003\275\233\236\321\273J\206G\276"
      }
    }
  }
}
node {
  name: "oldpi/model/pi/w/Assign"
  op: "Identity"
  input: "oldpi/model/pi/w/Initializer/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/w"
      }
    }
  }
}
node {
  name: "oldpi/model/pi/w/read"
  op: "Identity"
  input: "oldpi/model/pi/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/w"
      }
    }
  }
}
node {
  name: "oldpi/model/pi/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "oldpi/model/pi/b"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.3563338816165924
      }
    }
  }
}
node {
  name: "oldpi/model/pi/b/Assign"
  op: "Identity"
  input: "oldpi/model/pi/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/b"
      }
    }
  }
}
node {
  name: "oldpi/model/pi/b/read"
  op: "Identity"
  input: "oldpi/model/pi/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/b"
      }
    }
  }
}
node {
  name: "oldpi/model/pi/MatMul"
  op: "MatMul"
  input: "oldpi/model/Relu_2"
  input: "oldpi/model/pi/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "oldpi/model/pi/add"
  op: "Add"
  input: "oldpi/model/pi/MatMul"
  input: "oldpi/model/pi/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/model/pi/logstd/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/logstd"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "oldpi/model/pi/logstd"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.7535348534584045
      }
    }
  }
}
node {
  name: "oldpi/model/pi/logstd/Assign"
  op: "Identity"
  input: "oldpi/model/pi/logstd/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/logstd"
      }
    }
  }
}
node {
  name: "oldpi/model/pi/logstd/read"
  op: "Identity"
  input: "oldpi/model/pi/logstd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/logstd"
      }
    }
  }
}
node {
  name: "oldpi/model/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "oldpi/model/mul"
  op: "Mul"
  input: "oldpi/model/pi/add"
  input: "oldpi/model/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/model/add"
  op: "Add"
  input: "oldpi/model/mul"
  input: "oldpi/model/pi/logstd/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/model/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "oldpi/model/concat"
  op: "ConcatV2"
  input: "oldpi/model/pi/add"
  input: "oldpi/model/add"
  input: "oldpi/model/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "oldpi/model/q/w/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\001A\n\273\014\r\2169\324\220J\271\346I\332:\315\373\323:\000\264\3078\354\204\276;6\276\336\272\351\211`;O\345s\272\221\247/\273\250\246/\273\013\216\r\273\231\213\312\272\270U\3759\320*\217\273"
      }
    }
  }
}
node {
  name: "oldpi/model/q/w"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        tensor_content: "B\253\246\273\013a\255\271\000\2519;\327ao:\2358\2219\036\356\210;L\0365:\335\232\2129\273\223\"\273\027\255\231\272\262\203\236\273sC\001:\363>E:\353Cf8\264\325\360\272,\233b;"
      }
    }
  }
}
node {
  name: "oldpi/model/q/w/Assign"
  op: "Identity"
  input: "oldpi/model/q/w/Initializer/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/w"
      }
    }
  }
}
node {
  name: "oldpi/model/q/w/read"
  op: "Identity"
  input: "oldpi/model/q/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/w"
      }
    }
  }
}
node {
  name: "oldpi/model/q/b/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "oldpi/model/q/b"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "oldpi/model/q/b/Assign"
  op: "Identity"
  input: "oldpi/model/q/b/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/b"
      }
    }
  }
}
node {
  name: "oldpi/model/q/b/read"
  op: "Identity"
  input: "oldpi/model/q/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/b"
      }
    }
  }
}
node {
  name: "oldpi/model/q/MatMul"
  op: "MatMul"
  input: "oldpi/model/Relu_3"
  input: "oldpi/model/q/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "oldpi/model/q/add"
  op: "Add"
  input: "oldpi/model/q/MatMul"
  input: "oldpi/model/q/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/model/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "oldpi/model/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "oldpi/model/split"
  op: "Split"
  input: "oldpi/model/split/split_dim"
  input: "oldpi/model/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "oldpi/model/Exp"
  op: "Exp"
  input: "oldpi/model/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/output/Shape"
  op: "Shape"
  input: "oldpi/model/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "oldpi/output/random_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "oldpi/output/random_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "oldpi/output/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "oldpi/output/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "oldpi/output/random_normal/mul"
  op: "Mul"
  input: "oldpi/output/random_normal/RandomStandardNormal"
  input: "oldpi/output/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/output/random_normal"
  op: "Add"
  input: "oldpi/output/random_normal/mul"
  input: "oldpi/output/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/output/mul"
  op: "Mul"
  input: "oldpi/model/Exp"
  input: "oldpi/output/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/output/add"
  op: "Add"
  input: "oldpi/model/split"
  input: "oldpi/output/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/output/sub"
  op: "Sub"
  input: "oldpi/output/add"
  input: "oldpi/model/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/output/truediv"
  op: "RealDiv"
  input: "oldpi/output/sub"
  input: "oldpi/model/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/output/Square"
  op: "Square"
  input: "oldpi/output/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/output/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "oldpi/output/Sum"
  op: "Sum"
  input: "oldpi/output/Square"
  input: "oldpi/output/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "oldpi/output/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "oldpi/output/mul_1"
  op: "Mul"
  input: "oldpi/output/mul_1/x"
  input: "oldpi/output/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/output/Shape_1"
  op: "Shape"
  input: "oldpi/output/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "oldpi/output/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "oldpi/output/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "oldpi/output/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "oldpi/output/strided_slice"
  op: "StridedSlice"
  input: "oldpi/output/Shape_1"
  input: "oldpi/output/strided_slice/stack"
  input: "oldpi/output/strided_slice/stack_1"
  input: "oldpi/output/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "oldpi/output/Cast"
  op: "Cast"
  input: "oldpi/output/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "oldpi/output/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9189385175704956
      }
    }
  }
}
node {
  name: "oldpi/output/mul_2"
  op: "Mul"
  input: "oldpi/output/mul_2/x"
  input: "oldpi/output/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/output/add_1"
  op: "Add"
  input: "oldpi/output/mul_1"
  input: "oldpi/output/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/output/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "oldpi/output/Sum_1"
  op: "Sum"
  input: "oldpi/model/split:1"
  input: "oldpi/output/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "oldpi/output/add_2"
  op: "Add"
  input: "oldpi/output/add_1"
  input: "oldpi/output/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "oldpi/output/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "oldpi/output/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "oldpi/output/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "oldpi/output/strided_slice_1"
  op: "StridedSlice"
  input: "oldpi/model/vf/add"
  input: "oldpi/output/strided_slice_1/stack"
  input: "oldpi/output/strided_slice_1/stack_1"
  input: "oldpi/output/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "loss/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "loss/Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "loss/lrmult"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/lrmult"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "loss/sub"
  op: "Sub"
  input: "model/split:1"
  input: "oldpi/model/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Square"
  op: "Square"
  input: "oldpi/model/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/sub_1"
  op: "Sub"
  input: "oldpi/model/split"
  input: "model/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Square_1"
  op: "Square"
  input: "loss/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/add"
  op: "Add"
  input: "loss/Square"
  input: "loss/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Square_2"
  op: "Square"
  input: "model/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "loss/mul_1"
  op: "Mul"
  input: "loss/mul_1/x"
  input: "loss/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/truediv"
  op: "RealDiv"
  input: "loss/add"
  input: "loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/add_1"
  op: "Add"
  input: "loss/sub"
  input: "loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "loss/sub_2"
  op: "Sub"
  input: "loss/add_1"
  input: "loss/sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/Sum"
  op: "Sum"
  input: "loss/sub_2"
  input: "loss/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.4189385175704956
      }
    }
  }
}
node {
  name: "loss/add_2"
  op: "Add"
  input: "model/split:1"
  input: "loss/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/Sum_1"
  op: "Sum"
  input: "loss/add_2"
  input: "loss/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Mean"
  op: "Mean"
  input: "loss/Sum"
  input: "loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Mean_1"
  op: "Mean"
  input: "loss/Sum_1"
  input: "loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.009999999776482582
      }
    }
  }
}
node {
  name: "loss/mul_2"
  op: "Mul"
  input: "loss/mul_2/x"
  input: "loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/sub_3"
  op: "Sub"
  input: "loss/Placeholder_2"
  input: "model/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/truediv_1"
  op: "RealDiv"
  input: "loss/sub_3"
  input: "model/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Square_3"
  op: "Square"
  input: "loss/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Sum_2/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/Sum_2"
  op: "Sum"
  input: "loss/Square_3"
  input: "loss/Sum_2/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mul_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "loss/mul_3"
  op: "Mul"
  input: "loss/mul_3/x"
  input: "loss/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Shape"
  op: "Shape"
  input: "loss/Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/strided_slice"
  op: "StridedSlice"
  input: "loss/Shape"
  input: "loss/strided_slice/stack"
  input: "loss/strided_slice/stack_1"
  input: "loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Cast"
  op: "Cast"
  input: "loss/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mul_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9189385175704956
      }
    }
  }
}
node {
  name: "loss/mul_4"
  op: "Mul"
  input: "loss/mul_4/x"
  input: "loss/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/add_3"
  op: "Add"
  input: "loss/mul_3"
  input: "loss/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Sum_3/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/Sum_3"
  op: "Sum"
  input: "model/split:1"
  input: "loss/Sum_3/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/add_4"
  op: "Add"
  input: "loss/add_3"
  input: "loss/Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Neg"
  op: "Neg"
  input: "loss/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/sub_4"
  op: "Sub"
  input: "loss/Placeholder_2"
  input: "oldpi/model/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/truediv_2"
  op: "RealDiv"
  input: "loss/sub_4"
  input: "oldpi/model/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Square_4"
  op: "Square"
  input: "loss/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Sum_4/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/Sum_4"
  op: "Sum"
  input: "loss/Square_4"
  input: "loss/Sum_4/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mul_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "loss/mul_5"
  op: "Mul"
  input: "loss/mul_5/x"
  input: "loss/Sum_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Shape_1"
  op: "Shape"
  input: "loss/Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/strided_slice_1"
  op: "StridedSlice"
  input: "loss/Shape_1"
  input: "loss/strided_slice_1/stack"
  input: "loss/strided_slice_1/stack_1"
  input: "loss/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Cast_1"
  op: "Cast"
  input: "loss/strided_slice_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mul_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9189385175704956
      }
    }
  }
}
node {
  name: "loss/mul_6"
  op: "Mul"
  input: "loss/mul_6/x"
  input: "loss/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/add_5"
  op: "Add"
  input: "loss/mul_5"
  input: "loss/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Sum_5/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/Sum_5"
  op: "Sum"
  input: "oldpi/model/split:1"
  input: "loss/Sum_5/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/add_6"
  op: "Add"
  input: "loss/add_5"
  input: "loss/Sum_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Neg_1"
  op: "Neg"
  input: "loss/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/sub_5"
  op: "Sub"
  input: "loss/Neg"
  input: "loss/Neg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Exp"
  op: "Exp"
  input: "loss/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul_7"
  op: "Mul"
  input: "loss/Exp"
  input: "loss/Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/sub_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/sub_6"
  op: "Sub"
  input: "loss/sub_6/x"
  input: "loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/add_7/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/add_7"
  op: "Add"
  input: "loss/add_7/x"
  input: "loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/clip_by_value/Minimum"
  op: "Minimum"
  input: "loss/Exp"
  input: "loss/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/clip_by_value"
  op: "Maximum"
  input: "loss/clip_by_value/Minimum"
  input: "loss/sub_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul_8"
  op: "Mul"
  input: "loss/clip_by_value"
  input: "loss/Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Minimum"
  op: "Minimum"
  input: "loss/mul_7"
  input: "loss/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Mean_2"
  op: "Mean"
  input: "loss/Minimum"
  input: "loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Neg_2"
  op: "Neg"
  input: "loss/Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/sub_7"
  op: "Sub"
  input: "output/strided_slice_1"
  input: "loss/Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Square_5"
  op: "Square"
  input: "loss/sub_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Mean_3"
  op: "Mean"
  input: "loss/Square_5"
  input: "loss/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/add_8"
  op: "Add"
  input: "loss/Neg_2"
  input: "loss/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/add_9"
  op: "Add"
  input: "loss/add_8"
  input: "loss/Mean_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/entropy_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/entropy_loss"
      }
    }
  }
}
node {
  name: "loss/entropy_loss"
  op: "ScalarSummary"
  input: "loss/entropy_loss/tags"
  input: "loss/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/policy_gradient_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/policy_gradient_loss"
      }
    }
  }
}
node {
  name: "loss/policy_gradient_loss"
  op: "ScalarSummary"
  input: "loss/policy_gradient_loss/tags"
  input: "loss/Neg_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/value_function_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/value_function_loss"
      }
    }
  }
}
node {
  name: "loss/value_function_loss"
  op: "ScalarSummary"
  input: "loss/value_function_loss/tags"
  input: "loss/Mean_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/approximate_kullback-leibler/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/approximate_kullback-leibler"
      }
    }
  }
}
node {
  name: "loss/approximate_kullback-leibler"
  op: "ScalarSummary"
  input: "loss/approximate_kullback-leibler/tags"
  input: "loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/clip_factor/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/clip_factor"
      }
    }
  }
}
node {
  name: "loss/clip_factor"
  op: "ScalarSummary"
  input: "loss/clip_factor/tags"
  input: "loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/loss"
      }
    }
  }
}
node {
  name: "loss/loss"
  op: "ScalarSummary"
  input: "loss/loss/tags"
  input: "loss/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Assign"
  op: "Identity"
  input: "model/pi_fc0/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "loss/Assign_1"
  op: "Identity"
  input: "model/pi_fc0/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "loss/Assign_2"
  op: "Identity"
  input: "model/vf_fc0/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "loss/Assign_3"
  op: "Identity"
  input: "model/vf_fc0/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "loss/Assign_4"
  op: "Identity"
  input: "model/pi_fc1/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "loss/Assign_5"
  op: "Identity"
  input: "model/pi_fc1/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "loss/Assign_6"
  op: "Identity"
  input: "model/vf_fc1/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "loss/Assign_7"
  op: "Identity"
  input: "model/vf_fc1/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "loss/Assign_8"
  op: "Identity"
  input: "model/vf/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/w"
      }
    }
  }
}
node {
  name: "loss/Assign_9"
  op: "Identity"
  input: "model/vf/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/b"
      }
    }
  }
}
node {
  name: "loss/Assign_10"
  op: "Identity"
  input: "model/pi/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/w"
      }
    }
  }
}
node {
  name: "loss/Assign_11"
  op: "Identity"
  input: "model/pi/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/b"
      }
    }
  }
}
node {
  name: "loss/Assign_12"
  op: "Identity"
  input: "model/pi/logstd/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/logstd"
      }
    }
  }
}
node {
  name: "loss/Assign_13"
  op: "Identity"
  input: "model/q/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/w"
      }
    }
  }
}
node {
  name: "loss/Assign_14"
  op: "Identity"
  input: "model/q/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/b"
      }
    }
  }
}
node {
  name: "loss/group_deps"
  op: "NoOp"
  input: "^loss/Assign"
  input: "^loss/Assign_1"
  input: "^loss/Assign_10"
  input: "^loss/Assign_11"
  input: "^loss/Assign_12"
  input: "^loss/Assign_13"
  input: "^loss/Assign_14"
  input: "^loss/Assign_2"
  input: "^loss/Assign_3"
  input: "^loss/Assign_4"
  input: "^loss/Assign_5"
  input: "^loss/Assign_6"
  input: "^loss/Assign_7"
  input: "^loss/Assign_8"
  input: "^loss/Assign_9"
}
node {
  name: "Adam_mpi/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3092
        }
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice"
  op: "StridedSlice"
  input: "Adam_mpi/Placeholder"
  input: "Adam_mpi/strided_slice/stack"
  input: "Adam_mpi/strided_slice/stack_1"
  input: "Adam_mpi/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Adam_mpi/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\036\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape"
  op: "Reshape"
  input: "Adam_mpi/strided_slice"
  input: "Adam_mpi/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Assign"
  op: "Identity"
  input: "Adam_mpi/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 992
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_1"
  op: "StridedSlice"
  input: "Adam_mpi/Placeholder"
  input: "Adam_mpi/strided_slice_1/stack"
  input: "Adam_mpi/strided_slice_1/stack_1"
  input: "Adam_mpi/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Adam_mpi/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_1"
  op: "Reshape"
  input: "Adam_mpi/strided_slice_1"
  input: "Adam_mpi/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Assign_1"
  op: "Identity"
  input: "Adam_mpi/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 992
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1952
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_2"
  op: "StridedSlice"
  input: "Adam_mpi/Placeholder"
  input: "Adam_mpi/strided_slice_2/stack"
  input: "Adam_mpi/strided_slice_2/stack_1"
  input: "Adam_mpi/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Adam_mpi/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\036\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_2"
  op: "Reshape"
  input: "Adam_mpi/strided_slice_2"
  input: "Adam_mpi/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Assign_2"
  op: "Identity"
  input: "Adam_mpi/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1952
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1984
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_3"
  op: "StridedSlice"
  input: "Adam_mpi/Placeholder"
  input: "Adam_mpi/strided_slice_3/stack"
  input: "Adam_mpi/strided_slice_3/stack_1"
  input: "Adam_mpi/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Adam_mpi/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_3"
  op: "Reshape"
  input: "Adam_mpi/strided_slice_3"
  input: "Adam_mpi/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Assign_3"
  op: "Identity"
  input: "Adam_mpi/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1984
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2496
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_4"
  op: "StridedSlice"
  input: "Adam_mpi/Placeholder"
  input: "Adam_mpi/strided_slice_4/stack"
  input: "Adam_mpi/strided_slice_4/stack_1"
  input: "Adam_mpi/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Adam_mpi/Reshape_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_4"
  op: "Reshape"
  input: "Adam_mpi/strided_slice_4"
  input: "Adam_mpi/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Assign_4"
  op: "Identity"
  input: "Adam_mpi/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2496
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2512
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_5"
  op: "StridedSlice"
  input: "Adam_mpi/Placeholder"
  input: "Adam_mpi/strided_slice_5/stack"
  input: "Adam_mpi/strided_slice_5/stack_1"
  input: "Adam_mpi/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Adam_mpi/Reshape_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_5"
  op: "Reshape"
  input: "Adam_mpi/strided_slice_5"
  input: "Adam_mpi/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Assign_5"
  op: "Identity"
  input: "Adam_mpi/Reshape_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2512
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3024
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_6"
  op: "StridedSlice"
  input: "Adam_mpi/Placeholder"
  input: "Adam_mpi/strided_slice_6/stack"
  input: "Adam_mpi/strided_slice_6/stack_1"
  input: "Adam_mpi/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Adam_mpi/Reshape_6/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_6"
  op: "Reshape"
  input: "Adam_mpi/strided_slice_6"
  input: "Adam_mpi/Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Assign_6"
  op: "Identity"
  input: "Adam_mpi/Reshape_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3024
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3040
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_7"
  op: "StridedSlice"
  input: "Adam_mpi/Placeholder"
  input: "Adam_mpi/strided_slice_7/stack"
  input: "Adam_mpi/strided_slice_7/stack_1"
  input: "Adam_mpi/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Adam_mpi/Reshape_7/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_7"
  op: "Reshape"
  input: "Adam_mpi/strided_slice_7"
  input: "Adam_mpi/Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Assign_7"
  op: "Identity"
  input: "Adam_mpi/Reshape_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3040
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3056
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_8"
  op: "StridedSlice"
  input: "Adam_mpi/Placeholder"
  input: "Adam_mpi/strided_slice_8/stack"
  input: "Adam_mpi/strided_slice_8/stack_1"
  input: "Adam_mpi/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Adam_mpi/Reshape_8/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_8"
  op: "Reshape"
  input: "Adam_mpi/strided_slice_8"
  input: "Adam_mpi/Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Assign_8"
  op: "Identity"
  input: "Adam_mpi/Reshape_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/w"
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_9/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3056
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_9/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3057
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_9/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_9"
  op: "StridedSlice"
  input: "Adam_mpi/Placeholder"
  input: "Adam_mpi/strided_slice_9/stack"
  input: "Adam_mpi/strided_slice_9/stack_1"
  input: "Adam_mpi/strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Adam_mpi/Reshape_9/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_9"
  op: "Reshape"
  input: "Adam_mpi/strided_slice_9"
  input: "Adam_mpi/Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Assign_9"
  op: "Identity"
  input: "Adam_mpi/Reshape_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/b"
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_10/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3057
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_10/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3073
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_10/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_10"
  op: "StridedSlice"
  input: "Adam_mpi/Placeholder"
  input: "Adam_mpi/strided_slice_10/stack"
  input: "Adam_mpi/strided_slice_10/stack_1"
  input: "Adam_mpi/strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Adam_mpi/Reshape_10/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_10"
  op: "Reshape"
  input: "Adam_mpi/strided_slice_10"
  input: "Adam_mpi/Reshape_10/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Assign_10"
  op: "Identity"
  input: "Adam_mpi/Reshape_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/w"
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_11/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3073
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_11/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3074
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_11/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_11"
  op: "StridedSlice"
  input: "Adam_mpi/Placeholder"
  input: "Adam_mpi/strided_slice_11/stack"
  input: "Adam_mpi/strided_slice_11/stack_1"
  input: "Adam_mpi/strided_slice_11/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Adam_mpi/Reshape_11/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_11"
  op: "Reshape"
  input: "Adam_mpi/strided_slice_11"
  input: "Adam_mpi/Reshape_11/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Assign_11"
  op: "Identity"
  input: "Adam_mpi/Reshape_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/b"
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_12/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3074
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_12/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3075
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_12/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_12"
  op: "StridedSlice"
  input: "Adam_mpi/Placeholder"
  input: "Adam_mpi/strided_slice_12/stack"
  input: "Adam_mpi/strided_slice_12/stack_1"
  input: "Adam_mpi/strided_slice_12/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Adam_mpi/Reshape_12/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_12"
  op: "Reshape"
  input: "Adam_mpi/strided_slice_12"
  input: "Adam_mpi/Reshape_12/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Assign_12"
  op: "Identity"
  input: "Adam_mpi/Reshape_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/logstd"
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_13/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3075
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_13/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3091
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_13/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_13"
  op: "StridedSlice"
  input: "Adam_mpi/Placeholder"
  input: "Adam_mpi/strided_slice_13/stack"
  input: "Adam_mpi/strided_slice_13/stack_1"
  input: "Adam_mpi/strided_slice_13/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Adam_mpi/Reshape_13/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_13"
  op: "Reshape"
  input: "Adam_mpi/strided_slice_13"
  input: "Adam_mpi/Reshape_13/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Assign_13"
  op: "Identity"
  input: "Adam_mpi/Reshape_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/w"
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_14/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3091
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_14/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3092
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_14/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/strided_slice_14"
  op: "StridedSlice"
  input: "Adam_mpi/Placeholder"
  input: "Adam_mpi/strided_slice_14/stack"
  input: "Adam_mpi/strided_slice_14/stack_1"
  input: "Adam_mpi/strided_slice_14/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Adam_mpi/Reshape_14/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_14"
  op: "Reshape"
  input: "Adam_mpi/strided_slice_14"
  input: "Adam_mpi/Reshape_14/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Assign_14"
  op: "Identity"
  input: "Adam_mpi/Reshape_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/b"
      }
    }
  }
}
node {
  name: "Adam_mpi/group_deps"
  op: "NoOp"
  input: "^Adam_mpi/Assign"
  input: "^Adam_mpi/Assign_1"
  input: "^Adam_mpi/Assign_10"
  input: "^Adam_mpi/Assign_11"
  input: "^Adam_mpi/Assign_12"
  input: "^Adam_mpi/Assign_13"
  input: "^Adam_mpi/Assign_14"
  input: "^Adam_mpi/Assign_2"
  input: "^Adam_mpi/Assign_3"
  input: "^Adam_mpi/Assign_4"
  input: "^Adam_mpi/Assign_5"
  input: "^Adam_mpi/Assign_6"
  input: "^Adam_mpi/Assign_7"
  input: "^Adam_mpi/Assign_8"
  input: "^Adam_mpi/Assign_9"
}
node {
  name: "Adam_mpi/Reshape_15/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_15"
  op: "Reshape"
  input: "model/pi_fc0/w/read"
  input: "Adam_mpi/Reshape_15/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Reshape_16/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_16"
  op: "Reshape"
  input: "model/pi_fc0/b/read"
  input: "Adam_mpi/Reshape_16/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Reshape_17/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_17"
  op: "Reshape"
  input: "model/vf_fc0/w/read"
  input: "Adam_mpi/Reshape_17/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Reshape_18/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_18"
  op: "Reshape"
  input: "model/vf_fc0/b/read"
  input: "Adam_mpi/Reshape_18/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Reshape_19/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_19"
  op: "Reshape"
  input: "model/pi_fc1/w/read"
  input: "Adam_mpi/Reshape_19/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Reshape_20/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_20"
  op: "Reshape"
  input: "model/pi_fc1/b/read"
  input: "Adam_mpi/Reshape_20/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Reshape_21/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_21"
  op: "Reshape"
  input: "model/vf_fc1/w/read"
  input: "Adam_mpi/Reshape_21/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Reshape_22/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_22"
  op: "Reshape"
  input: "model/vf_fc1/b/read"
  input: "Adam_mpi/Reshape_22/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Reshape_23/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_23"
  op: "Reshape"
  input: "model/vf/w/read"
  input: "Adam_mpi/Reshape_23/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Reshape_24/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_24"
  op: "Reshape"
  input: "model/vf/b/read"
  input: "Adam_mpi/Reshape_24/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Reshape_25/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_25"
  op: "Reshape"
  input: "model/pi/w/read"
  input: "Adam_mpi/Reshape_25/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Reshape_26/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_26"
  op: "Reshape"
  input: "model/pi/b/read"
  input: "Adam_mpi/Reshape_26/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Reshape_27/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_27"
  op: "Reshape"
  input: "model/pi/logstd/read"
  input: "Adam_mpi/Reshape_27/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Reshape_28/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_28"
  op: "Reshape"
  input: "model/q/w/read"
  input: "Adam_mpi/Reshape_28/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/Reshape_29/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam_mpi/Reshape_29"
  op: "Reshape"
  input: "model/q/b/read"
  input: "Adam_mpi/Reshape_29/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam_mpi/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Adam_mpi/concat"
  op: "ConcatV2"
  input: "Adam_mpi/Reshape_15"
  input: "Adam_mpi/Reshape_16"
  input: "Adam_mpi/Reshape_17"
  input: "Adam_mpi/Reshape_18"
  input: "Adam_mpi/Reshape_19"
  input: "Adam_mpi/Reshape_20"
  input: "Adam_mpi/Reshape_21"
  input: "Adam_mpi/Reshape_22"
  input: "Adam_mpi/Reshape_23"
  input: "Adam_mpi/Reshape_24"
  input: "Adam_mpi/Reshape_25"
  input: "Adam_mpi/Reshape_26"
  input: "Adam_mpi/Reshape_27"
  input: "Adam_mpi/Reshape_28"
  input: "Adam_mpi/Reshape_29"
  input: "Adam_mpi/concat/axis"
  attr {
    key: "N"
    value {
      i: 15
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input_info/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_info/Mean"
  op: "Mean"
  input: "loss/Placeholder_1"
  input: "input_info/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "input_info/discounted_rewards/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "input_info/discounted_rewards"
      }
    }
  }
}
node {
  name: "input_info/discounted_rewards"
  op: "ScalarSummary"
  input: "input_info/discounted_rewards/tags"
  input: "input_info/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_info/Rank/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "input_info/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_info/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_info/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_info/range"
  op: "Range"
  input: "input_info/range/start"
  input: "input_info/Rank"
  input: "input_info/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input_info/Mean_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "input_info/Mean_1"
  op: "Mean"
  input: "input_info/Mean_1/input"
  input: "input_info/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "input_info/learning_rate/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "input_info/learning_rate"
      }
    }
  }
}
node {
  name: "input_info/learning_rate"
  op: "ScalarSummary"
  input: "input_info/learning_rate/tags"
  input: "input_info/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_info/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_info/Mean_2"
  op: "Mean"
  input: "loss/Placeholder"
  input: "input_info/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "input_info/advantage/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "input_info/advantage"
      }
    }
  }
}
node {
  name: "input_info/advantage"
  op: "ScalarSummary"
  input: "input_info/advantage/tags"
  input: "input_info/Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_info/Rank_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "input_info/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_info/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_info/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_info/range_1"
  op: "Range"
  input: "input_info/range_1/start"
  input: "input_info/Rank_1"
  input: "input_info/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input_info/Mean_3/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "input_info/Mean_3"
  op: "Mean"
  input: "input_info/Mean_3/input"
  input: "input_info/range_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "input_info/clip_range/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "input_info/clip_range"
      }
    }
  }
}
node {
  name: "input_info/clip_range"
  op: "ScalarSummary"
  input: "input_info/clip_range/tags"
  input: "input_info/Mean_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^model/pi/b/Assign"
  input: "^model/pi/logstd/Assign"
  input: "^model/pi/w/Assign"
  input: "^model/pi_fc0/b/Assign"
  input: "^model/pi_fc0/w/Assign"
  input: "^model/pi_fc1/b/Assign"
  input: "^model/pi_fc1/w/Assign"
  input: "^model/q/b/Assign"
  input: "^model/q/w/Assign"
  input: "^model/vf/b/Assign"
  input: "^model/vf/w/Assign"
  input: "^model/vf_fc0/b/Assign"
  input: "^model/vf_fc0/w/Assign"
  input: "^model/vf_fc1/b/Assign"
  input: "^model/vf_fc1/w/Assign"
  input: "^oldpi/model/pi/b/Assign"
  input: "^oldpi/model/pi/logstd/Assign"
  input: "^oldpi/model/pi/w/Assign"
  input: "^oldpi/model/pi_fc0/b/Assign"
  input: "^oldpi/model/pi_fc0/w/Assign"
  input: "^oldpi/model/pi_fc1/b/Assign"
  input: "^oldpi/model/pi_fc1/w/Assign"
  input: "^oldpi/model/q/b/Assign"
  input: "^oldpi/model/q/w/Assign"
  input: "^oldpi/model/vf/b/Assign"
  input: "^oldpi/model/vf/w/Assign"
  input: "^oldpi/model/vf_fc0/b/Assign"
  input: "^oldpi/model/vf_fc0/w/Assign"
  input: "^oldpi/model/vf_fc1/b/Assign"
  input: "^oldpi/model/vf_fc1/w/Assign"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss/entropy_loss"
  input: "loss/policy_gradient_loss"
  input: "loss/value_function_loss"
  input: "loss/approximate_kullback-leibler"
  input: "loss/clip_factor"
  input: "loss/loss"
  input: "input_info/discounted_rewards"
  input: "input_info/learning_rate"
  input: "input_info/advantage"
  input: "input_info/clip_range"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_3_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/loss/Mean_3_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_3_grad/Shape"
  op: "Shape"
  input: "loss/Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_3_grad/Tile"
  op: "Tile"
  input: "gradients/loss/Mean_3_grad/Reshape"
  input: "gradients/loss/Mean_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_3_grad/Shape_1"
  op: "Shape"
  input: "loss/Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_3_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_3_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_3_grad/Prod"
  op: "Prod"
  input: "gradients/loss/Mean_3_grad/Shape_1"
  input: "gradients/loss/Mean_3_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Mean_3_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_3_grad/Prod_1"
  op: "Prod"
  input: "gradients/loss/Mean_3_grad/Shape_2"
  input: "gradients/loss/Mean_3_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Mean_3_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_3_grad/Maximum"
  op: "Maximum"
  input: "gradients/loss/Mean_3_grad/Prod_1"
  input: "gradients/loss/Mean_3_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_3_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/loss/Mean_3_grad/Prod"
  input: "gradients/loss/Mean_3_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_3_grad/Cast"
  op: "Cast"
  input: "gradients/loss/Mean_3_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Mean_3_grad/truediv"
  op: "RealDiv"
  input: "gradients/loss/Mean_3_grad/Tile"
  input: "gradients/loss/Mean_3_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Neg_2_grad/Neg"
  op: "Neg"
  input: "gradients/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/Fill"
  input: "loss/mul_2/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Square_5_grad/Const"
  op: "Const"
  input: "^gradients/loss/Mean_3_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/loss/Square_5_grad/Mul"
  op: "Mul"
  input: "loss/sub_7"
  input: "gradients/loss/Square_5_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Square_5_grad/Mul_1"
  op: "Mul"
  input: "gradients/loss/Mean_3_grad/truediv"
  input: "gradients/loss/Square_5_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Mean_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/Neg_2_grad/Neg"
  input: "gradients/loss/Mean_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_2_grad/Shape"
  op: "Shape"
  input: "loss/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_2_grad/Tile"
  op: "Tile"
  input: "gradients/loss/Mean_2_grad/Reshape"
  input: "gradients/loss/Mean_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_2_grad/Shape_1"
  op: "Shape"
  input: "loss/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_2_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_2_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_2_grad/Prod"
  op: "Prod"
  input: "gradients/loss/Mean_2_grad/Shape_1"
  input: "gradients/loss/Mean_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Mean_2_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_2_grad/Prod_1"
  op: "Prod"
  input: "gradients/loss/Mean_2_grad/Shape_2"
  input: "gradients/loss/Mean_2_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Mean_2_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_2_grad/Maximum"
  op: "Maximum"
  input: "gradients/loss/Mean_2_grad/Prod_1"
  input: "gradients/loss/Mean_2_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_2_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/loss/Mean_2_grad/Prod"
  input: "gradients/loss/Mean_2_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_2_grad/Cast"
  op: "Cast"
  input: "gradients/loss/Mean_2_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Mean_2_grad/truediv"
  op: "RealDiv"
  input: "gradients/loss/Mean_2_grad/Tile"
  input: "gradients/loss/Mean_2_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Mean_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/mul_2_grad/Mul_1"
  input: "gradients/loss/Mean_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_1_grad/Shape"
  op: "Shape"
  input: "loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_1_grad/Tile"
  op: "Tile"
  input: "gradients/loss/Mean_1_grad/Reshape"
  input: "gradients/loss/Mean_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_1_grad/Shape_1"
  op: "Shape"
  input: "loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_1_grad/Prod"
  op: "Prod"
  input: "gradients/loss/Mean_1_grad/Shape_1"
  input: "gradients/loss/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Mean_1_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_1_grad/Prod_1"
  op: "Prod"
  input: "gradients/loss/Mean_1_grad/Shape_2"
  input: "gradients/loss/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Mean_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Mean_1_grad/Maximum"
  op: "Maximum"
  input: "gradients/loss/Mean_1_grad/Prod_1"
  input: "gradients/loss/Mean_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/loss/Mean_1_grad/Prod"
  input: "gradients/loss/Mean_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Mean_1_grad/Cast"
  op: "Cast"
  input: "gradients/loss/Mean_1_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "gradients/loss/Mean_1_grad/Tile"
  input: "gradients/loss/Mean_1_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/sub_7_grad/Shape"
  op: "Shape"
  input: "output/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_7_grad/Shape_1"
  op: "Shape"
  input: "loss/Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/sub_7_grad/Shape"
  input: "gradients/loss/sub_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_7_grad/Sum"
  op: "Sum"
  input: "gradients/loss/Square_5_grad/Mul_1"
  input: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/sub_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/sub_7_grad/Sum"
  input: "gradients/loss/sub_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/Square_5_grad/Mul_1"
  input: "gradients/loss/sub_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/sub_7_grad/Neg"
  op: "Neg"
  input: "gradients/loss/sub_7_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/sub_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/sub_7_grad/Neg"
  input: "gradients/loss/sub_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Minimum_grad/Shape"
  op: "Shape"
  input: "loss/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Minimum_grad/Shape_1"
  op: "Shape"
  input: "loss/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/loss/Mean_2_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/loss/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/loss/Minimum_grad/Shape_2"
  input: "gradients/loss/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "loss/mul_7"
  input: "loss/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/Minimum_grad/Shape"
  input: "gradients/loss/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Minimum_grad/Select"
  op: "Select"
  input: "gradients/loss/Minimum_grad/LessEqual"
  input: "gradients/loss/Mean_2_grad/truediv"
  input: "gradients/loss/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/loss/Minimum_grad/LessEqual"
  input: "gradients/loss/Minimum_grad/zeros"
  input: "gradients/loss/Mean_2_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/loss/Minimum_grad/Select"
  input: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/Minimum_grad/Sum"
  input: "gradients/loss/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/Minimum_grad/Select_1"
  input: "gradients/loss/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/Minimum_grad/Sum_1"
  input: "gradients/loss/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/Shape"
  op: "Shape"
  input: "loss/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/add"
  op: "Add"
  input: "loss/Sum_1/reduction_indices"
  input: "gradients/loss/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_1_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients/loss/Sum_1_grad/add"
  input: "gradients/loss/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_1_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/range"
  op: "Range"
  input: "gradients/loss/Sum_1_grad/range/start"
  input: "gradients/loss/Sum_1_grad/Size"
  input: "gradients/loss/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_1_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/Fill"
  op: "Fill"
  input: "gradients/loss/Sum_1_grad/Shape_1"
  input: "gradients/loss/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/loss/Sum_1_grad/range"
  input: "gradients/loss/Sum_1_grad/mod"
  input: "gradients/loss/Sum_1_grad/Shape"
  input: "gradients/loss/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_1_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients/loss/Sum_1_grad/DynamicStitch"
  input: "gradients/loss/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_1_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/loss/Sum_1_grad/Shape"
  input: "gradients/loss/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_1_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/Mean_1_grad/truediv"
  input: "gradients/loss/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/loss/Sum_1_grad/Reshape"
  input: "gradients/loss/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/output/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "model/vf/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/output/strided_slice_1_grad/Shape"
  input: "output/strided_slice_1/stack"
  input: "output/strided_slice_1/stack_1"
  input: "output/strided_slice_1/stack_2"
  input: "gradients/loss/sub_7_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/loss/mul_7_grad/Shape"
  op: "Shape"
  input: "loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_7_grad/Shape_1"
  op: "Shape"
  input: "loss/Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/mul_7_grad/Shape"
  input: "gradients/loss/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_7_grad/Mul"
  op: "Mul"
  input: "gradients/loss/Minimum_grad/Reshape"
  input: "loss/Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_7_grad/Sum"
  op: "Sum"
  input: "gradients/loss/mul_7_grad/Mul"
  input: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/mul_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/mul_7_grad/Sum"
  input: "gradients/loss/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_7_grad/Mul_1"
  op: "Mul"
  input: "loss/Exp"
  input: "gradients/loss/Minimum_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/mul_7_grad/Mul_1"
  input: "gradients/loss/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/mul_7_grad/Sum_1"
  input: "gradients/loss/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_8_grad/Shape"
  op: "Shape"
  input: "loss/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_8_grad/Shape_1"
  op: "Shape"
  input: "loss/Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/mul_8_grad/Shape"
  input: "gradients/loss/mul_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_8_grad/Mul"
  op: "Mul"
  input: "gradients/loss/Minimum_grad/Reshape_1"
  input: "loss/Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_8_grad/Sum"
  op: "Sum"
  input: "gradients/loss/mul_8_grad/Mul"
  input: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/mul_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/mul_8_grad/Sum"
  input: "gradients/loss/mul_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_8_grad/Mul_1"
  op: "Mul"
  input: "loss/clip_by_value"
  input: "gradients/loss/Minimum_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/mul_8_grad/Mul_1"
  input: "gradients/loss/mul_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/mul_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/mul_8_grad/Sum_1"
  input: "gradients/loss/mul_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_2_grad/Shape"
  op: "Shape"
  input: "model/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/add_2_grad/Shape"
  input: "gradients/loss/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/loss/Sum_1_grad/Tile"
  input: "gradients/loss/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/add_2_grad/Sum"
  input: "gradients/loss/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/Sum_1_grad/Tile"
  input: "gradients/loss/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/add_2_grad/Sum_1"
  input: "gradients/loss/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/vf/add_grad/Shape"
  op: "Shape"
  input: "model/vf/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/vf/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/model/vf/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/model/vf/add_grad/Shape"
  input: "gradients/model/vf/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/vf/add_grad/Sum"
  op: "Sum"
  input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/model/vf/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/vf/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/model/vf/add_grad/Sum"
  input: "gradients/model/vf/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/vf/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/model/vf/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/vf/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/model/vf/add_grad/Sum_1"
  input: "gradients/model/vf/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/clip_by_value_grad/Shape"
  op: "Shape"
  input: "loss/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/loss/mul_8_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/loss/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/loss/clip_by_value_grad/Shape_2"
  input: "gradients/loss/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/clip_by_value/Minimum"
  input: "loss/sub_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/clip_by_value_grad/Shape"
  input: "gradients/loss/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/loss/clip_by_value_grad/GreaterEqual"
  input: "gradients/loss/mul_8_grad/Reshape"
  input: "gradients/loss/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/loss/clip_by_value_grad/GreaterEqual"
  input: "gradients/loss/clip_by_value_grad/zeros"
  input: "gradients/loss/mul_8_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/loss/clip_by_value_grad/Select"
  input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/clip_by_value_grad/Sum"
  input: "gradients/loss/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/clip_by_value_grad/Select_1"
  input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/clip_by_value_grad/Sum_1"
  input: "gradients/loss/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/vf/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/model/vf/add_grad/Reshape"
  input: "model/vf/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/model/vf/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/Relu_3"
  input: "gradients/model/vf/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/loss/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/loss/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "loss/Exp"
  input: "loss/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
  input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/loss/clip_by_value_grad/Reshape"
  input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
  input: "gradients/loss/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/loss/clip_by_value/Minimum_grad/Select"
  input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/clip_by_value/Minimum_grad/Sum"
  input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/model/vf/MatMul_grad/MatMul"
  input: "model/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/loss/mul_7_grad/Reshape"
  input: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/loss/Exp_grad/mul"
  op: "Mul"
  input: "gradients/AddN"
  input: "loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/model/vf_fc1/add_grad/Shape"
  op: "Shape"
  input: "model/vf_fc1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/vf_fc1/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/model/vf_fc1/add_grad/Shape"
  input: "gradients/model/vf_fc1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/vf_fc1/add_grad/Sum"
  op: "Sum"
  input: "gradients/model/Relu_3_grad/ReluGrad"
  input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/vf_fc1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/model/vf_fc1/add_grad/Sum"
  input: "gradients/model/vf_fc1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/vf_fc1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/model/Relu_3_grad/ReluGrad"
  input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/vf_fc1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/model/vf_fc1/add_grad/Sum_1"
  input: "gradients/model/vf_fc1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_5_grad/Shape"
  op: "Shape"
  input: "loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_5_grad/Shape_1"
  op: "Shape"
  input: "loss/Neg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/sub_5_grad/Shape"
  input: "gradients/loss/sub_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_5_grad/Sum"
  op: "Sum"
  input: "gradients/loss/Exp_grad/mul"
  input: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/sub_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/sub_5_grad/Sum"
  input: "gradients/loss/sub_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/Exp_grad/mul"
  input: "gradients/loss/sub_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/sub_5_grad/Neg"
  op: "Neg"
  input: "gradients/loss/sub_5_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/sub_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/sub_5_grad/Neg"
  input: "gradients/loss/sub_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/vf_fc1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/model/vf_fc1/add_grad/Reshape"
  input: "model/vf_fc1/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/Relu_1"
  input: "gradients/model/vf_fc1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/Neg_grad/Neg"
  op: "Neg"
  input: "gradients/loss/sub_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/model/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/model/vf_fc1/MatMul_grad/MatMul"
  input: "model/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/add_4_grad/Shape"
  op: "Shape"
  input: "loss/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_4_grad/Shape_1"
  op: "Shape"
  input: "loss/Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/add_4_grad/Shape"
  input: "gradients/loss/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/loss/Neg_grad/Neg"
  input: "gradients/loss/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/add_4_grad/Sum"
  input: "gradients/loss/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/Neg_grad/Neg"
  input: "gradients/loss/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/add_4_grad/Sum_1"
  input: "gradients/loss/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/vf_fc0/add_grad/Shape"
  op: "Shape"
  input: "model/vf_fc0/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/vf_fc0/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/model/vf_fc0/add_grad/Shape"
  input: "gradients/model/vf_fc0/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/vf_fc0/add_grad/Sum"
  op: "Sum"
  input: "gradients/model/Relu_1_grad/ReluGrad"
  input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/vf_fc0/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/model/vf_fc0/add_grad/Sum"
  input: "gradients/model/vf_fc0/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/vf_fc0/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/model/Relu_1_grad/ReluGrad"
  input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/vf_fc0/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/model/vf_fc0/add_grad/Sum_1"
  input: "gradients/model/vf_fc0/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_3_grad/Shape"
  op: "Shape"
  input: "loss/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/add_3_grad/Shape"
  input: "gradients/loss/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/loss/add_4_grad/Reshape"
  input: "gradients/loss/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/add_3_grad/Sum"
  input: "gradients/loss/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/add_4_grad/Reshape"
  input: "gradients/loss/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/add_3_grad/Sum_1"
  input: "gradients/loss/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/Shape"
  op: "Shape"
  input: "model/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/add"
  op: "Add"
  input: "loss/Sum_3/reduction_indices"
  input: "gradients/loss/Sum_3_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_3_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/mod"
  op: "FloorMod"
  input: "gradients/loss/Sum_3_grad/add"
  input: "gradients/loss/Sum_3_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_3_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/range"
  op: "Range"
  input: "gradients/loss/Sum_3_grad/range/start"
  input: "gradients/loss/Sum_3_grad/Size"
  input: "gradients/loss/Sum_3_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_3_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/Fill"
  op: "Fill"
  input: "gradients/loss/Sum_3_grad/Shape_1"
  input: "gradients/loss/Sum_3_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/loss/Sum_3_grad/range"
  input: "gradients/loss/Sum_3_grad/mod"
  input: "gradients/loss/Sum_3_grad/Shape"
  input: "gradients/loss/Sum_3_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_3_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_3_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/Maximum"
  op: "Maximum"
  input: "gradients/loss/Sum_3_grad/DynamicStitch"
  input: "gradients/loss/Sum_3_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_3_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/loss/Sum_3_grad/Shape"
  input: "gradients/loss/Sum_3_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_3_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/add_4_grad/Reshape_1"
  input: "gradients/loss/Sum_3_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum_3_grad/Tile"
  op: "Tile"
  input: "gradients/loss/Sum_3_grad/Reshape"
  input: "gradients/loss/Sum_3_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/vf_fc0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/model/vf_fc0/add_grad/Reshape"
  input: "model/vf_fc0/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/flatten/Reshape"
  input: "gradients/model/vf_fc0/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/mul_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/mul_3_grad/Shape_1"
  op: "Shape"
  input: "loss/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/mul_3_grad/Shape"
  input: "gradients/loss/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/loss/add_3_grad/Reshape"
  input: "loss/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/loss/mul_3_grad/Mul"
  input: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/mul_3_grad/Sum"
  input: "gradients/loss/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/mul_3_grad/Mul_1"
  op: "Mul"
  input: "loss/mul_3/x"
  input: "gradients/loss/add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/mul_3_grad/Mul_1"
  input: "gradients/loss/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/mul_3_grad/Sum_1"
  input: "gradients/loss/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/Shape"
  op: "Shape"
  input: "loss/Square_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/add"
  op: "Add"
  input: "loss/Sum_2/reduction_indices"
  input: "gradients/loss/Sum_2_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_2_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/mod"
  op: "FloorMod"
  input: "gradients/loss/Sum_2_grad/add"
  input: "gradients/loss/Sum_2_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_2_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/range"
  op: "Range"
  input: "gradients/loss/Sum_2_grad/range/start"
  input: "gradients/loss/Sum_2_grad/Size"
  input: "gradients/loss/Sum_2_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_2_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/Fill"
  op: "Fill"
  input: "gradients/loss/Sum_2_grad/Shape_1"
  input: "gradients/loss/Sum_2_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_2_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/loss/Sum_2_grad/range"
  input: "gradients/loss/Sum_2_grad/mod"
  input: "gradients/loss/Sum_2_grad/Shape"
  input: "gradients/loss/Sum_2_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_2_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/Maximum"
  op: "Maximum"
  input: "gradients/loss/Sum_2_grad/DynamicStitch"
  input: "gradients/loss/Sum_2_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_2_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/loss/Sum_2_grad/Shape"
  input: "gradients/loss/Sum_2_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/Sum_2_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/mul_3_grad/Reshape_1"
  input: "gradients/loss/Sum_2_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Sum_2_grad/Tile"
  op: "Tile"
  input: "gradients/loss/Sum_2_grad/Reshape"
  input: "gradients/loss/Sum_2_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/Square_3_grad/Const"
  op: "Const"
  input: "^gradients/loss/Sum_2_grad/Tile"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/loss/Square_3_grad/Mul"
  op: "Mul"
  input: "loss/truediv_1"
  input: "gradients/loss/Square_3_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/Square_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/loss/Sum_2_grad/Tile"
  input: "gradients/loss/Square_3_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/truediv_1_grad/Shape"
  op: "Shape"
  input: "loss/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/truediv_1_grad/Shape_1"
  op: "Shape"
  input: "model/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/truediv_1_grad/Shape"
  input: "gradients/loss/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/truediv_1_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/loss/Square_3_grad/Mul_1"
  input: "model/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/truediv_1_grad/Sum"
  op: "Sum"
  input: "gradients/loss/truediv_1_grad/RealDiv"
  input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/truediv_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/truediv_1_grad/Sum"
  input: "gradients/loss/truediv_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/truediv_1_grad/Neg"
  op: "Neg"
  input: "loss/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/truediv_1_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/loss/truediv_1_grad/Neg"
  input: "model/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/truediv_1_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/loss/truediv_1_grad/RealDiv_1"
  input: "model/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/truediv_1_grad/mul"
  op: "Mul"
  input: "gradients/loss/Square_3_grad/Mul_1"
  input: "gradients/loss/truediv_1_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/truediv_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/truediv_1_grad/mul"
  input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/truediv_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/truediv_1_grad/Sum_1"
  input: "gradients/loss/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_3_grad/Shape"
  op: "Shape"
  input: "loss/Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_3_grad/Shape_1"
  op: "Shape"
  input: "model/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/loss/sub_3_grad/Shape"
  input: "gradients/loss/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_3_grad/Sum"
  op: "Sum"
  input: "gradients/loss/truediv_1_grad/Reshape"
  input: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/sub_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/loss/sub_3_grad/Sum"
  input: "gradients/loss/sub_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/loss/sub_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/loss/truediv_1_grad/Reshape"
  input: "gradients/loss/sub_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/loss/sub_3_grad/Neg"
  op: "Neg"
  input: "gradients/loss/sub_3_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/loss/sub_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/loss/sub_3_grad/Neg"
  input: "gradients/loss/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/Exp_grad/mul"
  op: "Mul"
  input: "gradients/loss/truediv_1_grad/Reshape_1"
  input: "model/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/loss/add_2_grad/Reshape"
  input: "gradients/loss/Sum_3_grad/Tile"
  input: "gradients/model/Exp_grad/mul"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/loss/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/model/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/loss/sub_3_grad/Reshape_1"
  input: "gradients/AddN_1"
  input: "model/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/model/concat_grad/mod"
  op: "FloorMod"
  input: "model/concat/axis"
  input: "gradients/model/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/concat_grad/Shape"
  op: "Shape"
  input: "model/pi/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/pi/add"
  input: "model/add"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/model/concat_grad/mod"
  input: "gradients/model/concat_grad/ShapeN"
  input: "gradients/model/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/model/concat_grad/Slice"
  op: "Slice"
  input: "gradients/model/split_grad/concat"
  input: "gradients/model/concat_grad/ConcatOffset"
  input: "gradients/model/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/model/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/model/split_grad/concat"
  input: "gradients/model/concat_grad/ConcatOffset:1"
  input: "gradients/model/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/model/add_grad/Shape"
  op: "Shape"
  input: "model/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/model/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/model/add_grad/Shape"
  input: "gradients/model/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/add_grad/Sum"
  op: "Sum"
  input: "gradients/model/concat_grad/Slice_1"
  input: "gradients/model/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/model/add_grad/Sum"
  input: "gradients/model/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/model/concat_grad/Slice_1"
  input: "gradients/model/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/model/add_grad/Sum_1"
  input: "gradients/model/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/mul_grad/Shape"
  op: "Shape"
  input: "model/pi/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/model/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/model/mul_grad/Shape"
  input: "gradients/model/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/mul_grad/Mul"
  op: "Mul"
  input: "gradients/model/add_grad/Reshape"
  input: "model/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/model/mul_grad/Sum"
  op: "Sum"
  input: "gradients/model/mul_grad/Mul"
  input: "gradients/model/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/model/mul_grad/Sum"
  input: "gradients/model/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/mul_grad/Mul_1"
  op: "Mul"
  input: "model/pi/add"
  input: "gradients/model/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/model/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/model/mul_grad/Mul_1"
  input: "gradients/model/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/model/mul_grad/Sum_1"
  input: "gradients/model/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/model/concat_grad/Slice"
  input: "gradients/model/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/model/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/model/pi/add_grad/Shape"
  op: "Shape"
  input: "model/pi/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/pi/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/model/pi/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/model/pi/add_grad/Shape"
  input: "gradients/model/pi/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/pi/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_2"
  input: "gradients/model/pi/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/pi/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/model/pi/add_grad/Sum"
  input: "gradients/model/pi/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/pi/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_2"
  input: "gradients/model/pi/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/pi/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/model/pi/add_grad/Sum_1"
  input: "gradients/model/pi/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/pi/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/model/pi/add_grad/Reshape"
  input: "model/pi/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/model/pi/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/Relu_2"
  input: "gradients/model/pi/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/model/pi/MatMul_grad/MatMul"
  input: "model/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/model/pi_fc1/add_grad/Shape"
  op: "Shape"
  input: "model/pi_fc1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/pi_fc1/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/model/pi_fc1/add_grad/Shape"
  input: "gradients/model/pi_fc1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/pi_fc1/add_grad/Sum"
  op: "Sum"
  input: "gradients/model/Relu_2_grad/ReluGrad"
  input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/pi_fc1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/model/pi_fc1/add_grad/Sum"
  input: "gradients/model/pi_fc1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/pi_fc1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/model/Relu_2_grad/ReluGrad"
  input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/pi_fc1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/model/pi_fc1/add_grad/Sum_1"
  input: "gradients/model/pi_fc1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/pi_fc1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/model/pi_fc1/add_grad/Reshape"
  input: "model/pi_fc1/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/Relu"
  input: "gradients/model/pi_fc1/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/model/pi_fc1/MatMul_grad/MatMul"
  input: "model/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/model/pi_fc0/add_grad/Shape"
  op: "Shape"
  input: "model/pi_fc0/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/pi_fc0/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/model/pi_fc0/add_grad/Shape"
  input: "gradients/model/pi_fc0/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/pi_fc0/add_grad/Sum"
  op: "Sum"
  input: "gradients/model/Relu_grad/ReluGrad"
  input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/pi_fc0/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/model/pi_fc0/add_grad/Sum"
  input: "gradients/model/pi_fc0/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/pi_fc0/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/model/Relu_grad/ReluGrad"
  input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/model/pi_fc0/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/model/pi_fc0/add_grad/Sum_1"
  input: "gradients/model/pi_fc0/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/model/pi_fc0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/model/pi_fc0/add_grad/Reshape"
  input: "model/pi_fc0/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/flatten/Reshape"
  input: "gradients/model/pi_fc0/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "gradients/model/pi_fc0/add_grad/Reshape_1"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
  input: "Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Reshape_3"
  op: "Reshape"
  input: "gradients/model/vf_fc0/add_grad/Reshape_1"
  input: "Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Reshape_4"
  op: "Reshape"
  input: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
  input: "Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Reshape_5"
  op: "Reshape"
  input: "gradients/model/pi_fc1/add_grad/Reshape_1"
  input: "Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_6/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "Reshape_6"
  op: "Reshape"
  input: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
  input: "Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_7/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Reshape_7"
  op: "Reshape"
  input: "gradients/model/vf_fc1/add_grad/Reshape_1"
  input: "Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_8/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Reshape_8"
  op: "Reshape"
  input: "gradients/model/vf/MatMul_grad/MatMul_1"
  input: "Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_9/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reshape_9"
  op: "Reshape"
  input: "gradients/model/vf/add_grad/Reshape_1"
  input: "Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_10/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Reshape_10"
  op: "Reshape"
  input: "gradients/model/pi/MatMul_grad/MatMul_1"
  input: "Reshape_10/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_11/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reshape_11"
  op: "Reshape"
  input: "gradients/model/pi/add_grad/Reshape_1"
  input: "Reshape_11/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_12/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reshape_12"
  op: "Reshape"
  input: "gradients/model/add_grad/Reshape_1"
  input: "Reshape_12/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reshape_13/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Reshape_13"
  op: "Reshape"
  input: "zeros_like"
  input: "Reshape_13/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "zeros_like_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reshape_14/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reshape_14"
  op: "Reshape"
  input: "zeros_like_1"
  input: "Reshape_14/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "Reshape"
  input: "Reshape_1"
  input: "Reshape_2"
  input: "Reshape_3"
  input: "Reshape_4"
  input: "Reshape_5"
  input: "Reshape_6"
  input: "Reshape_7"
  input: "Reshape_8"
  input: "Reshape_9"
  input: "Reshape_10"
  input: "Reshape_11"
  input: "Reshape_12"
  input: "Reshape_13"
  input: "Reshape_14"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 15
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "model/pi/b"
        string_val: "model/pi/logstd"
        string_val: "model/pi/w"
        string_val: "model/pi_fc0/b"
        string_val: "model/pi_fc0/w"
        string_val: "model/pi_fc1/b"
        string_val: "model/pi_fc1/w"
        string_val: "model/q/b"
        string_val: "model/q/w"
        string_val: "model/vf/b"
        string_val: "model/vf/w"
        string_val: "model/vf_fc0/b"
        string_val: "model/vf_fc0/w"
        string_val: "model/vf_fc1/b"
        string_val: "model/vf_fc1/w"
        string_val: "oldpi/model/pi/b"
        string_val: "oldpi/model/pi/logstd"
        string_val: "oldpi/model/pi/w"
        string_val: "oldpi/model/pi_fc0/b"
        string_val: "oldpi/model/pi_fc0/w"
        string_val: "oldpi/model/pi_fc1/b"
        string_val: "oldpi/model/pi_fc1/w"
        string_val: "oldpi/model/q/b"
        string_val: "oldpi/model/q/w"
        string_val: "oldpi/model/vf/b"
        string_val: "oldpi/model/vf/w"
        string_val: "oldpi/model/vf_fc0/b"
        string_val: "oldpi/model/vf_fc0/w"
        string_val: "oldpi/model/vf_fc1/b"
        string_val: "oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "model/pi/b"
  input: "model/pi/logstd"
  input: "model/pi/w"
  input: "model/pi_fc0/b"
  input: "model/pi_fc0/w"
  input: "model/pi_fc1/b"
  input: "model/pi_fc1/w"
  input: "model/q/b"
  input: "model/q/w"
  input: "model/vf/b"
  input: "model/vf/w"
  input: "model/vf_fc0/b"
  input: "model/vf_fc0/w"
  input: "model/vf_fc1/b"
  input: "model/vf_fc1/w"
  input: "oldpi/model/pi/b"
  input: "oldpi/model/pi/logstd"
  input: "oldpi/model/pi/w"
  input: "oldpi/model/pi_fc0/b"
  input: "oldpi/model/pi_fc0/w"
  input: "oldpi/model/pi_fc1/b"
  input: "oldpi/model/pi_fc1/w"
  input: "oldpi/model/q/b"
  input: "oldpi/model/q/w"
  input: "oldpi/model/vf/b"
  input: "oldpi/model/vf/w"
  input: "oldpi/model/vf_fc0/b"
  input: "oldpi/model/vf_fc0/w"
  input: "oldpi/model/vf_fc1/b"
  input: "oldpi/model/vf_fc1/w"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "model/pi/b"
        string_val: "model/pi/logstd"
        string_val: "model/pi/w"
        string_val: "model/pi_fc0/b"
        string_val: "model/pi_fc0/w"
        string_val: "model/pi_fc1/b"
        string_val: "model/pi_fc1/w"
        string_val: "model/q/b"
        string_val: "model/q/w"
        string_val: "model/vf/b"
        string_val: "model/vf/w"
        string_val: "model/vf_fc0/b"
        string_val: "model/vf_fc0/w"
        string_val: "model/vf_fc1/b"
        string_val: "model/vf_fc1/w"
        string_val: "oldpi/model/pi/b"
        string_val: "oldpi/model/pi/logstd"
        string_val: "oldpi/model/pi/w"
        string_val: "oldpi/model/pi_fc0/b"
        string_val: "oldpi/model/pi_fc0/w"
        string_val: "oldpi/model/pi_fc1/b"
        string_val: "oldpi/model/pi_fc1/w"
        string_val: "oldpi/model/q/b"
        string_val: "oldpi/model/q/w"
        string_val: "oldpi/model/vf/b"
        string_val: "oldpi/model/vf/w"
        string_val: "oldpi/model/vf_fc0/b"
        string_val: "oldpi/model/vf_fc0/w"
        string_val: "oldpi/model/vf_fc1/b"
        string_val: "oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/b"
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/logstd"
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/w"
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/b"
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/w"
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/b"
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/w"
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/b"
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/logstd"
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/w"
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/b"
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/w"
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/b"
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/w"
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "save_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_1/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "model/pi/b"
        string_val: "model/pi/logstd"
        string_val: "model/pi/w"
        string_val: "model/pi_fc0/b"
        string_val: "model/pi_fc0/w"
        string_val: "model/pi_fc1/b"
        string_val: "model/pi_fc1/w"
        string_val: "model/q/b"
        string_val: "model/q/w"
        string_val: "model/vf/b"
        string_val: "model/vf/w"
        string_val: "model/vf_fc0/b"
        string_val: "model/vf_fc0/w"
        string_val: "model/vf_fc1/b"
        string_val: "model/vf_fc1/w"
        string_val: "oldpi/model/pi/b"
        string_val: "oldpi/model/pi/logstd"
        string_val: "oldpi/model/pi/w"
        string_val: "oldpi/model/pi_fc0/b"
        string_val: "oldpi/model/pi_fc0/w"
        string_val: "oldpi/model/pi_fc1/b"
        string_val: "oldpi/model/pi_fc1/w"
        string_val: "oldpi/model/q/b"
        string_val: "oldpi/model/q/w"
        string_val: "oldpi/model/vf/b"
        string_val: "oldpi/model/vf/w"
        string_val: "oldpi/model/vf_fc0/b"
        string_val: "oldpi/model/vf_fc0/w"
        string_val: "oldpi/model/vf_fc1/b"
        string_val: "oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_1/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/SaveV2"
  op: "SaveV2"
  input: "save_1/Const"
  input: "save_1/SaveV2/tensor_names"
  input: "save_1/SaveV2/shape_and_slices"
  input: "model/pi/b"
  input: "model/pi/logstd"
  input: "model/pi/w"
  input: "model/pi_fc0/b"
  input: "model/pi_fc0/w"
  input: "model/pi_fc1/b"
  input: "model/pi_fc1/w"
  input: "model/q/b"
  input: "model/q/w"
  input: "model/vf/b"
  input: "model/vf/w"
  input: "model/vf_fc0/b"
  input: "model/vf_fc0/w"
  input: "model/vf_fc1/b"
  input: "model/vf_fc1/w"
  input: "oldpi/model/pi/b"
  input: "oldpi/model/pi/logstd"
  input: "oldpi/model/pi/w"
  input: "oldpi/model/pi_fc0/b"
  input: "oldpi/model/pi_fc0/w"
  input: "oldpi/model/pi_fc1/b"
  input: "oldpi/model/pi_fc1/w"
  input: "oldpi/model/q/b"
  input: "oldpi/model/q/w"
  input: "oldpi/model/vf/b"
  input: "oldpi/model/vf/w"
  input: "oldpi/model/vf_fc0/b"
  input: "oldpi/model/vf_fc0/w"
  input: "oldpi/model/vf_fc1/b"
  input: "oldpi/model/vf_fc1/w"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/control_dependency"
  op: "Identity"
  input: "save_1/Const"
  input: "^save_1/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_1/Const"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "model/pi/b"
        string_val: "model/pi/logstd"
        string_val: "model/pi/w"
        string_val: "model/pi_fc0/b"
        string_val: "model/pi_fc0/w"
        string_val: "model/pi_fc1/b"
        string_val: "model/pi_fc1/w"
        string_val: "model/q/b"
        string_val: "model/q/w"
        string_val: "model/vf/b"
        string_val: "model/vf/w"
        string_val: "model/vf_fc0/b"
        string_val: "model/vf_fc0/w"
        string_val: "model/vf_fc1/b"
        string_val: "model/vf_fc1/w"
        string_val: "oldpi/model/pi/b"
        string_val: "oldpi/model/pi/logstd"
        string_val: "oldpi/model/pi/w"
        string_val: "oldpi/model/pi_fc0/b"
        string_val: "oldpi/model/pi_fc0/w"
        string_val: "oldpi/model/pi_fc1/b"
        string_val: "oldpi/model/pi_fc1/w"
        string_val: "oldpi/model/q/b"
        string_val: "oldpi/model/q/w"
        string_val: "oldpi/model/vf/b"
        string_val: "oldpi/model/vf/w"
        string_val: "oldpi/model/vf_fc0/b"
        string_val: "oldpi/model/vf_fc0/w"
        string_val: "oldpi/model/vf_fc1/b"
        string_val: "oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2/tensor_names"
  input: "save_1/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign"
  op: "Identity"
  input: "save_1/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/b"
      }
    }
  }
}
node {
  name: "save_1/Assign_1"
  op: "Identity"
  input: "save_1/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/logstd"
      }
    }
  }
}
node {
  name: "save_1/Assign_2"
  op: "Identity"
  input: "save_1/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/w"
      }
    }
  }
}
node {
  name: "save_1/Assign_3"
  op: "Identity"
  input: "save_1/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "save_1/Assign_4"
  op: "Identity"
  input: "save_1/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "save_1/Assign_5"
  op: "Identity"
  input: "save_1/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "save_1/Assign_6"
  op: "Identity"
  input: "save_1/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "save_1/Assign_7"
  op: "Identity"
  input: "save_1/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/b"
      }
    }
  }
}
node {
  name: "save_1/Assign_8"
  op: "Identity"
  input: "save_1/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/w"
      }
    }
  }
}
node {
  name: "save_1/Assign_9"
  op: "Identity"
  input: "save_1/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/b"
      }
    }
  }
}
node {
  name: "save_1/Assign_10"
  op: "Identity"
  input: "save_1/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/w"
      }
    }
  }
}
node {
  name: "save_1/Assign_11"
  op: "Identity"
  input: "save_1/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "save_1/Assign_12"
  op: "Identity"
  input: "save_1/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "save_1/Assign_13"
  op: "Identity"
  input: "save_1/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "save_1/Assign_14"
  op: "Identity"
  input: "save_1/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_1/Assign_15"
  op: "Identity"
  input: "save_1/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/b"
      }
    }
  }
}
node {
  name: "save_1/Assign_16"
  op: "Identity"
  input: "save_1/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/logstd"
      }
    }
  }
}
node {
  name: "save_1/Assign_17"
  op: "Identity"
  input: "save_1/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/w"
      }
    }
  }
}
node {
  name: "save_1/Assign_18"
  op: "Identity"
  input: "save_1/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "save_1/Assign_19"
  op: "Identity"
  input: "save_1/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "save_1/Assign_20"
  op: "Identity"
  input: "save_1/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "save_1/Assign_21"
  op: "Identity"
  input: "save_1/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "save_1/Assign_22"
  op: "Identity"
  input: "save_1/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/b"
      }
    }
  }
}
node {
  name: "save_1/Assign_23"
  op: "Identity"
  input: "save_1/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/w"
      }
    }
  }
}
node {
  name: "save_1/Assign_24"
  op: "Identity"
  input: "save_1/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/b"
      }
    }
  }
}
node {
  name: "save_1/Assign_25"
  op: "Identity"
  input: "save_1/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/w"
      }
    }
  }
}
node {
  name: "save_1/Assign_26"
  op: "Identity"
  input: "save_1/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "save_1/Assign_27"
  op: "Identity"
  input: "save_1/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "save_1/Assign_28"
  op: "Identity"
  input: "save_1/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "save_1/Assign_29"
  op: "Identity"
  input: "save_1/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_1/restore_all"
  op: "NoOp"
  input: "^save_1/Assign"
  input: "^save_1/Assign_1"
  input: "^save_1/Assign_10"
  input: "^save_1/Assign_11"
  input: "^save_1/Assign_12"
  input: "^save_1/Assign_13"
  input: "^save_1/Assign_14"
  input: "^save_1/Assign_15"
  input: "^save_1/Assign_16"
  input: "^save_1/Assign_17"
  input: "^save_1/Assign_18"
  input: "^save_1/Assign_19"
  input: "^save_1/Assign_2"
  input: "^save_1/Assign_20"
  input: "^save_1/Assign_21"
  input: "^save_1/Assign_22"
  input: "^save_1/Assign_23"
  input: "^save_1/Assign_24"
  input: "^save_1/Assign_25"
  input: "^save_1/Assign_26"
  input: "^save_1/Assign_27"
  input: "^save_1/Assign_28"
  input: "^save_1/Assign_29"
  input: "^save_1/Assign_3"
  input: "^save_1/Assign_4"
  input: "^save_1/Assign_5"
  input: "^save_1/Assign_6"
  input: "^save_1/Assign_7"
  input: "^save_1/Assign_8"
  input: "^save_1/Assign_9"
}
node {
  name: "save_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_2/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "model/pi/b"
        string_val: "model/pi/logstd"
        string_val: "model/pi/w"
        string_val: "model/pi_fc0/b"
        string_val: "model/pi_fc0/w"
        string_val: "model/pi_fc1/b"
        string_val: "model/pi_fc1/w"
        string_val: "model/q/b"
        string_val: "model/q/w"
        string_val: "model/vf/b"
        string_val: "model/vf/w"
        string_val: "model/vf_fc0/b"
        string_val: "model/vf_fc0/w"
        string_val: "model/vf_fc1/b"
        string_val: "model/vf_fc1/w"
        string_val: "oldpi/model/pi/b"
        string_val: "oldpi/model/pi/logstd"
        string_val: "oldpi/model/pi/w"
        string_val: "oldpi/model/pi_fc0/b"
        string_val: "oldpi/model/pi_fc0/w"
        string_val: "oldpi/model/pi_fc1/b"
        string_val: "oldpi/model/pi_fc1/w"
        string_val: "oldpi/model/q/b"
        string_val: "oldpi/model/q/w"
        string_val: "oldpi/model/vf/b"
        string_val: "oldpi/model/vf/w"
        string_val: "oldpi/model/vf_fc0/b"
        string_val: "oldpi/model/vf_fc0/w"
        string_val: "oldpi/model/vf_fc1/b"
        string_val: "oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_2/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_2/SaveV2"
  op: "SaveV2"
  input: "save_2/Const"
  input: "save_2/SaveV2/tensor_names"
  input: "save_2/SaveV2/shape_and_slices"
  input: "model/pi/b"
  input: "model/pi/logstd"
  input: "model/pi/w"
  input: "model/pi_fc0/b"
  input: "model/pi_fc0/w"
  input: "model/pi_fc1/b"
  input: "model/pi_fc1/w"
  input: "model/q/b"
  input: "model/q/w"
  input: "model/vf/b"
  input: "model/vf/w"
  input: "model/vf_fc0/b"
  input: "model/vf_fc0/w"
  input: "model/vf_fc1/b"
  input: "model/vf_fc1/w"
  input: "oldpi/model/pi/b"
  input: "oldpi/model/pi/logstd"
  input: "oldpi/model/pi/w"
  input: "oldpi/model/pi_fc0/b"
  input: "oldpi/model/pi_fc0/w"
  input: "oldpi/model/pi_fc1/b"
  input: "oldpi/model/pi_fc1/w"
  input: "oldpi/model/q/b"
  input: "oldpi/model/q/w"
  input: "oldpi/model/vf/b"
  input: "oldpi/model/vf/w"
  input: "oldpi/model/vf_fc0/b"
  input: "oldpi/model/vf_fc0/w"
  input: "oldpi/model/vf_fc1/b"
  input: "oldpi/model/vf_fc1/w"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_2/control_dependency"
  op: "Identity"
  input: "save_2/Const"
  input: "^save_2/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_2/Const"
      }
    }
  }
}
node {
  name: "save_2/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "model/pi/b"
        string_val: "model/pi/logstd"
        string_val: "model/pi/w"
        string_val: "model/pi_fc0/b"
        string_val: "model/pi_fc0/w"
        string_val: "model/pi_fc1/b"
        string_val: "model/pi_fc1/w"
        string_val: "model/q/b"
        string_val: "model/q/w"
        string_val: "model/vf/b"
        string_val: "model/vf/w"
        string_val: "model/vf_fc0/b"
        string_val: "model/vf_fc0/w"
        string_val: "model/vf_fc1/b"
        string_val: "model/vf_fc1/w"
        string_val: "oldpi/model/pi/b"
        string_val: "oldpi/model/pi/logstd"
        string_val: "oldpi/model/pi/w"
        string_val: "oldpi/model/pi_fc0/b"
        string_val: "oldpi/model/pi_fc0/w"
        string_val: "oldpi/model/pi_fc1/b"
        string_val: "oldpi/model/pi_fc1/w"
        string_val: "oldpi/model/q/b"
        string_val: "oldpi/model/q/w"
        string_val: "oldpi/model/vf/b"
        string_val: "oldpi/model/vf/w"
        string_val: "oldpi/model/vf_fc0/b"
        string_val: "oldpi/model/vf_fc0/w"
        string_val: "oldpi/model/vf_fc1/b"
        string_val: "oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_2/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_2/RestoreV2"
  op: "RestoreV2"
  input: "save_2/Const"
  input: "save_2/RestoreV2/tensor_names"
  input: "save_2/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_2/Assign"
  op: "Identity"
  input: "save_2/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/b"
      }
    }
  }
}
node {
  name: "save_2/Assign_1"
  op: "Identity"
  input: "save_2/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/logstd"
      }
    }
  }
}
node {
  name: "save_2/Assign_2"
  op: "Identity"
  input: "save_2/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/w"
      }
    }
  }
}
node {
  name: "save_2/Assign_3"
  op: "Identity"
  input: "save_2/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "save_2/Assign_4"
  op: "Identity"
  input: "save_2/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "save_2/Assign_5"
  op: "Identity"
  input: "save_2/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "save_2/Assign_6"
  op: "Identity"
  input: "save_2/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "save_2/Assign_7"
  op: "Identity"
  input: "save_2/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/b"
      }
    }
  }
}
node {
  name: "save_2/Assign_8"
  op: "Identity"
  input: "save_2/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/w"
      }
    }
  }
}
node {
  name: "save_2/Assign_9"
  op: "Identity"
  input: "save_2/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/b"
      }
    }
  }
}
node {
  name: "save_2/Assign_10"
  op: "Identity"
  input: "save_2/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/w"
      }
    }
  }
}
node {
  name: "save_2/Assign_11"
  op: "Identity"
  input: "save_2/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "save_2/Assign_12"
  op: "Identity"
  input: "save_2/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "save_2/Assign_13"
  op: "Identity"
  input: "save_2/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "save_2/Assign_14"
  op: "Identity"
  input: "save_2/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_2/Assign_15"
  op: "Identity"
  input: "save_2/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/b"
      }
    }
  }
}
node {
  name: "save_2/Assign_16"
  op: "Identity"
  input: "save_2/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/logstd"
      }
    }
  }
}
node {
  name: "save_2/Assign_17"
  op: "Identity"
  input: "save_2/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/w"
      }
    }
  }
}
node {
  name: "save_2/Assign_18"
  op: "Identity"
  input: "save_2/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "save_2/Assign_19"
  op: "Identity"
  input: "save_2/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "save_2/Assign_20"
  op: "Identity"
  input: "save_2/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "save_2/Assign_21"
  op: "Identity"
  input: "save_2/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "save_2/Assign_22"
  op: "Identity"
  input: "save_2/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/b"
      }
    }
  }
}
node {
  name: "save_2/Assign_23"
  op: "Identity"
  input: "save_2/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/w"
      }
    }
  }
}
node {
  name: "save_2/Assign_24"
  op: "Identity"
  input: "save_2/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/b"
      }
    }
  }
}
node {
  name: "save_2/Assign_25"
  op: "Identity"
  input: "save_2/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/w"
      }
    }
  }
}
node {
  name: "save_2/Assign_26"
  op: "Identity"
  input: "save_2/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "save_2/Assign_27"
  op: "Identity"
  input: "save_2/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "save_2/Assign_28"
  op: "Identity"
  input: "save_2/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "save_2/Assign_29"
  op: "Identity"
  input: "save_2/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_2/restore_all"
  op: "NoOp"
  input: "^save_2/Assign"
  input: "^save_2/Assign_1"
  input: "^save_2/Assign_10"
  input: "^save_2/Assign_11"
  input: "^save_2/Assign_12"
  input: "^save_2/Assign_13"
  input: "^save_2/Assign_14"
  input: "^save_2/Assign_15"
  input: "^save_2/Assign_16"
  input: "^save_2/Assign_17"
  input: "^save_2/Assign_18"
  input: "^save_2/Assign_19"
  input: "^save_2/Assign_2"
  input: "^save_2/Assign_20"
  input: "^save_2/Assign_21"
  input: "^save_2/Assign_22"
  input: "^save_2/Assign_23"
  input: "^save_2/Assign_24"
  input: "^save_2/Assign_25"
  input: "^save_2/Assign_26"
  input: "^save_2/Assign_27"
  input: "^save_2/Assign_28"
  input: "^save_2/Assign_29"
  input: "^save_2/Assign_3"
  input: "^save_2/Assign_4"
  input: "^save_2/Assign_5"
  input: "^save_2/Assign_6"
  input: "^save_2/Assign_7"
  input: "^save_2/Assign_8"
  input: "^save_2/Assign_9"
}
node {
  name: "save_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_3/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "model/pi/b"
        string_val: "model/pi/logstd"
        string_val: "model/pi/w"
        string_val: "model/pi_fc0/b"
        string_val: "model/pi_fc0/w"
        string_val: "model/pi_fc1/b"
        string_val: "model/pi_fc1/w"
        string_val: "model/q/b"
        string_val: "model/q/w"
        string_val: "model/vf/b"
        string_val: "model/vf/w"
        string_val: "model/vf_fc0/b"
        string_val: "model/vf_fc0/w"
        string_val: "model/vf_fc1/b"
        string_val: "model/vf_fc1/w"
        string_val: "oldpi/model/pi/b"
        string_val: "oldpi/model/pi/logstd"
        string_val: "oldpi/model/pi/w"
        string_val: "oldpi/model/pi_fc0/b"
        string_val: "oldpi/model/pi_fc0/w"
        string_val: "oldpi/model/pi_fc1/b"
        string_val: "oldpi/model/pi_fc1/w"
        string_val: "oldpi/model/q/b"
        string_val: "oldpi/model/q/w"
        string_val: "oldpi/model/vf/b"
        string_val: "oldpi/model/vf/w"
        string_val: "oldpi/model/vf_fc0/b"
        string_val: "oldpi/model/vf_fc0/w"
        string_val: "oldpi/model/vf_fc1/b"
        string_val: "oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_3/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_3/SaveV2"
  op: "SaveV2"
  input: "save_3/Const"
  input: "save_3/SaveV2/tensor_names"
  input: "save_3/SaveV2/shape_and_slices"
  input: "model/pi/b"
  input: "model/pi/logstd"
  input: "model/pi/w"
  input: "model/pi_fc0/b"
  input: "model/pi_fc0/w"
  input: "model/pi_fc1/b"
  input: "model/pi_fc1/w"
  input: "model/q/b"
  input: "model/q/w"
  input: "model/vf/b"
  input: "model/vf/w"
  input: "model/vf_fc0/b"
  input: "model/vf_fc0/w"
  input: "model/vf_fc1/b"
  input: "model/vf_fc1/w"
  input: "oldpi/model/pi/b"
  input: "oldpi/model/pi/logstd"
  input: "oldpi/model/pi/w"
  input: "oldpi/model/pi_fc0/b"
  input: "oldpi/model/pi_fc0/w"
  input: "oldpi/model/pi_fc1/b"
  input: "oldpi/model/pi_fc1/w"
  input: "oldpi/model/q/b"
  input: "oldpi/model/q/w"
  input: "oldpi/model/vf/b"
  input: "oldpi/model/vf/w"
  input: "oldpi/model/vf_fc0/b"
  input: "oldpi/model/vf_fc0/w"
  input: "oldpi/model/vf_fc1/b"
  input: "oldpi/model/vf_fc1/w"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_3/control_dependency"
  op: "Identity"
  input: "save_3/Const"
  input: "^save_3/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_3/Const"
      }
    }
  }
}
node {
  name: "save_3/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "model/pi/b"
        string_val: "model/pi/logstd"
        string_val: "model/pi/w"
        string_val: "model/pi_fc0/b"
        string_val: "model/pi_fc0/w"
        string_val: "model/pi_fc1/b"
        string_val: "model/pi_fc1/w"
        string_val: "model/q/b"
        string_val: "model/q/w"
        string_val: "model/vf/b"
        string_val: "model/vf/w"
        string_val: "model/vf_fc0/b"
        string_val: "model/vf_fc0/w"
        string_val: "model/vf_fc1/b"
        string_val: "model/vf_fc1/w"
        string_val: "oldpi/model/pi/b"
        string_val: "oldpi/model/pi/logstd"
        string_val: "oldpi/model/pi/w"
        string_val: "oldpi/model/pi_fc0/b"
        string_val: "oldpi/model/pi_fc0/w"
        string_val: "oldpi/model/pi_fc1/b"
        string_val: "oldpi/model/pi_fc1/w"
        string_val: "oldpi/model/q/b"
        string_val: "oldpi/model/q/w"
        string_val: "oldpi/model/vf/b"
        string_val: "oldpi/model/vf/w"
        string_val: "oldpi/model/vf_fc0/b"
        string_val: "oldpi/model/vf_fc0/w"
        string_val: "oldpi/model/vf_fc1/b"
        string_val: "oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_3/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_3/RestoreV2"
  op: "RestoreV2"
  input: "save_3/Const"
  input: "save_3/RestoreV2/tensor_names"
  input: "save_3/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_3/Assign"
  op: "Identity"
  input: "save_3/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/b"
      }
    }
  }
}
node {
  name: "save_3/Assign_1"
  op: "Identity"
  input: "save_3/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/logstd"
      }
    }
  }
}
node {
  name: "save_3/Assign_2"
  op: "Identity"
  input: "save_3/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/w"
      }
    }
  }
}
node {
  name: "save_3/Assign_3"
  op: "Identity"
  input: "save_3/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "save_3/Assign_4"
  op: "Identity"
  input: "save_3/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "save_3/Assign_5"
  op: "Identity"
  input: "save_3/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "save_3/Assign_6"
  op: "Identity"
  input: "save_3/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "save_3/Assign_7"
  op: "Identity"
  input: "save_3/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/b"
      }
    }
  }
}
node {
  name: "save_3/Assign_8"
  op: "Identity"
  input: "save_3/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/w"
      }
    }
  }
}
node {
  name: "save_3/Assign_9"
  op: "Identity"
  input: "save_3/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/b"
      }
    }
  }
}
node {
  name: "save_3/Assign_10"
  op: "Identity"
  input: "save_3/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/w"
      }
    }
  }
}
node {
  name: "save_3/Assign_11"
  op: "Identity"
  input: "save_3/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "save_3/Assign_12"
  op: "Identity"
  input: "save_3/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "save_3/Assign_13"
  op: "Identity"
  input: "save_3/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "save_3/Assign_14"
  op: "Identity"
  input: "save_3/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_3/Assign_15"
  op: "Identity"
  input: "save_3/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/b"
      }
    }
  }
}
node {
  name: "save_3/Assign_16"
  op: "Identity"
  input: "save_3/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/logstd"
      }
    }
  }
}
node {
  name: "save_3/Assign_17"
  op: "Identity"
  input: "save_3/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/w"
      }
    }
  }
}
node {
  name: "save_3/Assign_18"
  op: "Identity"
  input: "save_3/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "save_3/Assign_19"
  op: "Identity"
  input: "save_3/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "save_3/Assign_20"
  op: "Identity"
  input: "save_3/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "save_3/Assign_21"
  op: "Identity"
  input: "save_3/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "save_3/Assign_22"
  op: "Identity"
  input: "save_3/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/b"
      }
    }
  }
}
node {
  name: "save_3/Assign_23"
  op: "Identity"
  input: "save_3/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/w"
      }
    }
  }
}
node {
  name: "save_3/Assign_24"
  op: "Identity"
  input: "save_3/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/b"
      }
    }
  }
}
node {
  name: "save_3/Assign_25"
  op: "Identity"
  input: "save_3/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/w"
      }
    }
  }
}
node {
  name: "save_3/Assign_26"
  op: "Identity"
  input: "save_3/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "save_3/Assign_27"
  op: "Identity"
  input: "save_3/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "save_3/Assign_28"
  op: "Identity"
  input: "save_3/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "save_3/Assign_29"
  op: "Identity"
  input: "save_3/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_3/restore_all"
  op: "NoOp"
  input: "^save_3/Assign"
  input: "^save_3/Assign_1"
  input: "^save_3/Assign_10"
  input: "^save_3/Assign_11"
  input: "^save_3/Assign_12"
  input: "^save_3/Assign_13"
  input: "^save_3/Assign_14"
  input: "^save_3/Assign_15"
  input: "^save_3/Assign_16"
  input: "^save_3/Assign_17"
  input: "^save_3/Assign_18"
  input: "^save_3/Assign_19"
  input: "^save_3/Assign_2"
  input: "^save_3/Assign_20"
  input: "^save_3/Assign_21"
  input: "^save_3/Assign_22"
  input: "^save_3/Assign_23"
  input: "^save_3/Assign_24"
  input: "^save_3/Assign_25"
  input: "^save_3/Assign_26"
  input: "^save_3/Assign_27"
  input: "^save_3/Assign_28"
  input: "^save_3/Assign_29"
  input: "^save_3/Assign_3"
  input: "^save_3/Assign_4"
  input: "^save_3/Assign_5"
  input: "^save_3/Assign_6"
  input: "^save_3/Assign_7"
  input: "^save_3/Assign_8"
  input: "^save_3/Assign_9"
}
node {
  name: "save_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_4/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "model/pi/b"
        string_val: "model/pi/logstd"
        string_val: "model/pi/w"
        string_val: "model/pi_fc0/b"
        string_val: "model/pi_fc0/w"
        string_val: "model/pi_fc1/b"
        string_val: "model/pi_fc1/w"
        string_val: "model/q/b"
        string_val: "model/q/w"
        string_val: "model/vf/b"
        string_val: "model/vf/w"
        string_val: "model/vf_fc0/b"
        string_val: "model/vf_fc0/w"
        string_val: "model/vf_fc1/b"
        string_val: "model/vf_fc1/w"
        string_val: "oldpi/model/pi/b"
        string_val: "oldpi/model/pi/logstd"
        string_val: "oldpi/model/pi/w"
        string_val: "oldpi/model/pi_fc0/b"
        string_val: "oldpi/model/pi_fc0/w"
        string_val: "oldpi/model/pi_fc1/b"
        string_val: "oldpi/model/pi_fc1/w"
        string_val: "oldpi/model/q/b"
        string_val: "oldpi/model/q/w"
        string_val: "oldpi/model/vf/b"
        string_val: "oldpi/model/vf/w"
        string_val: "oldpi/model/vf_fc0/b"
        string_val: "oldpi/model/vf_fc0/w"
        string_val: "oldpi/model/vf_fc1/b"
        string_val: "oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_4/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_4/SaveV2"
  op: "SaveV2"
  input: "save_4/Const"
  input: "save_4/SaveV2/tensor_names"
  input: "save_4/SaveV2/shape_and_slices"
  input: "model/pi/b"
  input: "model/pi/logstd"
  input: "model/pi/w"
  input: "model/pi_fc0/b"
  input: "model/pi_fc0/w"
  input: "model/pi_fc1/b"
  input: "model/pi_fc1/w"
  input: "model/q/b"
  input: "model/q/w"
  input: "model/vf/b"
  input: "model/vf/w"
  input: "model/vf_fc0/b"
  input: "model/vf_fc0/w"
  input: "model/vf_fc1/b"
  input: "model/vf_fc1/w"
  input: "oldpi/model/pi/b"
  input: "oldpi/model/pi/logstd"
  input: "oldpi/model/pi/w"
  input: "oldpi/model/pi_fc0/b"
  input: "oldpi/model/pi_fc0/w"
  input: "oldpi/model/pi_fc1/b"
  input: "oldpi/model/pi_fc1/w"
  input: "oldpi/model/q/b"
  input: "oldpi/model/q/w"
  input: "oldpi/model/vf/b"
  input: "oldpi/model/vf/w"
  input: "oldpi/model/vf_fc0/b"
  input: "oldpi/model/vf_fc0/w"
  input: "oldpi/model/vf_fc1/b"
  input: "oldpi/model/vf_fc1/w"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_4/control_dependency"
  op: "Identity"
  input: "save_4/Const"
  input: "^save_4/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_4/Const"
      }
    }
  }
}
node {
  name: "save_4/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "model/pi/b"
        string_val: "model/pi/logstd"
        string_val: "model/pi/w"
        string_val: "model/pi_fc0/b"
        string_val: "model/pi_fc0/w"
        string_val: "model/pi_fc1/b"
        string_val: "model/pi_fc1/w"
        string_val: "model/q/b"
        string_val: "model/q/w"
        string_val: "model/vf/b"
        string_val: "model/vf/w"
        string_val: "model/vf_fc0/b"
        string_val: "model/vf_fc0/w"
        string_val: "model/vf_fc1/b"
        string_val: "model/vf_fc1/w"
        string_val: "oldpi/model/pi/b"
        string_val: "oldpi/model/pi/logstd"
        string_val: "oldpi/model/pi/w"
        string_val: "oldpi/model/pi_fc0/b"
        string_val: "oldpi/model/pi_fc0/w"
        string_val: "oldpi/model/pi_fc1/b"
        string_val: "oldpi/model/pi_fc1/w"
        string_val: "oldpi/model/q/b"
        string_val: "oldpi/model/q/w"
        string_val: "oldpi/model/vf/b"
        string_val: "oldpi/model/vf/w"
        string_val: "oldpi/model/vf_fc0/b"
        string_val: "oldpi/model/vf_fc0/w"
        string_val: "oldpi/model/vf_fc1/b"
        string_val: "oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_4/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_4/RestoreV2"
  op: "RestoreV2"
  input: "save_4/Const"
  input: "save_4/RestoreV2/tensor_names"
  input: "save_4/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_4/Assign"
  op: "Identity"
  input: "save_4/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/b"
      }
    }
  }
}
node {
  name: "save_4/Assign_1"
  op: "Identity"
  input: "save_4/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/logstd"
      }
    }
  }
}
node {
  name: "save_4/Assign_2"
  op: "Identity"
  input: "save_4/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/w"
      }
    }
  }
}
node {
  name: "save_4/Assign_3"
  op: "Identity"
  input: "save_4/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "save_4/Assign_4"
  op: "Identity"
  input: "save_4/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "save_4/Assign_5"
  op: "Identity"
  input: "save_4/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "save_4/Assign_6"
  op: "Identity"
  input: "save_4/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "save_4/Assign_7"
  op: "Identity"
  input: "save_4/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/b"
      }
    }
  }
}
node {
  name: "save_4/Assign_8"
  op: "Identity"
  input: "save_4/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/w"
      }
    }
  }
}
node {
  name: "save_4/Assign_9"
  op: "Identity"
  input: "save_4/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/b"
      }
    }
  }
}
node {
  name: "save_4/Assign_10"
  op: "Identity"
  input: "save_4/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/w"
      }
    }
  }
}
node {
  name: "save_4/Assign_11"
  op: "Identity"
  input: "save_4/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "save_4/Assign_12"
  op: "Identity"
  input: "save_4/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "save_4/Assign_13"
  op: "Identity"
  input: "save_4/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "save_4/Assign_14"
  op: "Identity"
  input: "save_4/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_4/Assign_15"
  op: "Identity"
  input: "save_4/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/b"
      }
    }
  }
}
node {
  name: "save_4/Assign_16"
  op: "Identity"
  input: "save_4/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/logstd"
      }
    }
  }
}
node {
  name: "save_4/Assign_17"
  op: "Identity"
  input: "save_4/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/w"
      }
    }
  }
}
node {
  name: "save_4/Assign_18"
  op: "Identity"
  input: "save_4/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "save_4/Assign_19"
  op: "Identity"
  input: "save_4/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "save_4/Assign_20"
  op: "Identity"
  input: "save_4/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "save_4/Assign_21"
  op: "Identity"
  input: "save_4/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "save_4/Assign_22"
  op: "Identity"
  input: "save_4/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/b"
      }
    }
  }
}
node {
  name: "save_4/Assign_23"
  op: "Identity"
  input: "save_4/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/w"
      }
    }
  }
}
node {
  name: "save_4/Assign_24"
  op: "Identity"
  input: "save_4/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/b"
      }
    }
  }
}
node {
  name: "save_4/Assign_25"
  op: "Identity"
  input: "save_4/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/w"
      }
    }
  }
}
node {
  name: "save_4/Assign_26"
  op: "Identity"
  input: "save_4/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "save_4/Assign_27"
  op: "Identity"
  input: "save_4/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "save_4/Assign_28"
  op: "Identity"
  input: "save_4/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "save_4/Assign_29"
  op: "Identity"
  input: "save_4/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_4/restore_all"
  op: "NoOp"
  input: "^save_4/Assign"
  input: "^save_4/Assign_1"
  input: "^save_4/Assign_10"
  input: "^save_4/Assign_11"
  input: "^save_4/Assign_12"
  input: "^save_4/Assign_13"
  input: "^save_4/Assign_14"
  input: "^save_4/Assign_15"
  input: "^save_4/Assign_16"
  input: "^save_4/Assign_17"
  input: "^save_4/Assign_18"
  input: "^save_4/Assign_19"
  input: "^save_4/Assign_2"
  input: "^save_4/Assign_20"
  input: "^save_4/Assign_21"
  input: "^save_4/Assign_22"
  input: "^save_4/Assign_23"
  input: "^save_4/Assign_24"
  input: "^save_4/Assign_25"
  input: "^save_4/Assign_26"
  input: "^save_4/Assign_27"
  input: "^save_4/Assign_28"
  input: "^save_4/Assign_29"
  input: "^save_4/Assign_3"
  input: "^save_4/Assign_4"
  input: "^save_4/Assign_5"
  input: "^save_4/Assign_6"
  input: "^save_4/Assign_7"
  input: "^save_4/Assign_8"
  input: "^save_4/Assign_9"
}
node {
  name: "save_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_5/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "model/pi/b"
        string_val: "model/pi/logstd"
        string_val: "model/pi/w"
        string_val: "model/pi_fc0/b"
        string_val: "model/pi_fc0/w"
        string_val: "model/pi_fc1/b"
        string_val: "model/pi_fc1/w"
        string_val: "model/q/b"
        string_val: "model/q/w"
        string_val: "model/vf/b"
        string_val: "model/vf/w"
        string_val: "model/vf_fc0/b"
        string_val: "model/vf_fc0/w"
        string_val: "model/vf_fc1/b"
        string_val: "model/vf_fc1/w"
        string_val: "oldpi/model/pi/b"
        string_val: "oldpi/model/pi/logstd"
        string_val: "oldpi/model/pi/w"
        string_val: "oldpi/model/pi_fc0/b"
        string_val: "oldpi/model/pi_fc0/w"
        string_val: "oldpi/model/pi_fc1/b"
        string_val: "oldpi/model/pi_fc1/w"
        string_val: "oldpi/model/q/b"
        string_val: "oldpi/model/q/w"
        string_val: "oldpi/model/vf/b"
        string_val: "oldpi/model/vf/w"
        string_val: "oldpi/model/vf_fc0/b"
        string_val: "oldpi/model/vf_fc0/w"
        string_val: "oldpi/model/vf_fc1/b"
        string_val: "oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_5/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_5/SaveV2"
  op: "SaveV2"
  input: "save_5/Const"
  input: "save_5/SaveV2/tensor_names"
  input: "save_5/SaveV2/shape_and_slices"
  input: "model/pi/b"
  input: "model/pi/logstd"
  input: "model/pi/w"
  input: "model/pi_fc0/b"
  input: "model/pi_fc0/w"
  input: "model/pi_fc1/b"
  input: "model/pi_fc1/w"
  input: "model/q/b"
  input: "model/q/w"
  input: "model/vf/b"
  input: "model/vf/w"
  input: "model/vf_fc0/b"
  input: "model/vf_fc0/w"
  input: "model/vf_fc1/b"
  input: "model/vf_fc1/w"
  input: "oldpi/model/pi/b"
  input: "oldpi/model/pi/logstd"
  input: "oldpi/model/pi/w"
  input: "oldpi/model/pi_fc0/b"
  input: "oldpi/model/pi_fc0/w"
  input: "oldpi/model/pi_fc1/b"
  input: "oldpi/model/pi_fc1/w"
  input: "oldpi/model/q/b"
  input: "oldpi/model/q/w"
  input: "oldpi/model/vf/b"
  input: "oldpi/model/vf/w"
  input: "oldpi/model/vf_fc0/b"
  input: "oldpi/model/vf_fc0/w"
  input: "oldpi/model/vf_fc1/b"
  input: "oldpi/model/vf_fc1/w"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_5/control_dependency"
  op: "Identity"
  input: "save_5/Const"
  input: "^save_5/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_5/Const"
      }
    }
  }
}
node {
  name: "save_5/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "model/pi/b"
        string_val: "model/pi/logstd"
        string_val: "model/pi/w"
        string_val: "model/pi_fc0/b"
        string_val: "model/pi_fc0/w"
        string_val: "model/pi_fc1/b"
        string_val: "model/pi_fc1/w"
        string_val: "model/q/b"
        string_val: "model/q/w"
        string_val: "model/vf/b"
        string_val: "model/vf/w"
        string_val: "model/vf_fc0/b"
        string_val: "model/vf_fc0/w"
        string_val: "model/vf_fc1/b"
        string_val: "model/vf_fc1/w"
        string_val: "oldpi/model/pi/b"
        string_val: "oldpi/model/pi/logstd"
        string_val: "oldpi/model/pi/w"
        string_val: "oldpi/model/pi_fc0/b"
        string_val: "oldpi/model/pi_fc0/w"
        string_val: "oldpi/model/pi_fc1/b"
        string_val: "oldpi/model/pi_fc1/w"
        string_val: "oldpi/model/q/b"
        string_val: "oldpi/model/q/w"
        string_val: "oldpi/model/vf/b"
        string_val: "oldpi/model/vf/w"
        string_val: "oldpi/model/vf_fc0/b"
        string_val: "oldpi/model/vf_fc0/w"
        string_val: "oldpi/model/vf_fc1/b"
        string_val: "oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_5/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_5/RestoreV2"
  op: "RestoreV2"
  input: "save_5/Const"
  input: "save_5/RestoreV2/tensor_names"
  input: "save_5/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_5/Assign"
  op: "Identity"
  input: "save_5/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/b"
      }
    }
  }
}
node {
  name: "save_5/Assign_1"
  op: "Identity"
  input: "save_5/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/logstd"
      }
    }
  }
}
node {
  name: "save_5/Assign_2"
  op: "Identity"
  input: "save_5/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/w"
      }
    }
  }
}
node {
  name: "save_5/Assign_3"
  op: "Identity"
  input: "save_5/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "save_5/Assign_4"
  op: "Identity"
  input: "save_5/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "save_5/Assign_5"
  op: "Identity"
  input: "save_5/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "save_5/Assign_6"
  op: "Identity"
  input: "save_5/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "save_5/Assign_7"
  op: "Identity"
  input: "save_5/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/b"
      }
    }
  }
}
node {
  name: "save_5/Assign_8"
  op: "Identity"
  input: "save_5/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/w"
      }
    }
  }
}
node {
  name: "save_5/Assign_9"
  op: "Identity"
  input: "save_5/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/b"
      }
    }
  }
}
node {
  name: "save_5/Assign_10"
  op: "Identity"
  input: "save_5/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/w"
      }
    }
  }
}
node {
  name: "save_5/Assign_11"
  op: "Identity"
  input: "save_5/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "save_5/Assign_12"
  op: "Identity"
  input: "save_5/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "save_5/Assign_13"
  op: "Identity"
  input: "save_5/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "save_5/Assign_14"
  op: "Identity"
  input: "save_5/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_5/Assign_15"
  op: "Identity"
  input: "save_5/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/b"
      }
    }
  }
}
node {
  name: "save_5/Assign_16"
  op: "Identity"
  input: "save_5/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/logstd"
      }
    }
  }
}
node {
  name: "save_5/Assign_17"
  op: "Identity"
  input: "save_5/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/w"
      }
    }
  }
}
node {
  name: "save_5/Assign_18"
  op: "Identity"
  input: "save_5/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "save_5/Assign_19"
  op: "Identity"
  input: "save_5/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "save_5/Assign_20"
  op: "Identity"
  input: "save_5/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "save_5/Assign_21"
  op: "Identity"
  input: "save_5/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "save_5/Assign_22"
  op: "Identity"
  input: "save_5/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/b"
      }
    }
  }
}
node {
  name: "save_5/Assign_23"
  op: "Identity"
  input: "save_5/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/w"
      }
    }
  }
}
node {
  name: "save_5/Assign_24"
  op: "Identity"
  input: "save_5/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/b"
      }
    }
  }
}
node {
  name: "save_5/Assign_25"
  op: "Identity"
  input: "save_5/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/w"
      }
    }
  }
}
node {
  name: "save_5/Assign_26"
  op: "Identity"
  input: "save_5/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "save_5/Assign_27"
  op: "Identity"
  input: "save_5/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "save_5/Assign_28"
  op: "Identity"
  input: "save_5/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "save_5/Assign_29"
  op: "Identity"
  input: "save_5/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_5/restore_all"
  op: "NoOp"
  input: "^save_5/Assign"
  input: "^save_5/Assign_1"
  input: "^save_5/Assign_10"
  input: "^save_5/Assign_11"
  input: "^save_5/Assign_12"
  input: "^save_5/Assign_13"
  input: "^save_5/Assign_14"
  input: "^save_5/Assign_15"
  input: "^save_5/Assign_16"
  input: "^save_5/Assign_17"
  input: "^save_5/Assign_18"
  input: "^save_5/Assign_19"
  input: "^save_5/Assign_2"
  input: "^save_5/Assign_20"
  input: "^save_5/Assign_21"
  input: "^save_5/Assign_22"
  input: "^save_5/Assign_23"
  input: "^save_5/Assign_24"
  input: "^save_5/Assign_25"
  input: "^save_5/Assign_26"
  input: "^save_5/Assign_27"
  input: "^save_5/Assign_28"
  input: "^save_5/Assign_29"
  input: "^save_5/Assign_3"
  input: "^save_5/Assign_4"
  input: "^save_5/Assign_5"
  input: "^save_5/Assign_6"
  input: "^save_5/Assign_7"
  input: "^save_5/Assign_8"
  input: "^save_5/Assign_9"
}
node {
  name: "save_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_6/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_2c18fd82db4545e49d3079e8fa38d84b/part"
      }
    }
  }
}
node {
  name: "save_6/StringJoin"
  op: "StringJoin"
  input: "save_6/Const"
  input: "save_6/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save_6/num_shards"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save_6/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save_6/ShardedFilename"
  op: "ShardedFilename"
  input: "save_6/StringJoin"
  input: "save_6/ShardedFilename/shard"
  input: "save_6/num_shards"
}
node {
  name: "save_6/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "model/pi/b"
        string_val: "model/pi/logstd"
        string_val: "model/pi/w"
        string_val: "model/pi_fc0/b"
        string_val: "model/pi_fc0/w"
        string_val: "model/pi_fc1/b"
        string_val: "model/pi_fc1/w"
        string_val: "model/q/b"
        string_val: "model/q/w"
        string_val: "model/vf/b"
        string_val: "model/vf/w"
        string_val: "model/vf_fc0/b"
        string_val: "model/vf_fc0/w"
        string_val: "model/vf_fc1/b"
        string_val: "model/vf_fc1/w"
        string_val: "oldpi/model/pi/b"
        string_val: "oldpi/model/pi/logstd"
        string_val: "oldpi/model/pi/w"
        string_val: "oldpi/model/pi_fc0/b"
        string_val: "oldpi/model/pi_fc0/w"
        string_val: "oldpi/model/pi_fc1/b"
        string_val: "oldpi/model/pi_fc1/w"
        string_val: "oldpi/model/q/b"
        string_val: "oldpi/model/q/w"
        string_val: "oldpi/model/vf/b"
        string_val: "oldpi/model/vf/w"
        string_val: "oldpi/model/vf_fc0/b"
        string_val: "oldpi/model/vf_fc0/w"
        string_val: "oldpi/model/vf_fc1/b"
        string_val: "oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_6/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_6/SaveV2"
  op: "SaveV2"
  input: "save_6/ShardedFilename"
  input: "save_6/SaveV2/tensor_names"
  input: "save_6/SaveV2/shape_and_slices"
  input: "model/pi/b"
  input: "model/pi/logstd"
  input: "model/pi/w"
  input: "model/pi_fc0/b"
  input: "model/pi_fc0/w"
  input: "model/pi_fc1/b"
  input: "model/pi_fc1/w"
  input: "model/q/b"
  input: "model/q/w"
  input: "model/vf/b"
  input: "model/vf/w"
  input: "model/vf_fc0/b"
  input: "model/vf_fc0/w"
  input: "model/vf_fc1/b"
  input: "model/vf_fc1/w"
  input: "oldpi/model/pi/b"
  input: "oldpi/model/pi/logstd"
  input: "oldpi/model/pi/w"
  input: "oldpi/model/pi_fc0/b"
  input: "oldpi/model/pi_fc0/w"
  input: "oldpi/model/pi_fc1/b"
  input: "oldpi/model/pi_fc1/w"
  input: "oldpi/model/q/b"
  input: "oldpi/model/q/w"
  input: "oldpi/model/vf/b"
  input: "oldpi/model/vf/w"
  input: "oldpi/model/vf_fc0/b"
  input: "oldpi/model/vf_fc0/w"
  input: "oldpi/model/vf_fc1/b"
  input: "oldpi/model/vf_fc1/w"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_6/control_dependency"
  op: "Identity"
  input: "save_6/ShardedFilename"
  input: "^save_6/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_6/ShardedFilename"
      }
    }
  }
}
node {
  name: "save_6/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save_6/ShardedFilename"
  input: "^save_6/control_dependency"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save_6/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save_6/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save_6/Const"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save_6/Identity"
  op: "Identity"
  input: "save_6/Const"
  input: "^save_6/MergeV2Checkpoints"
  input: "^save_6/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "save_6/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "model/pi/b"
        string_val: "model/pi/logstd"
        string_val: "model/pi/w"
        string_val: "model/pi_fc0/b"
        string_val: "model/pi_fc0/w"
        string_val: "model/pi_fc1/b"
        string_val: "model/pi_fc1/w"
        string_val: "model/q/b"
        string_val: "model/q/w"
        string_val: "model/vf/b"
        string_val: "model/vf/w"
        string_val: "model/vf_fc0/b"
        string_val: "model/vf_fc0/w"
        string_val: "model/vf_fc1/b"
        string_val: "model/vf_fc1/w"
        string_val: "oldpi/model/pi/b"
        string_val: "oldpi/model/pi/logstd"
        string_val: "oldpi/model/pi/w"
        string_val: "oldpi/model/pi_fc0/b"
        string_val: "oldpi/model/pi_fc0/w"
        string_val: "oldpi/model/pi_fc1/b"
        string_val: "oldpi/model/pi_fc1/w"
        string_val: "oldpi/model/q/b"
        string_val: "oldpi/model/q/w"
        string_val: "oldpi/model/vf/b"
        string_val: "oldpi/model/vf/w"
        string_val: "oldpi/model/vf_fc0/b"
        string_val: "oldpi/model/vf_fc0/w"
        string_val: "oldpi/model/vf_fc1/b"
        string_val: "oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_6/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_6/RestoreV2"
  op: "RestoreV2"
  input: "save_6/Const"
  input: "save_6/RestoreV2/tensor_names"
  input: "save_6/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_6/Assign"
  op: "Identity"
  input: "save_6/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/b"
      }
    }
  }
}
node {
  name: "save_6/Assign_1"
  op: "Identity"
  input: "save_6/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/logstd"
      }
    }
  }
}
node {
  name: "save_6/Assign_2"
  op: "Identity"
  input: "save_6/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi/w"
      }
    }
  }
}
node {
  name: "save_6/Assign_3"
  op: "Identity"
  input: "save_6/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "save_6/Assign_4"
  op: "Identity"
  input: "save_6/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "save_6/Assign_5"
  op: "Identity"
  input: "save_6/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "save_6/Assign_6"
  op: "Identity"
  input: "save_6/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "save_6/Assign_7"
  op: "Identity"
  input: "save_6/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/b"
      }
    }
  }
}
node {
  name: "save_6/Assign_8"
  op: "Identity"
  input: "save_6/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/q/w"
      }
    }
  }
}
node {
  name: "save_6/Assign_9"
  op: "Identity"
  input: "save_6/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/b"
      }
    }
  }
}
node {
  name: "save_6/Assign_10"
  op: "Identity"
  input: "save_6/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf/w"
      }
    }
  }
}
node {
  name: "save_6/Assign_11"
  op: "Identity"
  input: "save_6/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "save_6/Assign_12"
  op: "Identity"
  input: "save_6/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "save_6/Assign_13"
  op: "Identity"
  input: "save_6/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "save_6/Assign_14"
  op: "Identity"
  input: "save_6/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_6/Assign_15"
  op: "Identity"
  input: "save_6/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/b"
      }
    }
  }
}
node {
  name: "save_6/Assign_16"
  op: "Identity"
  input: "save_6/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/logstd"
      }
    }
  }
}
node {
  name: "save_6/Assign_17"
  op: "Identity"
  input: "save_6/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi/w"
      }
    }
  }
}
node {
  name: "save_6/Assign_18"
  op: "Identity"
  input: "save_6/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/b"
      }
    }
  }
}
node {
  name: "save_6/Assign_19"
  op: "Identity"
  input: "save_6/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc0/w"
      }
    }
  }
}
node {
  name: "save_6/Assign_20"
  op: "Identity"
  input: "save_6/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/b"
      }
    }
  }
}
node {
  name: "save_6/Assign_21"
  op: "Identity"
  input: "save_6/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/pi_fc1/w"
      }
    }
  }
}
node {
  name: "save_6/Assign_22"
  op: "Identity"
  input: "save_6/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/b"
      }
    }
  }
}
node {
  name: "save_6/Assign_23"
  op: "Identity"
  input: "save_6/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/q/w"
      }
    }
  }
}
node {
  name: "save_6/Assign_24"
  op: "Identity"
  input: "save_6/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/b"
      }
    }
  }
}
node {
  name: "save_6/Assign_25"
  op: "Identity"
  input: "save_6/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf/w"
      }
    }
  }
}
node {
  name: "save_6/Assign_26"
  op: "Identity"
  input: "save_6/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/b"
      }
    }
  }
}
node {
  name: "save_6/Assign_27"
  op: "Identity"
  input: "save_6/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc0/w"
      }
    }
  }
}
node {
  name: "save_6/Assign_28"
  op: "Identity"
  input: "save_6/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/b"
      }
    }
  }
}
node {
  name: "save_6/Assign_29"
  op: "Identity"
  input: "save_6/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@oldpi/model/vf_fc1/w"
      }
    }
  }
}
node {
  name: "save_6/restore_shard"
  op: "NoOp"
  input: "^save_6/Assign"
  input: "^save_6/Assign_1"
  input: "^save_6/Assign_10"
  input: "^save_6/Assign_11"
  input: "^save_6/Assign_12"
  input: "^save_6/Assign_13"
  input: "^save_6/Assign_14"
  input: "^save_6/Assign_15"
  input: "^save_6/Assign_16"
  input: "^save_6/Assign_17"
  input: "^save_6/Assign_18"
  input: "^save_6/Assign_19"
  input: "^save_6/Assign_2"
  input: "^save_6/Assign_20"
  input: "^save_6/Assign_21"
  input: "^save_6/Assign_22"
  input: "^save_6/Assign_23"
  input: "^save_6/Assign_24"
  input: "^save_6/Assign_25"
  input: "^save_6/Assign_26"
  input: "^save_6/Assign_27"
  input: "^save_6/Assign_28"
  input: "^save_6/Assign_29"
  input: "^save_6/Assign_3"
  input: "^save_6/Assign_4"
  input: "^save_6/Assign_5"
  input: "^save_6/Assign_6"
  input: "^save_6/Assign_7"
  input: "^save_6/Assign_8"
  input: "^save_6/Assign_9"
}
node {
  name: "save_6/restore_all"
  op: "NoOp"
  input: "^save_6/restore_shard"
}
library {
}
